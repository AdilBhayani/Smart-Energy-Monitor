
group37.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000aea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a96  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b1c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003d7  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000267  00000000  00000000  00000f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000339  00000000  00000000  000011f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  0000152c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000223  00000000  00000000  000015c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000025f  00000000  00000000  000017eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001a4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  24:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  34:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <log+0x68>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61
  f6:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <main>
  fa:	0c 94 49 05 	jmp	0xa92	; 0xa92 <_exit>

000000fe <__bad_interrupt>:
  fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <uart_init>:
 #define F_CPU 16000000UL
 #include <util/delay.h>

 //Initializes the UART
 void uart_init() {
	UBRR0H = 0;
 102:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = 103;
 106:	87 e6       	ldi	r24, 0x67	; 103
 108:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B|= (1<<TXEN0);	//Sets the Transmit Enable to 1
 10c:	e1 ec       	ldi	r30, 0xC1	; 193
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	88 60       	ori	r24, 0x08	; 8
 114:	80 83       	st	Z, r24
	UCSR0C|= (1<<UCSZ00)|(1<<UCSZ01);	//Sets an 8-bit character
 116:	e2 ec       	ldi	r30, 0xC2	; 194
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	86 60       	ori	r24, 0x06	; 6
 11e:	80 83       	st	Z, r24
 120:	08 95       	ret

00000122 <uart_transmit>:
 }

 //Transmits the data
 void uart_transmit(uint8_t data) {
	while(!((1<<UDRE0) && UCSR0A));	//When UDRE0 is empty, put data value into buffer to be sent
 122:	e0 ec       	ldi	r30, 0xC0	; 192
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	99 23       	and	r25, r25
 12a:	e9 f3       	breq	.-6      	; 0x126 <uart_transmit+0x4>
		UDR0 = data;
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 130:	08 95       	ret

00000132 <find_decimal>:
 }

 unsigned int find_decimal(float data) {
 132:	cf 92       	push	r12
 134:	df 92       	push	r13
 136:	ef 92       	push	r14
 138:	ff 92       	push	r15
 13a:	6b 01       	movw	r12, r22
 13c:	7c 01       	movw	r14, r24
	if (data < 10) { return 0; }
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	40 e2       	ldi	r20, 0x20	; 32
 144:	51 e4       	ldi	r21, 0x41	; 65
 146:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__cmpsf2>
 14a:	88 23       	and	r24, r24
 14c:	04 f1       	brlt	.+64     	; 0x18e <find_decimal+0x5c>
	if (data < 100) { return 1; }
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	48 ec       	ldi	r20, 0xC8	; 200
 154:	52 e4       	ldi	r21, 0x42	; 66
 156:	c7 01       	movw	r24, r14
 158:	b6 01       	movw	r22, r12
 15a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__cmpsf2>
 15e:	88 23       	and	r24, r24
 160:	cc f0       	brlt	.+50     	; 0x194 <find_decimal+0x62>
	if (data < 1000) { return 2; }
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	4a e7       	ldi	r20, 0x7A	; 122
 168:	54 e4       	ldi	r21, 0x44	; 68
 16a:	c7 01       	movw	r24, r14
 16c:	b6 01       	movw	r22, r12
 16e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__cmpsf2>
	return 3;
 172:	08 2e       	mov	r0, r24
 174:	00 0c       	add	r0, r0
 176:	99 0b       	sbc	r25, r25
 178:	88 27       	eor	r24, r24
 17a:	99 0f       	add	r25, r25
 17c:	88 1f       	adc	r24, r24
 17e:	99 27       	eor	r25, r25
 180:	23 e0       	ldi	r18, 0x03	; 3
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	a9 01       	movw	r20, r18
 186:	48 1b       	sub	r20, r24
 188:	59 0b       	sbc	r21, r25
 18a:	ca 01       	movw	r24, r20
 18c:	05 c0       	rjmp	.+10     	; 0x198 <find_decimal+0x66>
	while(!((1<<UDRE0) && UCSR0A));	//When UDRE0 is empty, put data value into buffer to be sent
		UDR0 = data;
 }

 unsigned int find_decimal(float data) {
	if (data < 10) { return 0; }
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <find_decimal+0x66>
	if (data < 100) { return 1; }
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
	if (data < 1000) { return 2; }
	return 3;
 }
 198:	ff 90       	pop	r15
 19a:	ef 90       	pop	r14
 19c:	df 90       	pop	r13
 19e:	cf 90       	pop	r12
 1a0:	08 95       	ret

000001a2 <wololo>:

 //Converts our parameters into the value to send
 unsigned int wololo(uint8_t input, uint8_t position, uint8_t decimal) {
	unsigned int output = input;
 1a2:	90 e0       	ldi	r25, 0x00	; 0
	if (decimal == 1) { output += 16; }
 1a4:	41 30       	cpi	r20, 0x01	; 1
 1a6:	09 f4       	brne	.+2      	; 0x1aa <wololo+0x8>
 1a8:	40 96       	adiw	r24, 0x10	; 16
	if (position == 0) { output += 96; }
 1aa:	61 11       	cpse	r22, r1
 1ac:	03 c0       	rjmp	.+6      	; 0x1b4 <wololo+0x12>
 1ae:	80 5a       	subi	r24, 0xA0	; 160
 1b0:	9f 4f       	sbci	r25, 0xFF	; 255
 1b2:	08 95       	ret
	if (position == 1) { output += 64; }
 1b4:	61 30       	cpi	r22, 0x01	; 1
 1b6:	19 f4       	brne	.+6      	; 0x1be <wololo+0x1c>
 1b8:	80 5c       	subi	r24, 0xC0	; 192
 1ba:	9f 4f       	sbci	r25, 0xFF	; 255
 1bc:	08 95       	ret
	if (position == 2) { output += 32; }
 1be:	62 30       	cpi	r22, 0x02	; 2
 1c0:	09 f4       	brne	.+2      	; 0x1c4 <wololo+0x22>
 1c2:	80 96       	adiw	r24, 0x20	; 32
	return output;
 1c4:	08 95       	ret

000001c6 <main>:
#include <math.h>
#include "prototypes37.h"
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void) {
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	00 d0       	rcall	.+0      	; 0x1cc <main+0x6>
 1cc:	00 d0       	rcall	.+0      	; 0x1ce <main+0x8>
 1ce:	cd b7       	in	r28, 0x3d	; 61
 1d0:	de b7       	in	r29, 0x3e	; 62
	uart_init();	//Tells me the position of the data to send
 1d2:	0e 94 81 00 	call	0x102	; 0x102 <uart_init>
	uint8_t hasDecimal = 0;
	uint8_t dataArray[4];
	uint8_t index = 0;
	uint8_t decimalPos = 0;

	decimalPos = find_decimal(dataFloat);
 1d6:	60 e0       	ldi	r22, 0x00	; 0
 1d8:	78 e4       	ldi	r23, 0x48	; 72
 1da:	88 ed       	ldi	r24, 0xD8	; 216
 1dc:	95 e4       	ldi	r25, 0x45	; 69
 1de:	0e 94 99 00 	call	0x132	; 0x132 <find_decimal>
 1e2:	5c 01       	movw	r10, r24
 1e4:	bb 24       	eor	r11, r11
	dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5);
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	6c 01       	movw	r12, r24
 1ec:	ca 18       	sub	r12, r10
 1ee:	db 08       	sbc	r13, r11
 1f0:	b6 01       	movw	r22, r12
 1f2:	0d 2c       	mov	r0, r13
 1f4:	00 0c       	add	r0, r0
 1f6:	88 0b       	sbc	r24, r24
 1f8:	99 0b       	sbc	r25, r25
 1fa:	0e 94 26 02 	call	0x44c	; 0x44c <__floatsisf>
 1fe:	9b 01       	movw	r18, r22
 200:	ac 01       	movw	r20, r24
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	80 e2       	ldi	r24, 0x20	; 32
 208:	91 e4       	ldi	r25, 0x41	; 65
 20a:	0e 94 43 03 	call	0x686	; 0x686 <pow>
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	38 e4       	ldi	r19, 0x48	; 72
 212:	48 ed       	ldi	r20, 0xD8	; 216
 214:	55 e4       	ldi	r21, 0x45	; 69
 216:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3>
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	40 e0       	ldi	r20, 0x00	; 0
 220:	5f e3       	ldi	r21, 0x3F	; 63
 222:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__addsf3>
 226:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fixsfsi>
 22a:	8b 01       	movw	r16, r22
 22c:	4e 01       	movw	r8, r28
 22e:	25 e0       	ldi	r18, 0x05	; 5
 230:	82 0e       	add	r8, r18
 232:	91 1c       	adc	r9, r1

	for (int i=3;i>=0;i--) {
 234:	0f 2e       	mov	r0, r31
 236:	f3 e0       	ldi	r31, 0x03	; 3
 238:	ef 2e       	mov	r14, r31
 23a:	f1 2c       	mov	r15, r1
 23c:	f0 2d       	mov	r31, r0
		if ((decimalPos == i) && ((3-decimalPos) > 0)) {
			hasDecimal = 1;
		} else {
			hasDecimal = 0;
 23e:	71 2c       	mov	r7, r1

	decimalPos = find_decimal(dataFloat);
	dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5);

	for (int i=3;i>=0;i--) {
		if ((decimalPos == i) && ((3-decimalPos) > 0)) {
 240:	66 24       	eor	r6, r6
 242:	63 94       	inc	r6
 244:	ea 14       	cp	r14, r10
 246:	fb 04       	cpc	r15, r11
 248:	31 f4       	brne	.+12     	; 0x256 <main+0x90>
 24a:	46 2d       	mov	r20, r6
 24c:	1c 14       	cp	r1, r12
 24e:	1d 04       	cpc	r1, r13
 250:	1c f0       	brlt	.+6      	; 0x258 <main+0x92>
 252:	47 2d       	mov	r20, r7
 254:	01 c0       	rjmp	.+2      	; 0x258 <main+0x92>
			hasDecimal = 1;
		} else {
			hasDecimal = 0;
 256:	47 2d       	mov	r20, r7
		}
		dataArray[i] = wololo(dataInt%10, i, hasDecimal);
 258:	98 01       	movw	r18, r16
 25a:	ad ec       	ldi	r26, 0xCD	; 205
 25c:	bc ec       	ldi	r27, 0xCC	; 204
 25e:	0e 94 3a 05 	call	0xa74	; 0xa74 <__umulhisi3>
 262:	96 95       	lsr	r25
 264:	87 95       	ror	r24
 266:	96 95       	lsr	r25
 268:	87 95       	ror	r24
 26a:	96 95       	lsr	r25
 26c:	87 95       	ror	r24
 26e:	9c 01       	movw	r18, r24
 270:	22 0f       	add	r18, r18
 272:	33 1f       	adc	r19, r19
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	82 0f       	add	r24, r18
 282:	93 1f       	adc	r25, r19
 284:	6e 2d       	mov	r22, r14
 286:	e0 2f       	mov	r30, r16
 288:	e8 1b       	sub	r30, r24
 28a:	8e 2f       	mov	r24, r30
 28c:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <wololo>
 290:	f4 01       	movw	r30, r8
 292:	82 93       	st	-Z, r24
 294:	4f 01       	movw	r8, r30
		dataInt = dataInt/10;
 296:	98 01       	movw	r18, r16
 298:	ad ec       	ldi	r26, 0xCD	; 205
 29a:	bc ec       	ldi	r27, 0xCC	; 204
 29c:	0e 94 3a 05 	call	0xa74	; 0xa74 <__umulhisi3>
 2a0:	8c 01       	movw	r16, r24
 2a2:	16 95       	lsr	r17
 2a4:	07 95       	ror	r16
 2a6:	16 95       	lsr	r17
 2a8:	07 95       	ror	r16
 2aa:	16 95       	lsr	r17
 2ac:	07 95       	ror	r16
	uint8_t decimalPos = 0;

	decimalPos = find_decimal(dataFloat);
	dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5);

	for (int i=3;i>=0;i--) {
 2ae:	f1 e0       	ldi	r31, 0x01	; 1
 2b0:	ef 1a       	sub	r14, r31
 2b2:	f1 08       	sbc	r15, r1
 2b4:	38 f6       	brcc	.-114    	; 0x244 <main+0x7e>
 2b6:	14 c0       	rjmp	.+40     	; 0x2e0 <main+0x11a>
		dataArray[i] = wololo(dataInt%10, i, hasDecimal);
		dataInt = dataInt/10;
	}

    while (1) {
		uint8_t data = dataArray[index];	//Get the data to send	
 2b8:	e1 e0       	ldi	r30, 0x01	; 1
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	ec 0f       	add	r30, r28
 2be:	fd 1f       	adc	r31, r29
 2c0:	e1 0f       	add	r30, r17
 2c2:	f1 1d       	adc	r31, r1
		uart_transmit(data);
 2c4:	80 81       	ld	r24, Z
 2c6:	0e 94 91 00 	call	0x122	; 0x122 <uart_transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ca:	8f ed       	ldi	r24, 0xDF	; 223
 2cc:	9e e2       	ldi	r25, 0x2E	; 46
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <main+0x108>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <main+0x10e>
 2d4:	00 00       	nop
		_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
		index++;
 2d6:	1f 5f       	subi	r17, 0xFF	; 255
		if (index == 4) {
 2d8:	14 30       	cpi	r17, 0x04	; 4
 2da:	71 f7       	brne	.-36     	; 0x2b8 <main+0xf2>
			index = 0;
 2dc:	10 2f       	mov	r17, r16
 2de:	ec cf       	rjmp	.-40     	; 0x2b8 <main+0xf2>
		dataInt = dataInt/10;
	}

    while (1) {
		uint8_t data = dataArray[index];	//Get the data to send	
		uart_transmit(data);
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	0e 94 91 00 	call	0x122	; 0x122 <uart_transmit>
 2e6:	ef ed       	ldi	r30, 0xDF	; 223
 2e8:	fe e2       	ldi	r31, 0x2E	; 46
 2ea:	31 97       	sbiw	r30, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <main+0x124>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <main+0x12a>
 2f0:	00 00       	nop
		_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
		index++;
 2f2:	11 e0       	ldi	r17, 0x01	; 1
		if (index == 4) {
			index = 0;
 2f4:	00 e0       	ldi	r16, 0x00	; 0
 2f6:	e0 cf       	rjmp	.-64     	; 0x2b8 <main+0xf2>

000002f8 <__subsf3>:
 2f8:	50 58       	subi	r21, 0x80	; 128

000002fa <__addsf3>:
 2fa:	bb 27       	eor	r27, r27
 2fc:	aa 27       	eor	r26, r26
 2fe:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3x>
 302:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>
 306:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_pscA>
 30a:	38 f0       	brcs	.+14     	; 0x31a <__addsf3+0x20>
 30c:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscB>
 310:	20 f0       	brcs	.+8      	; 0x31a <__addsf3+0x20>
 312:	39 f4       	brne	.+14     	; 0x322 <__addsf3+0x28>
 314:	9f 3f       	cpi	r25, 0xFF	; 255
 316:	19 f4       	brne	.+6      	; 0x31e <__addsf3+0x24>
 318:	26 f4       	brtc	.+8      	; 0x322 <__addsf3+0x28>
 31a:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>
 31e:	0e f4       	brtc	.+2      	; 0x322 <__addsf3+0x28>
 320:	e0 95       	com	r30
 322:	e7 fb       	bst	r30, 7
 324:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>

00000328 <__addsf3x>:
 328:	e9 2f       	mov	r30, r25
 32a:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_split3>
 32e:	58 f3       	brcs	.-42     	; 0x306 <__addsf3+0xc>
 330:	ba 17       	cp	r27, r26
 332:	62 07       	cpc	r22, r18
 334:	73 07       	cpc	r23, r19
 336:	84 07       	cpc	r24, r20
 338:	95 07       	cpc	r25, r21
 33a:	20 f0       	brcs	.+8      	; 0x344 <__addsf3x+0x1c>
 33c:	79 f4       	brne	.+30     	; 0x35c <__addsf3x+0x34>
 33e:	a6 f5       	brtc	.+104    	; 0x3a8 <__addsf3x+0x80>
 340:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_zero>
 344:	0e f4       	brtc	.+2      	; 0x348 <__addsf3x+0x20>
 346:	e0 95       	com	r30
 348:	0b 2e       	mov	r0, r27
 34a:	ba 2f       	mov	r27, r26
 34c:	a0 2d       	mov	r26, r0
 34e:	0b 01       	movw	r0, r22
 350:	b9 01       	movw	r22, r18
 352:	90 01       	movw	r18, r0
 354:	0c 01       	movw	r0, r24
 356:	ca 01       	movw	r24, r20
 358:	a0 01       	movw	r20, r0
 35a:	11 24       	eor	r1, r1
 35c:	ff 27       	eor	r31, r31
 35e:	59 1b       	sub	r21, r25
 360:	99 f0       	breq	.+38     	; 0x388 <__addsf3x+0x60>
 362:	59 3f       	cpi	r21, 0xF9	; 249
 364:	50 f4       	brcc	.+20     	; 0x37a <__addsf3x+0x52>
 366:	50 3e       	cpi	r21, 0xE0	; 224
 368:	68 f1       	brcs	.+90     	; 0x3c4 <__addsf3x+0x9c>
 36a:	1a 16       	cp	r1, r26
 36c:	f0 40       	sbci	r31, 0x00	; 0
 36e:	a2 2f       	mov	r26, r18
 370:	23 2f       	mov	r18, r19
 372:	34 2f       	mov	r19, r20
 374:	44 27       	eor	r20, r20
 376:	58 5f       	subi	r21, 0xF8	; 248
 378:	f3 cf       	rjmp	.-26     	; 0x360 <__addsf3x+0x38>
 37a:	46 95       	lsr	r20
 37c:	37 95       	ror	r19
 37e:	27 95       	ror	r18
 380:	a7 95       	ror	r26
 382:	f0 40       	sbci	r31, 0x00	; 0
 384:	53 95       	inc	r21
 386:	c9 f7       	brne	.-14     	; 0x37a <__addsf3x+0x52>
 388:	7e f4       	brtc	.+30     	; 0x3a8 <__addsf3x+0x80>
 38a:	1f 16       	cp	r1, r31
 38c:	ba 0b       	sbc	r27, r26
 38e:	62 0b       	sbc	r22, r18
 390:	73 0b       	sbc	r23, r19
 392:	84 0b       	sbc	r24, r20
 394:	ba f0       	brmi	.+46     	; 0x3c4 <__addsf3x+0x9c>
 396:	91 50       	subi	r25, 0x01	; 1
 398:	a1 f0       	breq	.+40     	; 0x3c2 <__addsf3x+0x9a>
 39a:	ff 0f       	add	r31, r31
 39c:	bb 1f       	adc	r27, r27
 39e:	66 1f       	adc	r22, r22
 3a0:	77 1f       	adc	r23, r23
 3a2:	88 1f       	adc	r24, r24
 3a4:	c2 f7       	brpl	.-16     	; 0x396 <__addsf3x+0x6e>
 3a6:	0e c0       	rjmp	.+28     	; 0x3c4 <__addsf3x+0x9c>
 3a8:	ba 0f       	add	r27, r26
 3aa:	62 1f       	adc	r22, r18
 3ac:	73 1f       	adc	r23, r19
 3ae:	84 1f       	adc	r24, r20
 3b0:	48 f4       	brcc	.+18     	; 0x3c4 <__addsf3x+0x9c>
 3b2:	87 95       	ror	r24
 3b4:	77 95       	ror	r23
 3b6:	67 95       	ror	r22
 3b8:	b7 95       	ror	r27
 3ba:	f7 95       	ror	r31
 3bc:	9e 3f       	cpi	r25, 0xFE	; 254
 3be:	08 f0       	brcs	.+2      	; 0x3c2 <__addsf3x+0x9a>
 3c0:	b0 cf       	rjmp	.-160    	; 0x322 <__addsf3+0x28>
 3c2:	93 95       	inc	r25
 3c4:	88 0f       	add	r24, r24
 3c6:	08 f0       	brcs	.+2      	; 0x3ca <__addsf3x+0xa2>
 3c8:	99 27       	eor	r25, r25
 3ca:	ee 0f       	add	r30, r30
 3cc:	97 95       	ror	r25
 3ce:	87 95       	ror	r24
 3d0:	08 95       	ret

000003d2 <__cmpsf2>:
 3d2:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__fp_cmp>
 3d6:	08 f4       	brcc	.+2      	; 0x3da <__cmpsf2+0x8>
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	08 95       	ret

000003dc <__fixsfsi>:
 3dc:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__fixunssfsi>
 3e0:	68 94       	set
 3e2:	b1 11       	cpse	r27, r1
 3e4:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 3e8:	08 95       	ret

000003ea <__fixunssfsi>:
 3ea:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_splitA>
 3ee:	88 f0       	brcs	.+34     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
 3f0:	9f 57       	subi	r25, 0x7F	; 127
 3f2:	98 f0       	brcs	.+38     	; 0x41a <__FUSE_REGION_LENGTH__+0x1a>
 3f4:	b9 2f       	mov	r27, r25
 3f6:	99 27       	eor	r25, r25
 3f8:	b7 51       	subi	r27, 0x17	; 23
 3fa:	b0 f0       	brcs	.+44     	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
 3fc:	e1 f0       	breq	.+56     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 3fe:	66 0f       	add	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	99 1f       	adc	r25, r25
 406:	1a f0       	brmi	.+6      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 408:	ba 95       	dec	r27
 40a:	c9 f7       	brne	.-14     	; 0x3fe <__fixunssfsi+0x14>
 40c:	14 c0       	rjmp	.+40     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 40e:	b1 30       	cpi	r27, 0x01	; 1
 410:	91 f0       	breq	.+36     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 412:	0e 94 cf 02 	call	0x59e	; 0x59e <__fp_zero>
 416:	b1 e0       	ldi	r27, 0x01	; 1
 418:	08 95       	ret
 41a:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_zero>
 41e:	67 2f       	mov	r22, r23
 420:	78 2f       	mov	r23, r24
 422:	88 27       	eor	r24, r24
 424:	b8 5f       	subi	r27, 0xF8	; 248
 426:	39 f0       	breq	.+14     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 428:	b9 3f       	cpi	r27, 0xF9	; 249
 42a:	cc f3       	brlt	.-14     	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 42c:	86 95       	lsr	r24
 42e:	77 95       	ror	r23
 430:	67 95       	ror	r22
 432:	b3 95       	inc	r27
 434:	d9 f7       	brne	.-10     	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 436:	3e f4       	brtc	.+14     	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 438:	90 95       	com	r25
 43a:	80 95       	com	r24
 43c:	70 95       	com	r23
 43e:	61 95       	neg	r22
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	08 95       	ret

00000448 <__floatunsisf>:
 448:	e8 94       	clt
 44a:	09 c0       	rjmp	.+18     	; 0x45e <__floatsisf+0x12>

0000044c <__floatsisf>:
 44c:	97 fb       	bst	r25, 7
 44e:	3e f4       	brtc	.+14     	; 0x45e <__floatsisf+0x12>
 450:	90 95       	com	r25
 452:	80 95       	com	r24
 454:	70 95       	com	r23
 456:	61 95       	neg	r22
 458:	7f 4f       	sbci	r23, 0xFF	; 255
 45a:	8f 4f       	sbci	r24, 0xFF	; 255
 45c:	9f 4f       	sbci	r25, 0xFF	; 255
 45e:	99 23       	and	r25, r25
 460:	a9 f0       	breq	.+42     	; 0x48c <__floatsisf+0x40>
 462:	f9 2f       	mov	r31, r25
 464:	96 e9       	ldi	r25, 0x96	; 150
 466:	bb 27       	eor	r27, r27
 468:	93 95       	inc	r25
 46a:	f6 95       	lsr	r31
 46c:	87 95       	ror	r24
 46e:	77 95       	ror	r23
 470:	67 95       	ror	r22
 472:	b7 95       	ror	r27
 474:	f1 11       	cpse	r31, r1
 476:	f8 cf       	rjmp	.-16     	; 0x468 <__floatsisf+0x1c>
 478:	fa f4       	brpl	.+62     	; 0x4b8 <__floatsisf+0x6c>
 47a:	bb 0f       	add	r27, r27
 47c:	11 f4       	brne	.+4      	; 0x482 <__floatsisf+0x36>
 47e:	60 ff       	sbrs	r22, 0
 480:	1b c0       	rjmp	.+54     	; 0x4b8 <__floatsisf+0x6c>
 482:	6f 5f       	subi	r22, 0xFF	; 255
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	8f 4f       	sbci	r24, 0xFF	; 255
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	16 c0       	rjmp	.+44     	; 0x4b8 <__floatsisf+0x6c>
 48c:	88 23       	and	r24, r24
 48e:	11 f0       	breq	.+4      	; 0x494 <__floatsisf+0x48>
 490:	96 e9       	ldi	r25, 0x96	; 150
 492:	11 c0       	rjmp	.+34     	; 0x4b6 <__floatsisf+0x6a>
 494:	77 23       	and	r23, r23
 496:	21 f0       	breq	.+8      	; 0x4a0 <__floatsisf+0x54>
 498:	9e e8       	ldi	r25, 0x8E	; 142
 49a:	87 2f       	mov	r24, r23
 49c:	76 2f       	mov	r23, r22
 49e:	05 c0       	rjmp	.+10     	; 0x4aa <__floatsisf+0x5e>
 4a0:	66 23       	and	r22, r22
 4a2:	71 f0       	breq	.+28     	; 0x4c0 <__floatsisf+0x74>
 4a4:	96 e8       	ldi	r25, 0x86	; 134
 4a6:	86 2f       	mov	r24, r22
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	2a f0       	brmi	.+10     	; 0x4b8 <__floatsisf+0x6c>
 4ae:	9a 95       	dec	r25
 4b0:	66 0f       	add	r22, r22
 4b2:	77 1f       	adc	r23, r23
 4b4:	88 1f       	adc	r24, r24
 4b6:	da f7       	brpl	.-10     	; 0x4ae <__floatsisf+0x62>
 4b8:	88 0f       	add	r24, r24
 4ba:	96 95       	lsr	r25
 4bc:	87 95       	ror	r24
 4be:	97 f9       	bld	r25, 7
 4c0:	08 95       	ret

000004c2 <__fp_cmp>:
 4c2:	99 0f       	add	r25, r25
 4c4:	00 08       	sbc	r0, r0
 4c6:	55 0f       	add	r21, r21
 4c8:	aa 0b       	sbc	r26, r26
 4ca:	e0 e8       	ldi	r30, 0x80	; 128
 4cc:	fe ef       	ldi	r31, 0xFE	; 254
 4ce:	16 16       	cp	r1, r22
 4d0:	17 06       	cpc	r1, r23
 4d2:	e8 07       	cpc	r30, r24
 4d4:	f9 07       	cpc	r31, r25
 4d6:	c0 f0       	brcs	.+48     	; 0x508 <__fp_cmp+0x46>
 4d8:	12 16       	cp	r1, r18
 4da:	13 06       	cpc	r1, r19
 4dc:	e4 07       	cpc	r30, r20
 4de:	f5 07       	cpc	r31, r21
 4e0:	98 f0       	brcs	.+38     	; 0x508 <__fp_cmp+0x46>
 4e2:	62 1b       	sub	r22, r18
 4e4:	73 0b       	sbc	r23, r19
 4e6:	84 0b       	sbc	r24, r20
 4e8:	95 0b       	sbc	r25, r21
 4ea:	39 f4       	brne	.+14     	; 0x4fa <__fp_cmp+0x38>
 4ec:	0a 26       	eor	r0, r26
 4ee:	61 f0       	breq	.+24     	; 0x508 <__fp_cmp+0x46>
 4f0:	23 2b       	or	r18, r19
 4f2:	24 2b       	or	r18, r20
 4f4:	25 2b       	or	r18, r21
 4f6:	21 f4       	brne	.+8      	; 0x500 <__fp_cmp+0x3e>
 4f8:	08 95       	ret
 4fa:	0a 26       	eor	r0, r26
 4fc:	09 f4       	brne	.+2      	; 0x500 <__fp_cmp+0x3e>
 4fe:	a1 40       	sbci	r26, 0x01	; 1
 500:	a6 95       	lsr	r26
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	81 1d       	adc	r24, r1
 506:	81 1d       	adc	r24, r1
 508:	08 95       	ret

0000050a <__fp_inf>:
 50a:	97 f9       	bld	r25, 7
 50c:	9f 67       	ori	r25, 0x7F	; 127
 50e:	80 e8       	ldi	r24, 0x80	; 128
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	08 95       	ret

00000516 <__fp_nan>:
 516:	9f ef       	ldi	r25, 0xFF	; 255
 518:	80 ec       	ldi	r24, 0xC0	; 192
 51a:	08 95       	ret

0000051c <__fp_pscA>:
 51c:	00 24       	eor	r0, r0
 51e:	0a 94       	dec	r0
 520:	16 16       	cp	r1, r22
 522:	17 06       	cpc	r1, r23
 524:	18 06       	cpc	r1, r24
 526:	09 06       	cpc	r0, r25
 528:	08 95       	ret

0000052a <__fp_pscB>:
 52a:	00 24       	eor	r0, r0
 52c:	0a 94       	dec	r0
 52e:	12 16       	cp	r1, r18
 530:	13 06       	cpc	r1, r19
 532:	14 06       	cpc	r1, r20
 534:	05 06       	cpc	r0, r21
 536:	08 95       	ret

00000538 <__fp_round>:
 538:	09 2e       	mov	r0, r25
 53a:	03 94       	inc	r0
 53c:	00 0c       	add	r0, r0
 53e:	11 f4       	brne	.+4      	; 0x544 <__fp_round+0xc>
 540:	88 23       	and	r24, r24
 542:	52 f0       	brmi	.+20     	; 0x558 <__fp_round+0x20>
 544:	bb 0f       	add	r27, r27
 546:	40 f4       	brcc	.+16     	; 0x558 <__fp_round+0x20>
 548:	bf 2b       	or	r27, r31
 54a:	11 f4       	brne	.+4      	; 0x550 <__fp_round+0x18>
 54c:	60 ff       	sbrs	r22, 0
 54e:	04 c0       	rjmp	.+8      	; 0x558 <__fp_round+0x20>
 550:	6f 5f       	subi	r22, 0xFF	; 255
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	08 95       	ret

0000055a <__fp_split3>:
 55a:	57 fd       	sbrc	r21, 7
 55c:	90 58       	subi	r25, 0x80	; 128
 55e:	44 0f       	add	r20, r20
 560:	55 1f       	adc	r21, r21
 562:	59 f0       	breq	.+22     	; 0x57a <__fp_splitA+0x10>
 564:	5f 3f       	cpi	r21, 0xFF	; 255
 566:	71 f0       	breq	.+28     	; 0x584 <__fp_splitA+0x1a>
 568:	47 95       	ror	r20

0000056a <__fp_splitA>:
 56a:	88 0f       	add	r24, r24
 56c:	97 fb       	bst	r25, 7
 56e:	99 1f       	adc	r25, r25
 570:	61 f0       	breq	.+24     	; 0x58a <__fp_splitA+0x20>
 572:	9f 3f       	cpi	r25, 0xFF	; 255
 574:	79 f0       	breq	.+30     	; 0x594 <__fp_splitA+0x2a>
 576:	87 95       	ror	r24
 578:	08 95       	ret
 57a:	12 16       	cp	r1, r18
 57c:	13 06       	cpc	r1, r19
 57e:	14 06       	cpc	r1, r20
 580:	55 1f       	adc	r21, r21
 582:	f2 cf       	rjmp	.-28     	; 0x568 <__fp_split3+0xe>
 584:	46 95       	lsr	r20
 586:	f1 df       	rcall	.-30     	; 0x56a <__fp_splitA>
 588:	08 c0       	rjmp	.+16     	; 0x59a <__fp_splitA+0x30>
 58a:	16 16       	cp	r1, r22
 58c:	17 06       	cpc	r1, r23
 58e:	18 06       	cpc	r1, r24
 590:	99 1f       	adc	r25, r25
 592:	f1 cf       	rjmp	.-30     	; 0x576 <__fp_splitA+0xc>
 594:	86 95       	lsr	r24
 596:	71 05       	cpc	r23, r1
 598:	61 05       	cpc	r22, r1
 59a:	08 94       	sec
 59c:	08 95       	ret

0000059e <__fp_zero>:
 59e:	e8 94       	clt

000005a0 <__fp_szero>:
 5a0:	bb 27       	eor	r27, r27
 5a2:	66 27       	eor	r22, r22
 5a4:	77 27       	eor	r23, r23
 5a6:	cb 01       	movw	r24, r22
 5a8:	97 f9       	bld	r25, 7
 5aa:	08 95       	ret

000005ac <__mulsf3>:
 5ac:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__mulsf3x>
 5b0:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>
 5b4:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_pscA>
 5b8:	38 f0       	brcs	.+14     	; 0x5c8 <__mulsf3+0x1c>
 5ba:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscB>
 5be:	20 f0       	brcs	.+8      	; 0x5c8 <__mulsf3+0x1c>
 5c0:	95 23       	and	r25, r21
 5c2:	11 f0       	breq	.+4      	; 0x5c8 <__mulsf3+0x1c>
 5c4:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 5c8:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>
 5cc:	11 24       	eor	r1, r1
 5ce:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>

000005d2 <__mulsf3x>:
 5d2:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_split3>
 5d6:	70 f3       	brcs	.-36     	; 0x5b4 <__mulsf3+0x8>

000005d8 <__mulsf3_pse>:
 5d8:	95 9f       	mul	r25, r21
 5da:	c1 f3       	breq	.-16     	; 0x5cc <__mulsf3+0x20>
 5dc:	95 0f       	add	r25, r21
 5de:	50 e0       	ldi	r21, 0x00	; 0
 5e0:	55 1f       	adc	r21, r21
 5e2:	62 9f       	mul	r22, r18
 5e4:	f0 01       	movw	r30, r0
 5e6:	72 9f       	mul	r23, r18
 5e8:	bb 27       	eor	r27, r27
 5ea:	f0 0d       	add	r31, r0
 5ec:	b1 1d       	adc	r27, r1
 5ee:	63 9f       	mul	r22, r19
 5f0:	aa 27       	eor	r26, r26
 5f2:	f0 0d       	add	r31, r0
 5f4:	b1 1d       	adc	r27, r1
 5f6:	aa 1f       	adc	r26, r26
 5f8:	64 9f       	mul	r22, r20
 5fa:	66 27       	eor	r22, r22
 5fc:	b0 0d       	add	r27, r0
 5fe:	a1 1d       	adc	r26, r1
 600:	66 1f       	adc	r22, r22
 602:	82 9f       	mul	r24, r18
 604:	22 27       	eor	r18, r18
 606:	b0 0d       	add	r27, r0
 608:	a1 1d       	adc	r26, r1
 60a:	62 1f       	adc	r22, r18
 60c:	73 9f       	mul	r23, r19
 60e:	b0 0d       	add	r27, r0
 610:	a1 1d       	adc	r26, r1
 612:	62 1f       	adc	r22, r18
 614:	83 9f       	mul	r24, r19
 616:	a0 0d       	add	r26, r0
 618:	61 1d       	adc	r22, r1
 61a:	22 1f       	adc	r18, r18
 61c:	74 9f       	mul	r23, r20
 61e:	33 27       	eor	r19, r19
 620:	a0 0d       	add	r26, r0
 622:	61 1d       	adc	r22, r1
 624:	23 1f       	adc	r18, r19
 626:	84 9f       	mul	r24, r20
 628:	60 0d       	add	r22, r0
 62a:	21 1d       	adc	r18, r1
 62c:	82 2f       	mov	r24, r18
 62e:	76 2f       	mov	r23, r22
 630:	6a 2f       	mov	r22, r26
 632:	11 24       	eor	r1, r1
 634:	9f 57       	subi	r25, 0x7F	; 127
 636:	50 40       	sbci	r21, 0x00	; 0
 638:	9a f0       	brmi	.+38     	; 0x660 <__mulsf3_pse+0x88>
 63a:	f1 f0       	breq	.+60     	; 0x678 <__mulsf3_pse+0xa0>
 63c:	88 23       	and	r24, r24
 63e:	4a f0       	brmi	.+18     	; 0x652 <__mulsf3_pse+0x7a>
 640:	ee 0f       	add	r30, r30
 642:	ff 1f       	adc	r31, r31
 644:	bb 1f       	adc	r27, r27
 646:	66 1f       	adc	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	88 1f       	adc	r24, r24
 64c:	91 50       	subi	r25, 0x01	; 1
 64e:	50 40       	sbci	r21, 0x00	; 0
 650:	a9 f7       	brne	.-22     	; 0x63c <__mulsf3_pse+0x64>
 652:	9e 3f       	cpi	r25, 0xFE	; 254
 654:	51 05       	cpc	r21, r1
 656:	80 f0       	brcs	.+32     	; 0x678 <__mulsf3_pse+0xa0>
 658:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 65c:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 660:	5f 3f       	cpi	r21, 0xFF	; 255
 662:	e4 f3       	brlt	.-8      	; 0x65c <__mulsf3_pse+0x84>
 664:	98 3e       	cpi	r25, 0xE8	; 232
 666:	d4 f3       	brlt	.-12     	; 0x65c <__mulsf3_pse+0x84>
 668:	86 95       	lsr	r24
 66a:	77 95       	ror	r23
 66c:	67 95       	ror	r22
 66e:	b7 95       	ror	r27
 670:	f7 95       	ror	r31
 672:	e7 95       	ror	r30
 674:	9f 5f       	subi	r25, 0xFF	; 255
 676:	c1 f7       	brne	.-16     	; 0x668 <__mulsf3_pse+0x90>
 678:	fe 2b       	or	r31, r30
 67a:	88 0f       	add	r24, r24
 67c:	91 1d       	adc	r25, r1
 67e:	96 95       	lsr	r25
 680:	87 95       	ror	r24
 682:	97 f9       	bld	r25, 7
 684:	08 95       	ret

00000686 <pow>:
 686:	fa 01       	movw	r30, r20
 688:	ee 0f       	add	r30, r30
 68a:	ff 1f       	adc	r31, r31
 68c:	30 96       	adiw	r30, 0x00	; 0
 68e:	21 05       	cpc	r18, r1
 690:	31 05       	cpc	r19, r1
 692:	a1 f1       	breq	.+104    	; 0x6fc <pow+0x76>
 694:	61 15       	cp	r22, r1
 696:	71 05       	cpc	r23, r1
 698:	61 f4       	brne	.+24     	; 0x6b2 <pow+0x2c>
 69a:	80 38       	cpi	r24, 0x80	; 128
 69c:	bf e3       	ldi	r27, 0x3F	; 63
 69e:	9b 07       	cpc	r25, r27
 6a0:	49 f1       	breq	.+82     	; 0x6f4 <pow+0x6e>
 6a2:	68 94       	set
 6a4:	90 38       	cpi	r25, 0x80	; 128
 6a6:	81 05       	cpc	r24, r1
 6a8:	61 f0       	breq	.+24     	; 0x6c2 <pow+0x3c>
 6aa:	80 38       	cpi	r24, 0x80	; 128
 6ac:	bf ef       	ldi	r27, 0xFF	; 255
 6ae:	9b 07       	cpc	r25, r27
 6b0:	41 f0       	breq	.+16     	; 0x6c2 <pow+0x3c>
 6b2:	99 23       	and	r25, r25
 6b4:	4a f5       	brpl	.+82     	; 0x708 <pow+0x82>
 6b6:	ff 3f       	cpi	r31, 0xFF	; 255
 6b8:	e1 05       	cpc	r30, r1
 6ba:	31 05       	cpc	r19, r1
 6bc:	21 05       	cpc	r18, r1
 6be:	19 f1       	breq	.+70     	; 0x706 <pow+0x80>
 6c0:	e8 94       	clt
 6c2:	08 94       	sec
 6c4:	e7 95       	ror	r30
 6c6:	d9 01       	movw	r26, r18
 6c8:	aa 23       	and	r26, r26
 6ca:	29 f4       	brne	.+10     	; 0x6d6 <pow+0x50>
 6cc:	ab 2f       	mov	r26, r27
 6ce:	be 2f       	mov	r27, r30
 6d0:	f8 5f       	subi	r31, 0xF8	; 248
 6d2:	d0 f3       	brcs	.-12     	; 0x6c8 <pow+0x42>
 6d4:	10 c0       	rjmp	.+32     	; 0x6f6 <pow+0x70>
 6d6:	ff 5f       	subi	r31, 0xFF	; 255
 6d8:	70 f4       	brcc	.+28     	; 0x6f6 <pow+0x70>
 6da:	a6 95       	lsr	r26
 6dc:	e0 f7       	brcc	.-8      	; 0x6d6 <pow+0x50>
 6de:	f7 39       	cpi	r31, 0x97	; 151
 6e0:	50 f0       	brcs	.+20     	; 0x6f6 <pow+0x70>
 6e2:	19 f0       	breq	.+6      	; 0x6ea <pow+0x64>
 6e4:	ff 3a       	cpi	r31, 0xAF	; 175
 6e6:	38 f4       	brcc	.+14     	; 0x6f6 <pow+0x70>
 6e8:	9f 77       	andi	r25, 0x7F	; 127
 6ea:	9f 93       	push	r25
 6ec:	0d d0       	rcall	.+26     	; 0x708 <pow+0x82>
 6ee:	0f 90       	pop	r0
 6f0:	07 fc       	sbrc	r0, 7
 6f2:	90 58       	subi	r25, 0x80	; 128
 6f4:	08 95       	ret
 6f6:	46 f0       	brts	.+16     	; 0x708 <pow+0x82>
 6f8:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>
 6fc:	60 e0       	ldi	r22, 0x00	; 0
 6fe:	70 e0       	ldi	r23, 0x00	; 0
 700:	80 e8       	ldi	r24, 0x80	; 128
 702:	9f e3       	ldi	r25, 0x3F	; 63
 704:	08 95       	ret
 706:	4f e7       	ldi	r20, 0x7F	; 127
 708:	9f 77       	andi	r25, 0x7F	; 127
 70a:	5f 93       	push	r21
 70c:	4f 93       	push	r20
 70e:	3f 93       	push	r19
 710:	2f 93       	push	r18
 712:	0e 94 3e 04 	call	0x87c	; 0x87c <log>
 716:	2f 91       	pop	r18
 718:	3f 91       	pop	r19
 71a:	4f 91       	pop	r20
 71c:	5f 91       	pop	r21
 71e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3>
 722:	0c 94 9b 03 	jmp	0x736	; 0x736 <exp>
 726:	29 f4       	brne	.+10     	; 0x732 <pow+0xac>
 728:	16 f0       	brts	.+4      	; 0x72e <pow+0xa8>
 72a:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 72e:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_zero>
 732:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>

00000736 <exp>:
 736:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_splitA>
 73a:	a8 f3       	brcs	.-22     	; 0x726 <pow+0xa0>
 73c:	96 38       	cpi	r25, 0x86	; 134
 73e:	a0 f7       	brcc	.-24     	; 0x728 <pow+0xa2>
 740:	07 f8       	bld	r0, 7
 742:	0f 92       	push	r0
 744:	e8 94       	clt
 746:	2b e3       	ldi	r18, 0x3B	; 59
 748:	3a ea       	ldi	r19, 0xAA	; 170
 74a:	48 eb       	ldi	r20, 0xB8	; 184
 74c:	5f e7       	ldi	r21, 0x7F	; 127
 74e:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__mulsf3_pse>
 752:	0f 92       	push	r0
 754:	0f 92       	push	r0
 756:	0f 92       	push	r0
 758:	4d b7       	in	r20, 0x3d	; 61
 75a:	5e b7       	in	r21, 0x3e	; 62
 75c:	0f 92       	push	r0
 75e:	0e 94 86 04 	call	0x90c	; 0x90c <modf>
 762:	e8 e6       	ldi	r30, 0x68	; 104
 764:	f0 e0       	ldi	r31, 0x00	; 0
 766:	0e 94 cd 03 	call	0x79a	; 0x79a <__fp_powser>
 76a:	4f 91       	pop	r20
 76c:	5f 91       	pop	r21
 76e:	ef 91       	pop	r30
 770:	ff 91       	pop	r31
 772:	e5 95       	asr	r30
 774:	ee 1f       	adc	r30, r30
 776:	ff 1f       	adc	r31, r31
 778:	49 f0       	breq	.+18     	; 0x78c <exp+0x56>
 77a:	fe 57       	subi	r31, 0x7E	; 126
 77c:	e0 68       	ori	r30, 0x80	; 128
 77e:	44 27       	eor	r20, r20
 780:	ee 0f       	add	r30, r30
 782:	44 1f       	adc	r20, r20
 784:	fa 95       	dec	r31
 786:	e1 f7       	brne	.-8      	; 0x780 <exp+0x4a>
 788:	41 95       	neg	r20
 78a:	55 0b       	sbc	r21, r21
 78c:	0e 94 00 04 	call	0x800	; 0x800 <ldexp>
 790:	0f 90       	pop	r0
 792:	07 fe       	sbrs	r0, 7
 794:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <inverse>
 798:	08 95       	ret

0000079a <__fp_powser>:
 79a:	df 93       	push	r29
 79c:	cf 93       	push	r28
 79e:	1f 93       	push	r17
 7a0:	0f 93       	push	r16
 7a2:	ff 92       	push	r15
 7a4:	ef 92       	push	r14
 7a6:	df 92       	push	r13
 7a8:	7b 01       	movw	r14, r22
 7aa:	8c 01       	movw	r16, r24
 7ac:	68 94       	set
 7ae:	06 c0       	rjmp	.+12     	; 0x7bc <__fp_powser+0x22>
 7b0:	da 2e       	mov	r13, r26
 7b2:	ef 01       	movw	r28, r30
 7b4:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__mulsf3x>
 7b8:	fe 01       	movw	r30, r28
 7ba:	e8 94       	clt
 7bc:	a5 91       	lpm	r26, Z+
 7be:	25 91       	lpm	r18, Z+
 7c0:	35 91       	lpm	r19, Z+
 7c2:	45 91       	lpm	r20, Z+
 7c4:	55 91       	lpm	r21, Z+
 7c6:	a6 f3       	brts	.-24     	; 0x7b0 <__fp_powser+0x16>
 7c8:	ef 01       	movw	r28, r30
 7ca:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3x>
 7ce:	fe 01       	movw	r30, r28
 7d0:	97 01       	movw	r18, r14
 7d2:	a8 01       	movw	r20, r16
 7d4:	da 94       	dec	r13
 7d6:	69 f7       	brne	.-38     	; 0x7b2 <__fp_powser+0x18>
 7d8:	df 90       	pop	r13
 7da:	ef 90       	pop	r14
 7dc:	ff 90       	pop	r15
 7de:	0f 91       	pop	r16
 7e0:	1f 91       	pop	r17
 7e2:	cf 91       	pop	r28
 7e4:	df 91       	pop	r29
 7e6:	08 95       	ret

000007e8 <inverse>:
 7e8:	9b 01       	movw	r18, r22
 7ea:	ac 01       	movw	r20, r24
 7ec:	60 e0       	ldi	r22, 0x00	; 0
 7ee:	70 e0       	ldi	r23, 0x00	; 0
 7f0:	80 e8       	ldi	r24, 0x80	; 128
 7f2:	9f e3       	ldi	r25, 0x3F	; 63
 7f4:	0c 94 ba 04 	jmp	0x974	; 0x974 <__divsf3>
 7f8:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 7fc:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_mpack>

00000800 <ldexp>:
 800:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_splitA>
 804:	d8 f3       	brcs	.-10     	; 0x7fc <inverse+0x14>
 806:	99 23       	and	r25, r25
 808:	c9 f3       	breq	.-14     	; 0x7fc <inverse+0x14>
 80a:	94 0f       	add	r25, r20
 80c:	51 1d       	adc	r21, r1
 80e:	a3 f3       	brvs	.-24     	; 0x7f8 <inverse+0x10>
 810:	91 50       	subi	r25, 0x01	; 1
 812:	50 40       	sbci	r21, 0x00	; 0
 814:	94 f0       	brlt	.+36     	; 0x83a <ldexp+0x3a>
 816:	59 f0       	breq	.+22     	; 0x82e <ldexp+0x2e>
 818:	88 23       	and	r24, r24
 81a:	32 f0       	brmi	.+12     	; 0x828 <ldexp+0x28>
 81c:	66 0f       	add	r22, r22
 81e:	77 1f       	adc	r23, r23
 820:	88 1f       	adc	r24, r24
 822:	91 50       	subi	r25, 0x01	; 1
 824:	50 40       	sbci	r21, 0x00	; 0
 826:	c1 f7       	brne	.-16     	; 0x818 <ldexp+0x18>
 828:	9e 3f       	cpi	r25, 0xFE	; 254
 82a:	51 05       	cpc	r21, r1
 82c:	2c f7       	brge	.-54     	; 0x7f8 <inverse+0x10>
 82e:	88 0f       	add	r24, r24
 830:	91 1d       	adc	r25, r1
 832:	96 95       	lsr	r25
 834:	87 95       	ror	r24
 836:	97 f9       	bld	r25, 7
 838:	08 95       	ret
 83a:	5f 3f       	cpi	r21, 0xFF	; 255
 83c:	ac f0       	brlt	.+42     	; 0x868 <ldexp+0x68>
 83e:	98 3e       	cpi	r25, 0xE8	; 232
 840:	9c f0       	brlt	.+38     	; 0x868 <ldexp+0x68>
 842:	bb 27       	eor	r27, r27
 844:	86 95       	lsr	r24
 846:	77 95       	ror	r23
 848:	67 95       	ror	r22
 84a:	b7 95       	ror	r27
 84c:	08 f4       	brcc	.+2      	; 0x850 <ldexp+0x50>
 84e:	b1 60       	ori	r27, 0x01	; 1
 850:	93 95       	inc	r25
 852:	c1 f7       	brne	.-16     	; 0x844 <ldexp+0x44>
 854:	bb 0f       	add	r27, r27
 856:	58 f7       	brcc	.-42     	; 0x82e <ldexp+0x2e>
 858:	11 f4       	brne	.+4      	; 0x85e <ldexp+0x5e>
 85a:	60 ff       	sbrs	r22, 0
 85c:	e8 cf       	rjmp	.-48     	; 0x82e <ldexp+0x2e>
 85e:	6f 5f       	subi	r22, 0xFF	; 255
 860:	7f 4f       	sbci	r23, 0xFF	; 255
 862:	8f 4f       	sbci	r24, 0xFF	; 255
 864:	9f 4f       	sbci	r25, 0xFF	; 255
 866:	e3 cf       	rjmp	.-58     	; 0x82e <ldexp+0x2e>
 868:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 86c:	16 f0       	brts	.+4      	; 0x872 <ldexp+0x72>
 86e:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_mpack>
 872:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>
 876:	68 94       	set
 878:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>

0000087c <log>:
 87c:	0e 94 b5 02 	call	0x56a	; 0x56a <__fp_splitA>
 880:	a8 f3       	brcs	.-22     	; 0x86c <ldexp+0x6c>
 882:	99 23       	and	r25, r25
 884:	c1 f3       	breq	.-16     	; 0x876 <ldexp+0x76>
 886:	ae f3       	brts	.-22     	; 0x872 <ldexp+0x72>
 888:	df 93       	push	r29
 88a:	cf 93       	push	r28
 88c:	1f 93       	push	r17
 88e:	0f 93       	push	r16
 890:	ff 92       	push	r15
 892:	c9 2f       	mov	r28, r25
 894:	dd 27       	eor	r29, r29
 896:	88 23       	and	r24, r24
 898:	2a f0       	brmi	.+10     	; 0x8a4 <log+0x28>
 89a:	21 97       	sbiw	r28, 0x01	; 1
 89c:	66 0f       	add	r22, r22
 89e:	77 1f       	adc	r23, r23
 8a0:	88 1f       	adc	r24, r24
 8a2:	da f7       	brpl	.-10     	; 0x89a <log+0x1e>
 8a4:	20 e0       	ldi	r18, 0x00	; 0
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	40 e8       	ldi	r20, 0x80	; 128
 8aa:	5f eb       	ldi	r21, 0xBF	; 191
 8ac:	9f e3       	ldi	r25, 0x3F	; 63
 8ae:	88 39       	cpi	r24, 0x98	; 152
 8b0:	20 f0       	brcs	.+8      	; 0x8ba <log+0x3e>
 8b2:	80 3e       	cpi	r24, 0xE0	; 224
 8b4:	38 f0       	brcs	.+14     	; 0x8c4 <log+0x48>
 8b6:	21 96       	adiw	r28, 0x01	; 1
 8b8:	8f 77       	andi	r24, 0x7F	; 127
 8ba:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__addsf3>
 8be:	e0 e9       	ldi	r30, 0x90	; 144
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	04 c0       	rjmp	.+8      	; 0x8cc <log+0x50>
 8c4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__addsf3>
 8c8:	ed eb       	ldi	r30, 0xBD	; 189
 8ca:	f0 e0       	ldi	r31, 0x00	; 0
 8cc:	0e 94 cd 03 	call	0x79a	; 0x79a <__fp_powser>
 8d0:	8b 01       	movw	r16, r22
 8d2:	be 01       	movw	r22, r28
 8d4:	ec 01       	movw	r28, r24
 8d6:	fb 2e       	mov	r15, r27
 8d8:	6f 57       	subi	r22, 0x7F	; 127
 8da:	71 09       	sbc	r23, r1
 8dc:	75 95       	asr	r23
 8de:	77 1f       	adc	r23, r23
 8e0:	88 0b       	sbc	r24, r24
 8e2:	99 0b       	sbc	r25, r25
 8e4:	0e 94 26 02 	call	0x44c	; 0x44c <__floatsisf>
 8e8:	28 e1       	ldi	r18, 0x18	; 24
 8ea:	32 e7       	ldi	r19, 0x72	; 114
 8ec:	41 e3       	ldi	r20, 0x31	; 49
 8ee:	5f e3       	ldi	r21, 0x3F	; 63
 8f0:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__mulsf3x>
 8f4:	af 2d       	mov	r26, r15
 8f6:	98 01       	movw	r18, r16
 8f8:	ae 01       	movw	r20, r28
 8fa:	ff 90       	pop	r15
 8fc:	0f 91       	pop	r16
 8fe:	1f 91       	pop	r17
 900:	cf 91       	pop	r28
 902:	df 91       	pop	r29
 904:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3x>
 908:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>

0000090c <modf>:
 90c:	fa 01       	movw	r30, r20
 90e:	dc 01       	movw	r26, r24
 910:	aa 0f       	add	r26, r26
 912:	bb 1f       	adc	r27, r27
 914:	9b 01       	movw	r18, r22
 916:	ac 01       	movw	r20, r24
 918:	bf 57       	subi	r27, 0x7F	; 127
 91a:	28 f4       	brcc	.+10     	; 0x926 <modf+0x1a>
 91c:	22 27       	eor	r18, r18
 91e:	33 27       	eor	r19, r19
 920:	44 27       	eor	r20, r20
 922:	50 78       	andi	r21, 0x80	; 128
 924:	20 c0       	rjmp	.+64     	; 0x966 <modf+0x5a>
 926:	b7 51       	subi	r27, 0x17	; 23
 928:	90 f4       	brcc	.+36     	; 0x94e <modf+0x42>
 92a:	ab 2f       	mov	r26, r27
 92c:	00 24       	eor	r0, r0
 92e:	46 95       	lsr	r20
 930:	37 95       	ror	r19
 932:	27 95       	ror	r18
 934:	01 1c       	adc	r0, r1
 936:	a3 95       	inc	r26
 938:	d2 f3       	brmi	.-12     	; 0x92e <modf+0x22>
 93a:	00 20       	and	r0, r0
 93c:	71 f0       	breq	.+28     	; 0x95a <modf+0x4e>
 93e:	22 0f       	add	r18, r18
 940:	33 1f       	adc	r19, r19
 942:	44 1f       	adc	r20, r20
 944:	b3 95       	inc	r27
 946:	da f3       	brmi	.-10     	; 0x93e <modf+0x32>
 948:	0e d0       	rcall	.+28     	; 0x966 <modf+0x5a>
 94a:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__subsf3>
 94e:	61 30       	cpi	r22, 0x01	; 1
 950:	71 05       	cpc	r23, r1
 952:	a0 e8       	ldi	r26, 0x80	; 128
 954:	8a 07       	cpc	r24, r26
 956:	b9 46       	sbci	r27, 0x69	; 105
 958:	30 f4       	brcc	.+12     	; 0x966 <modf+0x5a>
 95a:	9b 01       	movw	r18, r22
 95c:	ac 01       	movw	r20, r24
 95e:	66 27       	eor	r22, r22
 960:	77 27       	eor	r23, r23
 962:	88 27       	eor	r24, r24
 964:	90 78       	andi	r25, 0x80	; 128
 966:	30 96       	adiw	r30, 0x00	; 0
 968:	21 f0       	breq	.+8      	; 0x972 <modf+0x66>
 96a:	20 83       	st	Z, r18
 96c:	31 83       	std	Z+1, r19	; 0x01
 96e:	42 83       	std	Z+2, r20	; 0x02
 970:	53 83       	std	Z+3, r21	; 0x03
 972:	08 95       	ret

00000974 <__divsf3>:
 974:	0e 94 ce 04 	call	0x99c	; 0x99c <__divsf3x>
 978:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_round>
 97c:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_pscB>
 980:	58 f0       	brcs	.+22     	; 0x998 <__divsf3+0x24>
 982:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_pscA>
 986:	40 f0       	brcs	.+16     	; 0x998 <__divsf3+0x24>
 988:	29 f4       	brne	.+10     	; 0x994 <__divsf3+0x20>
 98a:	5f 3f       	cpi	r21, 0xFF	; 255
 98c:	29 f0       	breq	.+10     	; 0x998 <__divsf3+0x24>
 98e:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 992:	51 11       	cpse	r21, r1
 994:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 998:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_nan>

0000099c <__divsf3x>:
 99c:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_split3>
 9a0:	68 f3       	brcs	.-38     	; 0x97c <__divsf3+0x8>

000009a2 <__divsf3_pse>:
 9a2:	99 23       	and	r25, r25
 9a4:	b1 f3       	breq	.-20     	; 0x992 <__divsf3+0x1e>
 9a6:	55 23       	and	r21, r21
 9a8:	91 f3       	breq	.-28     	; 0x98e <__divsf3+0x1a>
 9aa:	95 1b       	sub	r25, r21
 9ac:	55 0b       	sbc	r21, r21
 9ae:	bb 27       	eor	r27, r27
 9b0:	aa 27       	eor	r26, r26
 9b2:	62 17       	cp	r22, r18
 9b4:	73 07       	cpc	r23, r19
 9b6:	84 07       	cpc	r24, r20
 9b8:	38 f0       	brcs	.+14     	; 0x9c8 <__divsf3_pse+0x26>
 9ba:	9f 5f       	subi	r25, 0xFF	; 255
 9bc:	5f 4f       	sbci	r21, 0xFF	; 255
 9be:	22 0f       	add	r18, r18
 9c0:	33 1f       	adc	r19, r19
 9c2:	44 1f       	adc	r20, r20
 9c4:	aa 1f       	adc	r26, r26
 9c6:	a9 f3       	breq	.-22     	; 0x9b2 <__divsf3_pse+0x10>
 9c8:	35 d0       	rcall	.+106    	; 0xa34 <__divsf3_pse+0x92>
 9ca:	0e 2e       	mov	r0, r30
 9cc:	3a f0       	brmi	.+14     	; 0x9dc <__divsf3_pse+0x3a>
 9ce:	e0 e8       	ldi	r30, 0x80	; 128
 9d0:	32 d0       	rcall	.+100    	; 0xa36 <__divsf3_pse+0x94>
 9d2:	91 50       	subi	r25, 0x01	; 1
 9d4:	50 40       	sbci	r21, 0x00	; 0
 9d6:	e6 95       	lsr	r30
 9d8:	00 1c       	adc	r0, r0
 9da:	ca f7       	brpl	.-14     	; 0x9ce <__divsf3_pse+0x2c>
 9dc:	2b d0       	rcall	.+86     	; 0xa34 <__divsf3_pse+0x92>
 9de:	fe 2f       	mov	r31, r30
 9e0:	29 d0       	rcall	.+82     	; 0xa34 <__divsf3_pse+0x92>
 9e2:	66 0f       	add	r22, r22
 9e4:	77 1f       	adc	r23, r23
 9e6:	88 1f       	adc	r24, r24
 9e8:	bb 1f       	adc	r27, r27
 9ea:	26 17       	cp	r18, r22
 9ec:	37 07       	cpc	r19, r23
 9ee:	48 07       	cpc	r20, r24
 9f0:	ab 07       	cpc	r26, r27
 9f2:	b0 e8       	ldi	r27, 0x80	; 128
 9f4:	09 f0       	breq	.+2      	; 0x9f8 <__divsf3_pse+0x56>
 9f6:	bb 0b       	sbc	r27, r27
 9f8:	80 2d       	mov	r24, r0
 9fa:	bf 01       	movw	r22, r30
 9fc:	ff 27       	eor	r31, r31
 9fe:	93 58       	subi	r25, 0x83	; 131
 a00:	5f 4f       	sbci	r21, 0xFF	; 255
 a02:	3a f0       	brmi	.+14     	; 0xa12 <__divsf3_pse+0x70>
 a04:	9e 3f       	cpi	r25, 0xFE	; 254
 a06:	51 05       	cpc	r21, r1
 a08:	78 f0       	brcs	.+30     	; 0xa28 <__divsf3_pse+0x86>
 a0a:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_inf>
 a0e:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__fp_szero>
 a12:	5f 3f       	cpi	r21, 0xFF	; 255
 a14:	e4 f3       	brlt	.-8      	; 0xa0e <__divsf3_pse+0x6c>
 a16:	98 3e       	cpi	r25, 0xE8	; 232
 a18:	d4 f3       	brlt	.-12     	; 0xa0e <__divsf3_pse+0x6c>
 a1a:	86 95       	lsr	r24
 a1c:	77 95       	ror	r23
 a1e:	67 95       	ror	r22
 a20:	b7 95       	ror	r27
 a22:	f7 95       	ror	r31
 a24:	9f 5f       	subi	r25, 0xFF	; 255
 a26:	c9 f7       	brne	.-14     	; 0xa1a <__divsf3_pse+0x78>
 a28:	88 0f       	add	r24, r24
 a2a:	91 1d       	adc	r25, r1
 a2c:	96 95       	lsr	r25
 a2e:	87 95       	ror	r24
 a30:	97 f9       	bld	r25, 7
 a32:	08 95       	ret
 a34:	e1 e0       	ldi	r30, 0x01	; 1
 a36:	66 0f       	add	r22, r22
 a38:	77 1f       	adc	r23, r23
 a3a:	88 1f       	adc	r24, r24
 a3c:	bb 1f       	adc	r27, r27
 a3e:	62 17       	cp	r22, r18
 a40:	73 07       	cpc	r23, r19
 a42:	84 07       	cpc	r24, r20
 a44:	ba 07       	cpc	r27, r26
 a46:	20 f0       	brcs	.+8      	; 0xa50 <__divsf3_pse+0xae>
 a48:	62 1b       	sub	r22, r18
 a4a:	73 0b       	sbc	r23, r19
 a4c:	84 0b       	sbc	r24, r20
 a4e:	ba 0b       	sbc	r27, r26
 a50:	ee 1f       	adc	r30, r30
 a52:	88 f7       	brcc	.-30     	; 0xa36 <__divsf3_pse+0x94>
 a54:	e0 95       	com	r30
 a56:	08 95       	ret

00000a58 <__fp_mpack>:
 a58:	9f 3f       	cpi	r25, 0xFF	; 255
 a5a:	31 f0       	breq	.+12     	; 0xa68 <__fp_mpack_finite+0xc>

00000a5c <__fp_mpack_finite>:
 a5c:	91 50       	subi	r25, 0x01	; 1
 a5e:	20 f4       	brcc	.+8      	; 0xa68 <__fp_mpack_finite+0xc>
 a60:	87 95       	ror	r24
 a62:	77 95       	ror	r23
 a64:	67 95       	ror	r22
 a66:	b7 95       	ror	r27
 a68:	88 0f       	add	r24, r24
 a6a:	91 1d       	adc	r25, r1
 a6c:	96 95       	lsr	r25
 a6e:	87 95       	ror	r24
 a70:	97 f9       	bld	r25, 7
 a72:	08 95       	ret

00000a74 <__umulhisi3>:
 a74:	a2 9f       	mul	r26, r18
 a76:	b0 01       	movw	r22, r0
 a78:	b3 9f       	mul	r27, r19
 a7a:	c0 01       	movw	r24, r0
 a7c:	a3 9f       	mul	r26, r19
 a7e:	70 0d       	add	r23, r0
 a80:	81 1d       	adc	r24, r1
 a82:	11 24       	eor	r1, r1
 a84:	91 1d       	adc	r25, r1
 a86:	b2 9f       	mul	r27, r18
 a88:	70 0d       	add	r23, r0
 a8a:	81 1d       	adc	r24, r1
 a8c:	11 24       	eor	r1, r1
 a8e:	91 1d       	adc	r25, r1
 a90:	08 95       	ret

00000a92 <_exit>:
 a92:	f8 94       	cli

00000a94 <__stop_program>:
 a94:	ff cf       	rjmp	.-2      	; 0xa94 <__stop_program>
