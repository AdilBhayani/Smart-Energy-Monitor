
group37.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bde  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000c52  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000752  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003de  00000000  00000000  000014ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000527  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00001db4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000032e  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000083e  00000000  00000000  00002262  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00002aa0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  58:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  5c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  60:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  64:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <round+0x10>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_clear_bss>:
  f6:	21 e0       	ldi	r18, 0x01	; 1
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a1 30       	cpi	r26, 0x01	; 1
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	0e 94 1b 01 	call	0x236	; 0x236 <main>
 10a:	0c 94 ed 05 	jmp	0xbda	; 0xbda <_exit>

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <uart_init>:
	return adcRead;
 }

 unsigned int adc_read_2() {
	return 0;
 }
 112:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 116:	87 e6       	ldi	r24, 0x67	; 103
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 11c:	e1 ec       	ldi	r30, 0xC1	; 193
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	88 60       	ori	r24, 0x08	; 8
 124:	80 83       	st	Z, r24
 126:	e2 ec       	ldi	r30, 0xC2	; 194
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	86 60       	ori	r24, 0x06	; 6
 12e:	80 83       	st	Z, r24
 130:	08 95       	ret

00000132 <uart_transmit>:
 132:	e0 ec       	ldi	r30, 0xC0	; 192
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	90 81       	ld	r25, Z
 138:	99 23       	and	r25, r25
 13a:	e9 f3       	breq	.-6      	; 0x136 <uart_transmit+0x4>
 13c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 140:	08 95       	ret

00000142 <timer0_init>:
 142:	85 b5       	in	r24, 0x25	; 37
 144:	85 60       	ori	r24, 0x05	; 5
 146:	85 bd       	out	0x25, r24	; 37
 148:	16 bc       	out	0x26, r1	; 38
 14a:	08 95       	ret

0000014c <find_decimal>:
 14c:	cf 92       	push	r12
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	6b 01       	movw	r12, r22
 156:	7c 01       	movw	r14, r24
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	40 e2       	ldi	r20, 0x20	; 32
 15e:	51 e4       	ldi	r21, 0x41	; 65
 160:	0e 94 4e 02 	call	0x49c	; 0x49c <__cmpsf2>
 164:	88 23       	and	r24, r24
 166:	04 f1       	brlt	.+64     	; 0x1a8 <find_decimal+0x5c>
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	48 ec       	ldi	r20, 0xC8	; 200
 16e:	52 e4       	ldi	r21, 0x42	; 66
 170:	c7 01       	movw	r24, r14
 172:	b6 01       	movw	r22, r12
 174:	0e 94 4e 02 	call	0x49c	; 0x49c <__cmpsf2>
 178:	88 23       	and	r24, r24
 17a:	cc f0       	brlt	.+50     	; 0x1ae <find_decimal+0x62>
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	4a e7       	ldi	r20, 0x7A	; 122
 182:	54 e4       	ldi	r21, 0x44	; 68
 184:	c7 01       	movw	r24, r14
 186:	b6 01       	movw	r22, r12
 188:	0e 94 4e 02 	call	0x49c	; 0x49c <__cmpsf2>
 18c:	08 2e       	mov	r0, r24
 18e:	00 0c       	add	r0, r0
 190:	99 0b       	sbc	r25, r25
 192:	88 27       	eor	r24, r24
 194:	99 0f       	add	r25, r25
 196:	88 1f       	adc	r24, r24
 198:	99 27       	eor	r25, r25
 19a:	23 e0       	ldi	r18, 0x03	; 3
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	a9 01       	movw	r20, r18
 1a0:	48 1b       	sub	r20, r24
 1a2:	59 0b       	sbc	r21, r25
 1a4:	ca 01       	movw	r24, r20
 1a6:	05 c0       	rjmp	.+10     	; 0x1b2 <find_decimal+0x66>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <find_decimal+0x66>
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	ff 90       	pop	r15
 1b4:	ef 90       	pop	r14
 1b6:	df 90       	pop	r13
 1b8:	cf 90       	pop	r12
 1ba:	08 95       	ret

000001bc <wololo>:
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	41 30       	cpi	r20, 0x01	; 1
 1c0:	09 f4       	brne	.+2      	; 0x1c4 <wololo+0x8>
 1c2:	40 96       	adiw	r24, 0x10	; 16
 1c4:	61 11       	cpse	r22, r1
 1c6:	03 c0       	rjmp	.+6      	; 0x1ce <wololo+0x12>
 1c8:	80 5a       	subi	r24, 0xA0	; 160
 1ca:	9f 4f       	sbci	r25, 0xFF	; 255
 1cc:	08 95       	ret
 1ce:	61 30       	cpi	r22, 0x01	; 1
 1d0:	19 f4       	brne	.+6      	; 0x1d8 <wololo+0x1c>
 1d2:	80 5c       	subi	r24, 0xC0	; 192
 1d4:	9f 4f       	sbci	r25, 0xFF	; 255
 1d6:	08 95       	ret
 1d8:	62 30       	cpi	r22, 0x02	; 2
 1da:	09 f4       	brne	.+2      	; 0x1de <wololo+0x22>
 1dc:	80 96       	adiw	r24, 0x20	; 32
 1de:	08 95       	ret

000001e0 <adc_init>:
 1e0:	17 b8       	out	0x07, r1	; 7
 1e2:	ea e7       	ldi	r30, 0x7A	; 122
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	87 68       	ori	r24, 0x87	; 135
 1ea:	80 83       	st	Z, r24
 1ec:	ec e7       	ldi	r30, 0x7C	; 124
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	80 64       	ori	r24, 0x40	; 64
 1f4:	80 83       	st	Z, r24
 1f6:	08 95       	ret

000001f8 <adc_read_1>:
 1f8:	ea e7       	ldi	r30, 0x7A	; 122
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	80 64       	ori	r24, 0x40	; 64
 200:	80 83       	st	Z, r24
 202:	80 81       	ld	r24, Z
 204:	84 ff       	sbrs	r24, 4
 206:	fd cf       	rjmp	.-6      	; 0x202 <adc_read_1+0xa>
 208:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 20c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 210:	08 95       	ret

00000212 <adc_calculation>:

 float adc_calculation(unsigned int adcValue) {
	float calculatedValue;
	calculatedValue = ((float)adcValue / 1023) * 5;
 212:	bc 01       	movw	r22, r24
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__floatunsisf>
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 ec       	ldi	r19, 0xC0	; 192
 220:	4f e7       	ldi	r20, 0x7F	; 127
 222:	54 e4       	ldi	r21, 0x44	; 68
 224:	0e 94 53 02 	call	0x4a6	; 0x4a6 <__divsf3>
 228:	20 e0       	ldi	r18, 0x00	; 0
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	40 ea       	ldi	r20, 0xA0	; 160
 22e:	50 e4       	ldi	r21, 0x40	; 64
 230:	0e 94 ad 03 	call	0x75a	; 0x75a <__mulsf3>
	return calculatedValue; 
 }
 234:	08 95       	ret

00000236 <main>:
#define F_CPU 16000000UL
#include <util/delay.h>

volatile uint8_t counter = 0; //Counter for the number of times the TCNT0 compares correctly

int main(void) {
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	00 d0       	rcall	.+0      	; 0x23c <main+0x6>
 23c:	00 d0       	rcall	.+0      	; 0x23e <main+0x8>
 23e:	1f 92       	push	r1
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
	float voltage[20] = { 1.65, 2.03, 2.38, 2.65, 2.81, 2.85, 2.76, 2.55, 2.25, 1.89, 1.50, 1.12, 0.81, 0.578, 0.46, 0.47, 0.61, 0.851, 1.15, 1.56 };
	float current[20] = { 1.81, 2.12, 2.38, 2.56, 2.64, 2.62, 2.50, 2.29, 2.01, 1.69, 1.36, 1.07, 0.84, 0.69, 0.65, 0.71, 0.87, 1.11, 1.41 };
	float power = calcPower(&voltage, &current);
	*/

	adc_init();
 244:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <adc_init>
	uart_init();	
 248:	0e 94 89 00 	call	0x112	; 0x112 <uart_init>
	timer0_init();
 24c:	0e 94 a1 00 	call	0x142	; 0x142 <timer0_init>
	float floatArray[4] = { 1234, 1235, 1236, 1237 }; //Array of values to send
	unsigned int floatIndex = 0;
 250:	61 2c       	mov	r6, r1
 252:	71 2c       	mov	r7, r1
		dataFloat = calculated;

		//Pre-wololo calculations and conversions
		dataFloat = roundf(dataFloat * 1000) / 1000;
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
 254:	0f 2e       	mov	r0, r31
 256:	f3 e0       	ldi	r31, 0x03	; 3
 258:	8f 2e       	mov	r8, r31
 25a:	91 2c       	mov	r9, r1
 25c:	f0 2d       	mov	r31, r0
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
				hasDecimal = 1;
			} else {
				hasDecimal = 0;
 25e:	21 2c       	mov	r2, r1
 260:	32 2c       	mov	r3, r2
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
 262:	21 e0       	ldi	r18, 0x01	; 1
 264:	2d 83       	std	Y+5, r18	; 0x05
		uint8_t hasDecimal = 0;
		uint8_t dataArray[4];
		uint8_t index = 0;
		
		//Reading from the ADC and calculating
		unsigned int adcValue = adc_read_1();
 266:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <adc_read_1>
		float calculated = adc_calculation(adcValue);
 26a:	0e 94 09 01 	call	0x212	; 0x212 <adc_calculation>
		dataFloat = calculated;

		//Pre-wololo calculations and conversions
		dataFloat = roundf(dataFloat * 1000) / 1000;
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	4a e7       	ldi	r20, 0x7A	; 122
 274:	54 e4       	ldi	r21, 0x44	; 68
 276:	0e 94 ad 03 	call	0x75a	; 0x75a <__mulsf3>
 27a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <round>
 27e:	20 e0       	ldi	r18, 0x00	; 0
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	4a e7       	ldi	r20, 0x7A	; 122
 284:	54 e4       	ldi	r21, 0x44	; 68
 286:	0e 94 53 02 	call	0x4a6	; 0x4a6 <__divsf3>
 28a:	6b 01       	movw	r12, r22
 28c:	7c 01       	movw	r14, r24
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
 28e:	0e 94 a6 00 	call	0x14c	; 0x14c <find_decimal>
 292:	5c 01       	movw	r10, r24
 294:	bb 24       	eor	r11, r11
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
 296:	24 01       	movw	r4, r8
 298:	4a 18       	sub	r4, r10
 29a:	5b 08       	sbc	r5, r11
 29c:	b2 01       	movw	r22, r4
 29e:	05 2c       	mov	r0, r5
 2a0:	00 0c       	add	r0, r0
 2a2:	88 0b       	sbc	r24, r24
 2a4:	99 0b       	sbc	r25, r25
 2a6:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__floatsisf>
 2aa:	9b 01       	movw	r18, r22
 2ac:	ac 01       	movw	r20, r24
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	80 e2       	ldi	r24, 0x20	; 32
 2b4:	91 e4       	ldi	r25, 0x41	; 65
 2b6:	0e 94 1a 04 	call	0x834	; 0x834 <pow>
 2ba:	a7 01       	movw	r20, r14
 2bc:	96 01       	movw	r18, r12
 2be:	0e 94 ad 03 	call	0x75a	; 0x75a <__mulsf3>
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	40 e0       	ldi	r20, 0x00	; 0
 2c8:	5f e3       	ldi	r21, 0x3F	; 63
 2ca:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__addsf3>
 2ce:	0e 94 c5 02 	call	0x58a	; 0x58a <__fixsfsi>
 2d2:	7b 01       	movw	r14, r22
 2d4:	ce 01       	movw	r24, r28
 2d6:	05 96       	adiw	r24, 0x05	; 5
 2d8:	6c 01       	movw	r12, r24
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
 2da:	84 01       	movw	r16, r8
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
 2dc:	0a 15       	cp	r16, r10
 2de:	1b 05       	cpc	r17, r11
 2e0:	31 f4       	brne	.+12     	; 0x2ee <main+0xb8>
 2e2:	4d 81       	ldd	r20, Y+5	; 0x05
 2e4:	14 14       	cp	r1, r4
 2e6:	15 04       	cpc	r1, r5
 2e8:	1c f0       	brlt	.+6      	; 0x2f0 <main+0xba>
 2ea:	43 2d       	mov	r20, r3
 2ec:	01 c0       	rjmp	.+2      	; 0x2f0 <main+0xba>
				hasDecimal = 1;
			} else {
				hasDecimal = 0;
 2ee:	43 2d       	mov	r20, r3
			}
			dataArray[i] = wololo(dataInt%10, i, hasDecimal);
 2f0:	97 01       	movw	r18, r14
 2f2:	ad ec       	ldi	r26, 0xCD	; 205
 2f4:	bc ec       	ldi	r27, 0xCC	; 204
 2f6:	0e 94 de 05 	call	0xbbc	; 0xbbc <__umulhisi3>
 2fa:	96 95       	lsr	r25
 2fc:	87 95       	ror	r24
 2fe:	96 95       	lsr	r25
 300:	87 95       	ror	r24
 302:	96 95       	lsr	r25
 304:	87 95       	ror	r24
 306:	9c 01       	movw	r18, r24
 308:	22 0f       	add	r18, r18
 30a:	33 1f       	adc	r19, r19
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	82 0f       	add	r24, r18
 31a:	93 1f       	adc	r25, r19
 31c:	60 2f       	mov	r22, r16
 31e:	ee 2d       	mov	r30, r14
 320:	e8 1b       	sub	r30, r24
 322:	8e 2f       	mov	r24, r30
 324:	0e 94 de 00 	call	0x1bc	; 0x1bc <wololo>
 328:	f6 01       	movw	r30, r12
 32a:	82 93       	st	-Z, r24
 32c:	6f 01       	movw	r12, r30
			dataInt = dataInt/10;
 32e:	97 01       	movw	r18, r14
 330:	ad ec       	ldi	r26, 0xCD	; 205
 332:	bc ec       	ldi	r27, 0xCC	; 204
 334:	0e 94 de 05 	call	0xbbc	; 0xbbc <__umulhisi3>
 338:	7c 01       	movw	r14, r24
 33a:	f6 94       	lsr	r15
 33c:	e7 94       	ror	r14
 33e:	f6 94       	lsr	r15
 340:	e7 94       	ror	r14
 342:	f6 94       	lsr	r15
 344:	e7 94       	ror	r14
		dataFloat = roundf(dataFloat * 1000) / 1000;
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
 346:	01 50       	subi	r16, 0x01	; 1
 348:	11 09       	sbc	r17, r1
 34a:	40 f6       	brcc	.-112    	; 0x2dc <main+0xa6>
 34c:	2f c0       	rjmp	.+94     	; 0x3ac <main+0x176>
			dataInt = dataInt/10;
		}

		//Transmits data until we get TCNT0 = 191 twenty times 
		while (1) {
			uint8_t data = dataArray[index];	//Get the integer to send	
 34e:	e1 e0       	ldi	r30, 0x01	; 1
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	ec 0f       	add	r30, r28
 354:	fd 1f       	adc	r31, r29
 356:	e1 0f       	add	r30, r17
 358:	f1 1d       	adc	r31, r1
			uart_transmit(data);
 35a:	80 81       	ld	r24, Z
 35c:	0e 94 99 00 	call	0x132	; 0x132 <uart_transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 360:	8f ed       	ldi	r24, 0xDF	; 223
 362:	9e e2       	ldi	r25, 0x2E	; 46
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <main+0x12e>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x134>
 36a:	00 00       	nop
			_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
			index++;
 36c:	1f 5f       	subi	r17, 0xFF	; 255
			//Select next integer to send
			if (index == 4) {
 36e:	14 30       	cpi	r17, 0x04	; 4
 370:	09 f4       	brne	.+2      	; 0x374 <main+0x13e>
				index = 0;
 372:	13 2d       	mov	r17, r3
			}
			//Polling mechanism
			if(TCNT0>=211) {
 374:	86 b5       	in	r24, 0x26	; 38
 376:	83 3d       	cpi	r24, 0xD3	; 211
 378:	50 f3       	brcs	.-44     	; 0x34e <main+0x118>
				TCNT0 = 0;
 37a:	16 bc       	out	0x26, r1	; 38
				if (counter == 50) {
 37c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 380:	82 33       	cpi	r24, 0x32	; 50
 382:	39 f4       	brne	.+14     	; 0x392 <main+0x15c>
					counter = 0;
 384:	20 92 00 01 	sts	0x0100, r2	; 0x800100 <_edata>
					counter++;
				}
			}
		}
		//Select next float to send
		if (floatIndex == 3) { 
 388:	93 e0       	ldi	r25, 0x03	; 3
 38a:	69 16       	cp	r6, r25
 38c:	71 04       	cpc	r7, r1
 38e:	39 f4       	brne	.+14     	; 0x39e <main+0x168>
 390:	0a c0       	rjmp	.+20     	; 0x3a6 <main+0x170>
				TCNT0 = 0;
				if (counter == 50) {
					counter = 0;
					break;
				} else {
					counter++;
 392:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 396:	8f 5f       	subi	r24, 0xFF	; 255
 398:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 39c:	d8 cf       	rjmp	.-80     	; 0x34e <main+0x118>
		}
		//Select next float to send
		if (floatIndex == 3) { 
			floatIndex = 0;
		} else {
			floatIndex++;
 39e:	ef ef       	ldi	r30, 0xFF	; 255
 3a0:	6e 1a       	sub	r6, r30
 3a2:	7e 0a       	sbc	r7, r30
 3a4:	60 cf       	rjmp	.-320    	; 0x266 <main+0x30>
				}
			}
		}
		//Select next float to send
		if (floatIndex == 3) { 
			floatIndex = 0;
 3a6:	61 2c       	mov	r6, r1
 3a8:	71 2c       	mov	r7, r1
		} else {
			floatIndex++;
		}
	}
 3aa:	5d cf       	rjmp	.-326    	; 0x266 <main+0x30>
		}

		//Transmits data until we get TCNT0 = 191 twenty times 
		while (1) {
			uint8_t data = dataArray[index];	//Get the integer to send	
			uart_transmit(data);
 3ac:	89 81       	ldd	r24, Y+1	; 0x01
 3ae:	0e 94 99 00 	call	0x132	; 0x132 <uart_transmit>
 3b2:	8f ed       	ldi	r24, 0xDF	; 223
 3b4:	9e e2       	ldi	r25, 0x2E	; 46
 3b6:	01 97       	sbiw	r24, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <main+0x180>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <main+0x186>
 3bc:	00 00       	nop
			_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
			index++;
 3be:	11 e0       	ldi	r17, 0x01	; 1
 3c0:	d9 cf       	rjmp	.-78     	; 0x374 <main+0x13e>

000003c2 <__subsf3>:
 3c2:	50 58       	subi	r21, 0x80	; 128

000003c4 <__addsf3>:
 3c4:	bb 27       	eor	r27, r27
 3c6:	aa 27       	eor	r26, r26
 3c8:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__addsf3x>
 3cc:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_round>
 3d0:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_pscA>
 3d4:	38 f0       	brcs	.+14     	; 0x3e4 <__addsf3+0x20>
 3d6:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_pscB>
 3da:	20 f0       	brcs	.+8      	; 0x3e4 <__addsf3+0x20>
 3dc:	39 f4       	brne	.+14     	; 0x3ec <__addsf3+0x28>
 3de:	9f 3f       	cpi	r25, 0xFF	; 255
 3e0:	19 f4       	brne	.+6      	; 0x3e8 <__addsf3+0x24>
 3e2:	26 f4       	brtc	.+8      	; 0x3ec <__addsf3+0x28>
 3e4:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>
 3e8:	0e f4       	brtc	.+2      	; 0x3ec <__addsf3+0x28>
 3ea:	e0 95       	com	r30
 3ec:	e7 fb       	bst	r30, 7
 3ee:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>

000003f2 <__addsf3x>:
 3f2:	e9 2f       	mov	r30, r25
 3f4:	0e 94 84 03 	call	0x708	; 0x708 <__fp_split3>
 3f8:	58 f3       	brcs	.-42     	; 0x3d0 <__addsf3+0xc>
 3fa:	ba 17       	cp	r27, r26
 3fc:	62 07       	cpc	r22, r18
 3fe:	73 07       	cpc	r23, r19
 400:	84 07       	cpc	r24, r20
 402:	95 07       	cpc	r25, r21
 404:	20 f0       	brcs	.+8      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 406:	79 f4       	brne	.+30     	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
 408:	a6 f5       	brtc	.+104    	; 0x472 <__FUSE_REGION_LENGTH__+0x72>
 40a:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_zero>
 40e:	0e f4       	brtc	.+2      	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
 410:	e0 95       	com	r30
 412:	0b 2e       	mov	r0, r27
 414:	ba 2f       	mov	r27, r26
 416:	a0 2d       	mov	r26, r0
 418:	0b 01       	movw	r0, r22
 41a:	b9 01       	movw	r22, r18
 41c:	90 01       	movw	r18, r0
 41e:	0c 01       	movw	r0, r24
 420:	ca 01       	movw	r24, r20
 422:	a0 01       	movw	r20, r0
 424:	11 24       	eor	r1, r1
 426:	ff 27       	eor	r31, r31
 428:	59 1b       	sub	r21, r25
 42a:	99 f0       	breq	.+38     	; 0x452 <__FUSE_REGION_LENGTH__+0x52>
 42c:	59 3f       	cpi	r21, 0xF9	; 249
 42e:	50 f4       	brcc	.+20     	; 0x444 <__FUSE_REGION_LENGTH__+0x44>
 430:	50 3e       	cpi	r21, 0xE0	; 224
 432:	68 f1       	brcs	.+90     	; 0x48e <__FUSE_REGION_LENGTH__+0x8e>
 434:	1a 16       	cp	r1, r26
 436:	f0 40       	sbci	r31, 0x00	; 0
 438:	a2 2f       	mov	r26, r18
 43a:	23 2f       	mov	r18, r19
 43c:	34 2f       	mov	r19, r20
 43e:	44 27       	eor	r20, r20
 440:	58 5f       	subi	r21, 0xF8	; 248
 442:	f3 cf       	rjmp	.-26     	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
 444:	46 95       	lsr	r20
 446:	37 95       	ror	r19
 448:	27 95       	ror	r18
 44a:	a7 95       	ror	r26
 44c:	f0 40       	sbci	r31, 0x00	; 0
 44e:	53 95       	inc	r21
 450:	c9 f7       	brne	.-14     	; 0x444 <__FUSE_REGION_LENGTH__+0x44>
 452:	7e f4       	brtc	.+30     	; 0x472 <__FUSE_REGION_LENGTH__+0x72>
 454:	1f 16       	cp	r1, r31
 456:	ba 0b       	sbc	r27, r26
 458:	62 0b       	sbc	r22, r18
 45a:	73 0b       	sbc	r23, r19
 45c:	84 0b       	sbc	r24, r20
 45e:	ba f0       	brmi	.+46     	; 0x48e <__FUSE_REGION_LENGTH__+0x8e>
 460:	91 50       	subi	r25, 0x01	; 1
 462:	a1 f0       	breq	.+40     	; 0x48c <__FUSE_REGION_LENGTH__+0x8c>
 464:	ff 0f       	add	r31, r31
 466:	bb 1f       	adc	r27, r27
 468:	66 1f       	adc	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	c2 f7       	brpl	.-16     	; 0x460 <__FUSE_REGION_LENGTH__+0x60>
 470:	0e c0       	rjmp	.+28     	; 0x48e <__FUSE_REGION_LENGTH__+0x8e>
 472:	ba 0f       	add	r27, r26
 474:	62 1f       	adc	r22, r18
 476:	73 1f       	adc	r23, r19
 478:	84 1f       	adc	r24, r20
 47a:	48 f4       	brcc	.+18     	; 0x48e <__FUSE_REGION_LENGTH__+0x8e>
 47c:	87 95       	ror	r24
 47e:	77 95       	ror	r23
 480:	67 95       	ror	r22
 482:	b7 95       	ror	r27
 484:	f7 95       	ror	r31
 486:	9e 3f       	cpi	r25, 0xFE	; 254
 488:	08 f0       	brcs	.+2      	; 0x48c <__FUSE_REGION_LENGTH__+0x8c>
 48a:	b0 cf       	rjmp	.-160    	; 0x3ec <__addsf3+0x28>
 48c:	93 95       	inc	r25
 48e:	88 0f       	add	r24, r24
 490:	08 f0       	brcs	.+2      	; 0x494 <__FUSE_REGION_LENGTH__+0x94>
 492:	99 27       	eor	r25, r25
 494:	ee 0f       	add	r30, r30
 496:	97 95       	ror	r25
 498:	87 95       	ror	r24
 49a:	08 95       	ret

0000049c <__cmpsf2>:
 49c:	0e 94 38 03 	call	0x670	; 0x670 <__fp_cmp>
 4a0:	08 f4       	brcc	.+2      	; 0x4a4 <__cmpsf2+0x8>
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	08 95       	ret

000004a6 <__divsf3>:
 4a6:	0e 94 67 02 	call	0x4ce	; 0x4ce <__divsf3x>
 4aa:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_round>
 4ae:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_pscB>
 4b2:	58 f0       	brcs	.+22     	; 0x4ca <__divsf3+0x24>
 4b4:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_pscA>
 4b8:	40 f0       	brcs	.+16     	; 0x4ca <__divsf3+0x24>
 4ba:	29 f4       	brne	.+10     	; 0x4c6 <__divsf3+0x20>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	29 f0       	breq	.+10     	; 0x4ca <__divsf3+0x24>
 4c0:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 4c4:	51 11       	cpse	r21, r1
 4c6:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 4ca:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>

000004ce <__divsf3x>:
 4ce:	0e 94 84 03 	call	0x708	; 0x708 <__fp_split3>
 4d2:	68 f3       	brcs	.-38     	; 0x4ae <__divsf3+0x8>

000004d4 <__divsf3_pse>:
 4d4:	99 23       	and	r25, r25
 4d6:	b1 f3       	breq	.-20     	; 0x4c4 <__divsf3+0x1e>
 4d8:	55 23       	and	r21, r21
 4da:	91 f3       	breq	.-28     	; 0x4c0 <__divsf3+0x1a>
 4dc:	95 1b       	sub	r25, r21
 4de:	55 0b       	sbc	r21, r21
 4e0:	bb 27       	eor	r27, r27
 4e2:	aa 27       	eor	r26, r26
 4e4:	62 17       	cp	r22, r18
 4e6:	73 07       	cpc	r23, r19
 4e8:	84 07       	cpc	r24, r20
 4ea:	38 f0       	brcs	.+14     	; 0x4fa <__divsf3_pse+0x26>
 4ec:	9f 5f       	subi	r25, 0xFF	; 255
 4ee:	5f 4f       	sbci	r21, 0xFF	; 255
 4f0:	22 0f       	add	r18, r18
 4f2:	33 1f       	adc	r19, r19
 4f4:	44 1f       	adc	r20, r20
 4f6:	aa 1f       	adc	r26, r26
 4f8:	a9 f3       	breq	.-22     	; 0x4e4 <__divsf3_pse+0x10>
 4fa:	35 d0       	rcall	.+106    	; 0x566 <__divsf3_pse+0x92>
 4fc:	0e 2e       	mov	r0, r30
 4fe:	3a f0       	brmi	.+14     	; 0x50e <__divsf3_pse+0x3a>
 500:	e0 e8       	ldi	r30, 0x80	; 128
 502:	32 d0       	rcall	.+100    	; 0x568 <__divsf3_pse+0x94>
 504:	91 50       	subi	r25, 0x01	; 1
 506:	50 40       	sbci	r21, 0x00	; 0
 508:	e6 95       	lsr	r30
 50a:	00 1c       	adc	r0, r0
 50c:	ca f7       	brpl	.-14     	; 0x500 <__divsf3_pse+0x2c>
 50e:	2b d0       	rcall	.+86     	; 0x566 <__divsf3_pse+0x92>
 510:	fe 2f       	mov	r31, r30
 512:	29 d0       	rcall	.+82     	; 0x566 <__divsf3_pse+0x92>
 514:	66 0f       	add	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	bb 1f       	adc	r27, r27
 51c:	26 17       	cp	r18, r22
 51e:	37 07       	cpc	r19, r23
 520:	48 07       	cpc	r20, r24
 522:	ab 07       	cpc	r26, r27
 524:	b0 e8       	ldi	r27, 0x80	; 128
 526:	09 f0       	breq	.+2      	; 0x52a <__divsf3_pse+0x56>
 528:	bb 0b       	sbc	r27, r27
 52a:	80 2d       	mov	r24, r0
 52c:	bf 01       	movw	r22, r30
 52e:	ff 27       	eor	r31, r31
 530:	93 58       	subi	r25, 0x83	; 131
 532:	5f 4f       	sbci	r21, 0xFF	; 255
 534:	3a f0       	brmi	.+14     	; 0x544 <__divsf3_pse+0x70>
 536:	9e 3f       	cpi	r25, 0xFE	; 254
 538:	51 05       	cpc	r21, r1
 53a:	78 f0       	brcs	.+30     	; 0x55a <__divsf3_pse+0x86>
 53c:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 540:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 544:	5f 3f       	cpi	r21, 0xFF	; 255
 546:	e4 f3       	brlt	.-8      	; 0x540 <__divsf3_pse+0x6c>
 548:	98 3e       	cpi	r25, 0xE8	; 232
 54a:	d4 f3       	brlt	.-12     	; 0x540 <__divsf3_pse+0x6c>
 54c:	86 95       	lsr	r24
 54e:	77 95       	ror	r23
 550:	67 95       	ror	r22
 552:	b7 95       	ror	r27
 554:	f7 95       	ror	r31
 556:	9f 5f       	subi	r25, 0xFF	; 255
 558:	c9 f7       	brne	.-14     	; 0x54c <__divsf3_pse+0x78>
 55a:	88 0f       	add	r24, r24
 55c:	91 1d       	adc	r25, r1
 55e:	96 95       	lsr	r25
 560:	87 95       	ror	r24
 562:	97 f9       	bld	r25, 7
 564:	08 95       	ret
 566:	e1 e0       	ldi	r30, 0x01	; 1
 568:	66 0f       	add	r22, r22
 56a:	77 1f       	adc	r23, r23
 56c:	88 1f       	adc	r24, r24
 56e:	bb 1f       	adc	r27, r27
 570:	62 17       	cp	r22, r18
 572:	73 07       	cpc	r23, r19
 574:	84 07       	cpc	r24, r20
 576:	ba 07       	cpc	r27, r26
 578:	20 f0       	brcs	.+8      	; 0x582 <__divsf3_pse+0xae>
 57a:	62 1b       	sub	r22, r18
 57c:	73 0b       	sbc	r23, r19
 57e:	84 0b       	sbc	r24, r20
 580:	ba 0b       	sbc	r27, r26
 582:	ee 1f       	adc	r30, r30
 584:	88 f7       	brcc	.-30     	; 0x568 <__divsf3_pse+0x94>
 586:	e0 95       	com	r30
 588:	08 95       	ret

0000058a <__fixsfsi>:
 58a:	0e 94 cc 02 	call	0x598	; 0x598 <__fixunssfsi>
 58e:	68 94       	set
 590:	b1 11       	cpse	r27, r1
 592:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 596:	08 95       	ret

00000598 <__fixunssfsi>:
 598:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_splitA>
 59c:	88 f0       	brcs	.+34     	; 0x5c0 <__fixunssfsi+0x28>
 59e:	9f 57       	subi	r25, 0x7F	; 127
 5a0:	98 f0       	brcs	.+38     	; 0x5c8 <__fixunssfsi+0x30>
 5a2:	b9 2f       	mov	r27, r25
 5a4:	99 27       	eor	r25, r25
 5a6:	b7 51       	subi	r27, 0x17	; 23
 5a8:	b0 f0       	brcs	.+44     	; 0x5d6 <__fixunssfsi+0x3e>
 5aa:	e1 f0       	breq	.+56     	; 0x5e4 <__fixunssfsi+0x4c>
 5ac:	66 0f       	add	r22, r22
 5ae:	77 1f       	adc	r23, r23
 5b0:	88 1f       	adc	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	1a f0       	brmi	.+6      	; 0x5bc <__fixunssfsi+0x24>
 5b6:	ba 95       	dec	r27
 5b8:	c9 f7       	brne	.-14     	; 0x5ac <__fixunssfsi+0x14>
 5ba:	14 c0       	rjmp	.+40     	; 0x5e4 <__fixunssfsi+0x4c>
 5bc:	b1 30       	cpi	r27, 0x01	; 1
 5be:	91 f0       	breq	.+36     	; 0x5e4 <__fixunssfsi+0x4c>
 5c0:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_zero>
 5c4:	b1 e0       	ldi	r27, 0x01	; 1
 5c6:	08 95       	ret
 5c8:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_zero>
 5cc:	67 2f       	mov	r22, r23
 5ce:	78 2f       	mov	r23, r24
 5d0:	88 27       	eor	r24, r24
 5d2:	b8 5f       	subi	r27, 0xF8	; 248
 5d4:	39 f0       	breq	.+14     	; 0x5e4 <__fixunssfsi+0x4c>
 5d6:	b9 3f       	cpi	r27, 0xF9	; 249
 5d8:	cc f3       	brlt	.-14     	; 0x5cc <__fixunssfsi+0x34>
 5da:	86 95       	lsr	r24
 5dc:	77 95       	ror	r23
 5de:	67 95       	ror	r22
 5e0:	b3 95       	inc	r27
 5e2:	d9 f7       	brne	.-10     	; 0x5da <__fixunssfsi+0x42>
 5e4:	3e f4       	brtc	.+14     	; 0x5f4 <__fixunssfsi+0x5c>
 5e6:	90 95       	com	r25
 5e8:	80 95       	com	r24
 5ea:	70 95       	com	r23
 5ec:	61 95       	neg	r22
 5ee:	7f 4f       	sbci	r23, 0xFF	; 255
 5f0:	8f 4f       	sbci	r24, 0xFF	; 255
 5f2:	9f 4f       	sbci	r25, 0xFF	; 255
 5f4:	08 95       	ret

000005f6 <__floatunsisf>:
 5f6:	e8 94       	clt
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__floatsisf+0x12>

000005fa <__floatsisf>:
 5fa:	97 fb       	bst	r25, 7
 5fc:	3e f4       	brtc	.+14     	; 0x60c <__floatsisf+0x12>
 5fe:	90 95       	com	r25
 600:	80 95       	com	r24
 602:	70 95       	com	r23
 604:	61 95       	neg	r22
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	99 23       	and	r25, r25
 60e:	a9 f0       	breq	.+42     	; 0x63a <__floatsisf+0x40>
 610:	f9 2f       	mov	r31, r25
 612:	96 e9       	ldi	r25, 0x96	; 150
 614:	bb 27       	eor	r27, r27
 616:	93 95       	inc	r25
 618:	f6 95       	lsr	r31
 61a:	87 95       	ror	r24
 61c:	77 95       	ror	r23
 61e:	67 95       	ror	r22
 620:	b7 95       	ror	r27
 622:	f1 11       	cpse	r31, r1
 624:	f8 cf       	rjmp	.-16     	; 0x616 <__floatsisf+0x1c>
 626:	fa f4       	brpl	.+62     	; 0x666 <__floatsisf+0x6c>
 628:	bb 0f       	add	r27, r27
 62a:	11 f4       	brne	.+4      	; 0x630 <__floatsisf+0x36>
 62c:	60 ff       	sbrs	r22, 0
 62e:	1b c0       	rjmp	.+54     	; 0x666 <__floatsisf+0x6c>
 630:	6f 5f       	subi	r22, 0xFF	; 255
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	16 c0       	rjmp	.+44     	; 0x666 <__floatsisf+0x6c>
 63a:	88 23       	and	r24, r24
 63c:	11 f0       	breq	.+4      	; 0x642 <__floatsisf+0x48>
 63e:	96 e9       	ldi	r25, 0x96	; 150
 640:	11 c0       	rjmp	.+34     	; 0x664 <__floatsisf+0x6a>
 642:	77 23       	and	r23, r23
 644:	21 f0       	breq	.+8      	; 0x64e <__floatsisf+0x54>
 646:	9e e8       	ldi	r25, 0x8E	; 142
 648:	87 2f       	mov	r24, r23
 64a:	76 2f       	mov	r23, r22
 64c:	05 c0       	rjmp	.+10     	; 0x658 <__floatsisf+0x5e>
 64e:	66 23       	and	r22, r22
 650:	71 f0       	breq	.+28     	; 0x66e <__floatsisf+0x74>
 652:	96 e8       	ldi	r25, 0x86	; 134
 654:	86 2f       	mov	r24, r22
 656:	70 e0       	ldi	r23, 0x00	; 0
 658:	60 e0       	ldi	r22, 0x00	; 0
 65a:	2a f0       	brmi	.+10     	; 0x666 <__floatsisf+0x6c>
 65c:	9a 95       	dec	r25
 65e:	66 0f       	add	r22, r22
 660:	77 1f       	adc	r23, r23
 662:	88 1f       	adc	r24, r24
 664:	da f7       	brpl	.-10     	; 0x65c <__floatsisf+0x62>
 666:	88 0f       	add	r24, r24
 668:	96 95       	lsr	r25
 66a:	87 95       	ror	r24
 66c:	97 f9       	bld	r25, 7
 66e:	08 95       	ret

00000670 <__fp_cmp>:
 670:	99 0f       	add	r25, r25
 672:	00 08       	sbc	r0, r0
 674:	55 0f       	add	r21, r21
 676:	aa 0b       	sbc	r26, r26
 678:	e0 e8       	ldi	r30, 0x80	; 128
 67a:	fe ef       	ldi	r31, 0xFE	; 254
 67c:	16 16       	cp	r1, r22
 67e:	17 06       	cpc	r1, r23
 680:	e8 07       	cpc	r30, r24
 682:	f9 07       	cpc	r31, r25
 684:	c0 f0       	brcs	.+48     	; 0x6b6 <__fp_cmp+0x46>
 686:	12 16       	cp	r1, r18
 688:	13 06       	cpc	r1, r19
 68a:	e4 07       	cpc	r30, r20
 68c:	f5 07       	cpc	r31, r21
 68e:	98 f0       	brcs	.+38     	; 0x6b6 <__fp_cmp+0x46>
 690:	62 1b       	sub	r22, r18
 692:	73 0b       	sbc	r23, r19
 694:	84 0b       	sbc	r24, r20
 696:	95 0b       	sbc	r25, r21
 698:	39 f4       	brne	.+14     	; 0x6a8 <__fp_cmp+0x38>
 69a:	0a 26       	eor	r0, r26
 69c:	61 f0       	breq	.+24     	; 0x6b6 <__fp_cmp+0x46>
 69e:	23 2b       	or	r18, r19
 6a0:	24 2b       	or	r18, r20
 6a2:	25 2b       	or	r18, r21
 6a4:	21 f4       	brne	.+8      	; 0x6ae <__fp_cmp+0x3e>
 6a6:	08 95       	ret
 6a8:	0a 26       	eor	r0, r26
 6aa:	09 f4       	brne	.+2      	; 0x6ae <__fp_cmp+0x3e>
 6ac:	a1 40       	sbci	r26, 0x01	; 1
 6ae:	a6 95       	lsr	r26
 6b0:	8f ef       	ldi	r24, 0xFF	; 255
 6b2:	81 1d       	adc	r24, r1
 6b4:	81 1d       	adc	r24, r1
 6b6:	08 95       	ret

000006b8 <__fp_inf>:
 6b8:	97 f9       	bld	r25, 7
 6ba:	9f 67       	ori	r25, 0x7F	; 127
 6bc:	80 e8       	ldi	r24, 0x80	; 128
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	60 e0       	ldi	r22, 0x00	; 0
 6c2:	08 95       	ret

000006c4 <__fp_nan>:
 6c4:	9f ef       	ldi	r25, 0xFF	; 255
 6c6:	80 ec       	ldi	r24, 0xC0	; 192
 6c8:	08 95       	ret

000006ca <__fp_pscA>:
 6ca:	00 24       	eor	r0, r0
 6cc:	0a 94       	dec	r0
 6ce:	16 16       	cp	r1, r22
 6d0:	17 06       	cpc	r1, r23
 6d2:	18 06       	cpc	r1, r24
 6d4:	09 06       	cpc	r0, r25
 6d6:	08 95       	ret

000006d8 <__fp_pscB>:
 6d8:	00 24       	eor	r0, r0
 6da:	0a 94       	dec	r0
 6dc:	12 16       	cp	r1, r18
 6de:	13 06       	cpc	r1, r19
 6e0:	14 06       	cpc	r1, r20
 6e2:	05 06       	cpc	r0, r21
 6e4:	08 95       	ret

000006e6 <__fp_round>:
 6e6:	09 2e       	mov	r0, r25
 6e8:	03 94       	inc	r0
 6ea:	00 0c       	add	r0, r0
 6ec:	11 f4       	brne	.+4      	; 0x6f2 <__fp_round+0xc>
 6ee:	88 23       	and	r24, r24
 6f0:	52 f0       	brmi	.+20     	; 0x706 <__fp_round+0x20>
 6f2:	bb 0f       	add	r27, r27
 6f4:	40 f4       	brcc	.+16     	; 0x706 <__fp_round+0x20>
 6f6:	bf 2b       	or	r27, r31
 6f8:	11 f4       	brne	.+4      	; 0x6fe <__fp_round+0x18>
 6fa:	60 ff       	sbrs	r22, 0
 6fc:	04 c0       	rjmp	.+8      	; 0x706 <__fp_round+0x20>
 6fe:	6f 5f       	subi	r22, 0xFF	; 255
 700:	7f 4f       	sbci	r23, 0xFF	; 255
 702:	8f 4f       	sbci	r24, 0xFF	; 255
 704:	9f 4f       	sbci	r25, 0xFF	; 255
 706:	08 95       	ret

00000708 <__fp_split3>:
 708:	57 fd       	sbrc	r21, 7
 70a:	90 58       	subi	r25, 0x80	; 128
 70c:	44 0f       	add	r20, r20
 70e:	55 1f       	adc	r21, r21
 710:	59 f0       	breq	.+22     	; 0x728 <__fp_splitA+0x10>
 712:	5f 3f       	cpi	r21, 0xFF	; 255
 714:	71 f0       	breq	.+28     	; 0x732 <__fp_splitA+0x1a>
 716:	47 95       	ror	r20

00000718 <__fp_splitA>:
 718:	88 0f       	add	r24, r24
 71a:	97 fb       	bst	r25, 7
 71c:	99 1f       	adc	r25, r25
 71e:	61 f0       	breq	.+24     	; 0x738 <__fp_splitA+0x20>
 720:	9f 3f       	cpi	r25, 0xFF	; 255
 722:	79 f0       	breq	.+30     	; 0x742 <__fp_splitA+0x2a>
 724:	87 95       	ror	r24
 726:	08 95       	ret
 728:	12 16       	cp	r1, r18
 72a:	13 06       	cpc	r1, r19
 72c:	14 06       	cpc	r1, r20
 72e:	55 1f       	adc	r21, r21
 730:	f2 cf       	rjmp	.-28     	; 0x716 <__fp_split3+0xe>
 732:	46 95       	lsr	r20
 734:	f1 df       	rcall	.-30     	; 0x718 <__fp_splitA>
 736:	08 c0       	rjmp	.+16     	; 0x748 <__fp_splitA+0x30>
 738:	16 16       	cp	r1, r22
 73a:	17 06       	cpc	r1, r23
 73c:	18 06       	cpc	r1, r24
 73e:	99 1f       	adc	r25, r25
 740:	f1 cf       	rjmp	.-30     	; 0x724 <__fp_splitA+0xc>
 742:	86 95       	lsr	r24
 744:	71 05       	cpc	r23, r1
 746:	61 05       	cpc	r22, r1
 748:	08 94       	sec
 74a:	08 95       	ret

0000074c <__fp_zero>:
 74c:	e8 94       	clt

0000074e <__fp_szero>:
 74e:	bb 27       	eor	r27, r27
 750:	66 27       	eor	r22, r22
 752:	77 27       	eor	r23, r23
 754:	cb 01       	movw	r24, r22
 756:	97 f9       	bld	r25, 7
 758:	08 95       	ret

0000075a <__mulsf3>:
 75a:	0e 94 c0 03 	call	0x780	; 0x780 <__mulsf3x>
 75e:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_round>
 762:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_pscA>
 766:	38 f0       	brcs	.+14     	; 0x776 <__mulsf3+0x1c>
 768:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_pscB>
 76c:	20 f0       	brcs	.+8      	; 0x776 <__mulsf3+0x1c>
 76e:	95 23       	and	r25, r21
 770:	11 f0       	breq	.+4      	; 0x776 <__mulsf3+0x1c>
 772:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 776:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>
 77a:	11 24       	eor	r1, r1
 77c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>

00000780 <__mulsf3x>:
 780:	0e 94 84 03 	call	0x708	; 0x708 <__fp_split3>
 784:	70 f3       	brcs	.-36     	; 0x762 <__mulsf3+0x8>

00000786 <__mulsf3_pse>:
 786:	95 9f       	mul	r25, r21
 788:	c1 f3       	breq	.-16     	; 0x77a <__mulsf3+0x20>
 78a:	95 0f       	add	r25, r21
 78c:	50 e0       	ldi	r21, 0x00	; 0
 78e:	55 1f       	adc	r21, r21
 790:	62 9f       	mul	r22, r18
 792:	f0 01       	movw	r30, r0
 794:	72 9f       	mul	r23, r18
 796:	bb 27       	eor	r27, r27
 798:	f0 0d       	add	r31, r0
 79a:	b1 1d       	adc	r27, r1
 79c:	63 9f       	mul	r22, r19
 79e:	aa 27       	eor	r26, r26
 7a0:	f0 0d       	add	r31, r0
 7a2:	b1 1d       	adc	r27, r1
 7a4:	aa 1f       	adc	r26, r26
 7a6:	64 9f       	mul	r22, r20
 7a8:	66 27       	eor	r22, r22
 7aa:	b0 0d       	add	r27, r0
 7ac:	a1 1d       	adc	r26, r1
 7ae:	66 1f       	adc	r22, r22
 7b0:	82 9f       	mul	r24, r18
 7b2:	22 27       	eor	r18, r18
 7b4:	b0 0d       	add	r27, r0
 7b6:	a1 1d       	adc	r26, r1
 7b8:	62 1f       	adc	r22, r18
 7ba:	73 9f       	mul	r23, r19
 7bc:	b0 0d       	add	r27, r0
 7be:	a1 1d       	adc	r26, r1
 7c0:	62 1f       	adc	r22, r18
 7c2:	83 9f       	mul	r24, r19
 7c4:	a0 0d       	add	r26, r0
 7c6:	61 1d       	adc	r22, r1
 7c8:	22 1f       	adc	r18, r18
 7ca:	74 9f       	mul	r23, r20
 7cc:	33 27       	eor	r19, r19
 7ce:	a0 0d       	add	r26, r0
 7d0:	61 1d       	adc	r22, r1
 7d2:	23 1f       	adc	r18, r19
 7d4:	84 9f       	mul	r24, r20
 7d6:	60 0d       	add	r22, r0
 7d8:	21 1d       	adc	r18, r1
 7da:	82 2f       	mov	r24, r18
 7dc:	76 2f       	mov	r23, r22
 7de:	6a 2f       	mov	r22, r26
 7e0:	11 24       	eor	r1, r1
 7e2:	9f 57       	subi	r25, 0x7F	; 127
 7e4:	50 40       	sbci	r21, 0x00	; 0
 7e6:	9a f0       	brmi	.+38     	; 0x80e <__mulsf3_pse+0x88>
 7e8:	f1 f0       	breq	.+60     	; 0x826 <__mulsf3_pse+0xa0>
 7ea:	88 23       	and	r24, r24
 7ec:	4a f0       	brmi	.+18     	; 0x800 <__mulsf3_pse+0x7a>
 7ee:	ee 0f       	add	r30, r30
 7f0:	ff 1f       	adc	r31, r31
 7f2:	bb 1f       	adc	r27, r27
 7f4:	66 1f       	adc	r22, r22
 7f6:	77 1f       	adc	r23, r23
 7f8:	88 1f       	adc	r24, r24
 7fa:	91 50       	subi	r25, 0x01	; 1
 7fc:	50 40       	sbci	r21, 0x00	; 0
 7fe:	a9 f7       	brne	.-22     	; 0x7ea <__mulsf3_pse+0x64>
 800:	9e 3f       	cpi	r25, 0xFE	; 254
 802:	51 05       	cpc	r21, r1
 804:	80 f0       	brcs	.+32     	; 0x826 <__mulsf3_pse+0xa0>
 806:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 80a:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 80e:	5f 3f       	cpi	r21, 0xFF	; 255
 810:	e4 f3       	brlt	.-8      	; 0x80a <__mulsf3_pse+0x84>
 812:	98 3e       	cpi	r25, 0xE8	; 232
 814:	d4 f3       	brlt	.-12     	; 0x80a <__mulsf3_pse+0x84>
 816:	86 95       	lsr	r24
 818:	77 95       	ror	r23
 81a:	67 95       	ror	r22
 81c:	b7 95       	ror	r27
 81e:	f7 95       	ror	r31
 820:	e7 95       	ror	r30
 822:	9f 5f       	subi	r25, 0xFF	; 255
 824:	c1 f7       	brne	.-16     	; 0x816 <__mulsf3_pse+0x90>
 826:	fe 2b       	or	r31, r30
 828:	88 0f       	add	r24, r24
 82a:	91 1d       	adc	r25, r1
 82c:	96 95       	lsr	r25
 82e:	87 95       	ror	r24
 830:	97 f9       	bld	r25, 7
 832:	08 95       	ret

00000834 <pow>:
 834:	fa 01       	movw	r30, r20
 836:	ee 0f       	add	r30, r30
 838:	ff 1f       	adc	r31, r31
 83a:	30 96       	adiw	r30, 0x00	; 0
 83c:	21 05       	cpc	r18, r1
 83e:	31 05       	cpc	r19, r1
 840:	a1 f1       	breq	.+104    	; 0x8aa <pow+0x76>
 842:	61 15       	cp	r22, r1
 844:	71 05       	cpc	r23, r1
 846:	61 f4       	brne	.+24     	; 0x860 <pow+0x2c>
 848:	80 38       	cpi	r24, 0x80	; 128
 84a:	bf e3       	ldi	r27, 0x3F	; 63
 84c:	9b 07       	cpc	r25, r27
 84e:	49 f1       	breq	.+82     	; 0x8a2 <pow+0x6e>
 850:	68 94       	set
 852:	90 38       	cpi	r25, 0x80	; 128
 854:	81 05       	cpc	r24, r1
 856:	61 f0       	breq	.+24     	; 0x870 <pow+0x3c>
 858:	80 38       	cpi	r24, 0x80	; 128
 85a:	bf ef       	ldi	r27, 0xFF	; 255
 85c:	9b 07       	cpc	r25, r27
 85e:	41 f0       	breq	.+16     	; 0x870 <pow+0x3c>
 860:	99 23       	and	r25, r25
 862:	4a f5       	brpl	.+82     	; 0x8b6 <pow+0x82>
 864:	ff 3f       	cpi	r31, 0xFF	; 255
 866:	e1 05       	cpc	r30, r1
 868:	31 05       	cpc	r19, r1
 86a:	21 05       	cpc	r18, r1
 86c:	19 f1       	breq	.+70     	; 0x8b4 <pow+0x80>
 86e:	e8 94       	clt
 870:	08 94       	sec
 872:	e7 95       	ror	r30
 874:	d9 01       	movw	r26, r18
 876:	aa 23       	and	r26, r26
 878:	29 f4       	brne	.+10     	; 0x884 <pow+0x50>
 87a:	ab 2f       	mov	r26, r27
 87c:	be 2f       	mov	r27, r30
 87e:	f8 5f       	subi	r31, 0xF8	; 248
 880:	d0 f3       	brcs	.-12     	; 0x876 <pow+0x42>
 882:	10 c0       	rjmp	.+32     	; 0x8a4 <pow+0x70>
 884:	ff 5f       	subi	r31, 0xFF	; 255
 886:	70 f4       	brcc	.+28     	; 0x8a4 <pow+0x70>
 888:	a6 95       	lsr	r26
 88a:	e0 f7       	brcc	.-8      	; 0x884 <pow+0x50>
 88c:	f7 39       	cpi	r31, 0x97	; 151
 88e:	50 f0       	brcs	.+20     	; 0x8a4 <pow+0x70>
 890:	19 f0       	breq	.+6      	; 0x898 <pow+0x64>
 892:	ff 3a       	cpi	r31, 0xAF	; 175
 894:	38 f4       	brcc	.+14     	; 0x8a4 <pow+0x70>
 896:	9f 77       	andi	r25, 0x7F	; 127
 898:	9f 93       	push	r25
 89a:	0d d0       	rcall	.+26     	; 0x8b6 <pow+0x82>
 89c:	0f 90       	pop	r0
 89e:	07 fc       	sbrc	r0, 7
 8a0:	90 58       	subi	r25, 0x80	; 128
 8a2:	08 95       	ret
 8a4:	46 f0       	brts	.+16     	; 0x8b6 <pow+0x82>
 8a6:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>
 8aa:	60 e0       	ldi	r22, 0x00	; 0
 8ac:	70 e0       	ldi	r23, 0x00	; 0
 8ae:	80 e8       	ldi	r24, 0x80	; 128
 8b0:	9f e3       	ldi	r25, 0x3F	; 63
 8b2:	08 95       	ret
 8b4:	4f e7       	ldi	r20, 0x7F	; 127
 8b6:	9f 77       	andi	r25, 0x7F	; 127
 8b8:	5f 93       	push	r21
 8ba:	4f 93       	push	r20
 8bc:	3f 93       	push	r19
 8be:	2f 93       	push	r18
 8c0:	0e 94 62 05 	call	0xac4	; 0xac4 <log>
 8c4:	2f 91       	pop	r18
 8c6:	3f 91       	pop	r19
 8c8:	4f 91       	pop	r20
 8ca:	5f 91       	pop	r21
 8cc:	0e 94 ad 03 	call	0x75a	; 0x75a <__mulsf3>
 8d0:	0c 94 96 04 	jmp	0x92c	; 0x92c <exp>

000008d4 <round>:
 8d4:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_splitA>
 8d8:	e8 f0       	brcs	.+58     	; 0x914 <__stack+0x15>
 8da:	9e 37       	cpi	r25, 0x7E	; 126
 8dc:	e8 f0       	brcs	.+58     	; 0x918 <__stack+0x19>
 8de:	96 39       	cpi	r25, 0x96	; 150
 8e0:	b8 f4       	brcc	.+46     	; 0x910 <__stack+0x11>
 8e2:	9e 38       	cpi	r25, 0x8E	; 142
 8e4:	48 f4       	brcc	.+18     	; 0x8f8 <round+0x24>
 8e6:	67 2f       	mov	r22, r23
 8e8:	78 2f       	mov	r23, r24
 8ea:	88 27       	eor	r24, r24
 8ec:	98 5f       	subi	r25, 0xF8	; 248
 8ee:	f9 cf       	rjmp	.-14     	; 0x8e2 <round+0xe>
 8f0:	86 95       	lsr	r24
 8f2:	77 95       	ror	r23
 8f4:	67 95       	ror	r22
 8f6:	93 95       	inc	r25
 8f8:	95 39       	cpi	r25, 0x95	; 149
 8fa:	d0 f3       	brcs	.-12     	; 0x8f0 <round+0x1c>
 8fc:	b6 2f       	mov	r27, r22
 8fe:	b1 70       	andi	r27, 0x01	; 1
 900:	6b 0f       	add	r22, r27
 902:	71 1d       	adc	r23, r1
 904:	81 1d       	adc	r24, r1
 906:	20 f4       	brcc	.+8      	; 0x910 <__stack+0x11>
 908:	87 95       	ror	r24
 90a:	77 95       	ror	r23
 90c:	67 95       	ror	r22
 90e:	93 95       	inc	r25
 910:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_mintl>
 914:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__fp_mpack>
 918:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 91c:	29 f4       	brne	.+10     	; 0x928 <__stack+0x29>
 91e:	16 f0       	brts	.+4      	; 0x924 <__stack+0x25>
 920:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 924:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_zero>
 928:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>

0000092c <exp>:
 92c:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_splitA>
 930:	a8 f3       	brcs	.-22     	; 0x91c <__stack+0x1d>
 932:	96 38       	cpi	r25, 0x86	; 134
 934:	a0 f7       	brcc	.-24     	; 0x91e <__stack+0x1f>
 936:	07 f8       	bld	r0, 7
 938:	0f 92       	push	r0
 93a:	e8 94       	clt
 93c:	2b e3       	ldi	r18, 0x3B	; 59
 93e:	3a ea       	ldi	r19, 0xAA	; 170
 940:	48 eb       	ldi	r20, 0xB8	; 184
 942:	5f e7       	ldi	r21, 0x7F	; 127
 944:	0e 94 c3 03 	call	0x786	; 0x786 <__mulsf3_pse>
 948:	0f 92       	push	r0
 94a:	0f 92       	push	r0
 94c:	0f 92       	push	r0
 94e:	4d b7       	in	r20, 0x3d	; 61
 950:	5e b7       	in	r21, 0x3e	; 62
 952:	0f 92       	push	r0
 954:	0e 94 aa 05 	call	0xb54	; 0xb54 <modf>
 958:	e8 e6       	ldi	r30, 0x68	; 104
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_powser>
 960:	4f 91       	pop	r20
 962:	5f 91       	pop	r21
 964:	ef 91       	pop	r30
 966:	ff 91       	pop	r31
 968:	e5 95       	asr	r30
 96a:	ee 1f       	adc	r30, r30
 96c:	ff 1f       	adc	r31, r31
 96e:	49 f0       	breq	.+18     	; 0x982 <exp+0x56>
 970:	fe 57       	subi	r31, 0x7E	; 126
 972:	e0 68       	ori	r30, 0x80	; 128
 974:	44 27       	eor	r20, r20
 976:	ee 0f       	add	r30, r30
 978:	44 1f       	adc	r20, r20
 97a:	fa 95       	dec	r31
 97c:	e1 f7       	brne	.-8      	; 0x976 <exp+0x4a>
 97e:	41 95       	neg	r20
 980:	55 0b       	sbc	r21, r21
 982:	0e 94 24 05 	call	0xa48	; 0xa48 <ldexp>
 986:	0f 90       	pop	r0
 988:	07 fe       	sbrs	r0, 7
 98a:	0c 94 18 05 	jmp	0xa30	; 0xa30 <inverse>
 98e:	08 95       	ret

00000990 <__fp_mintl>:
 990:	88 23       	and	r24, r24
 992:	71 f4       	brne	.+28     	; 0x9b0 <__fp_mintl+0x20>
 994:	77 23       	and	r23, r23
 996:	21 f0       	breq	.+8      	; 0x9a0 <__fp_mintl+0x10>
 998:	98 50       	subi	r25, 0x08	; 8
 99a:	87 2b       	or	r24, r23
 99c:	76 2f       	mov	r23, r22
 99e:	07 c0       	rjmp	.+14     	; 0x9ae <__fp_mintl+0x1e>
 9a0:	66 23       	and	r22, r22
 9a2:	11 f4       	brne	.+4      	; 0x9a8 <__fp_mintl+0x18>
 9a4:	99 27       	eor	r25, r25
 9a6:	0d c0       	rjmp	.+26     	; 0x9c2 <__fp_mintl+0x32>
 9a8:	90 51       	subi	r25, 0x10	; 16
 9aa:	86 2b       	or	r24, r22
 9ac:	70 e0       	ldi	r23, 0x00	; 0
 9ae:	60 e0       	ldi	r22, 0x00	; 0
 9b0:	2a f0       	brmi	.+10     	; 0x9bc <__fp_mintl+0x2c>
 9b2:	9a 95       	dec	r25
 9b4:	66 0f       	add	r22, r22
 9b6:	77 1f       	adc	r23, r23
 9b8:	88 1f       	adc	r24, r24
 9ba:	da f7       	brpl	.-10     	; 0x9b2 <__fp_mintl+0x22>
 9bc:	88 0f       	add	r24, r24
 9be:	96 95       	lsr	r25
 9c0:	87 95       	ror	r24
 9c2:	97 f9       	bld	r25, 7
 9c4:	08 95       	ret

000009c6 <__fp_mpack>:
 9c6:	9f 3f       	cpi	r25, 0xFF	; 255
 9c8:	31 f0       	breq	.+12     	; 0x9d6 <__fp_mpack_finite+0xc>

000009ca <__fp_mpack_finite>:
 9ca:	91 50       	subi	r25, 0x01	; 1
 9cc:	20 f4       	brcc	.+8      	; 0x9d6 <__fp_mpack_finite+0xc>
 9ce:	87 95       	ror	r24
 9d0:	77 95       	ror	r23
 9d2:	67 95       	ror	r22
 9d4:	b7 95       	ror	r27
 9d6:	88 0f       	add	r24, r24
 9d8:	91 1d       	adc	r25, r1
 9da:	96 95       	lsr	r25
 9dc:	87 95       	ror	r24
 9de:	97 f9       	bld	r25, 7
 9e0:	08 95       	ret

000009e2 <__fp_powser>:
 9e2:	df 93       	push	r29
 9e4:	cf 93       	push	r28
 9e6:	1f 93       	push	r17
 9e8:	0f 93       	push	r16
 9ea:	ff 92       	push	r15
 9ec:	ef 92       	push	r14
 9ee:	df 92       	push	r13
 9f0:	7b 01       	movw	r14, r22
 9f2:	8c 01       	movw	r16, r24
 9f4:	68 94       	set
 9f6:	06 c0       	rjmp	.+12     	; 0xa04 <__fp_powser+0x22>
 9f8:	da 2e       	mov	r13, r26
 9fa:	ef 01       	movw	r28, r30
 9fc:	0e 94 c0 03 	call	0x780	; 0x780 <__mulsf3x>
 a00:	fe 01       	movw	r30, r28
 a02:	e8 94       	clt
 a04:	a5 91       	lpm	r26, Z+
 a06:	25 91       	lpm	r18, Z+
 a08:	35 91       	lpm	r19, Z+
 a0a:	45 91       	lpm	r20, Z+
 a0c:	55 91       	lpm	r21, Z+
 a0e:	a6 f3       	brts	.-24     	; 0x9f8 <__fp_powser+0x16>
 a10:	ef 01       	movw	r28, r30
 a12:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__addsf3x>
 a16:	fe 01       	movw	r30, r28
 a18:	97 01       	movw	r18, r14
 a1a:	a8 01       	movw	r20, r16
 a1c:	da 94       	dec	r13
 a1e:	69 f7       	brne	.-38     	; 0x9fa <__fp_powser+0x18>
 a20:	df 90       	pop	r13
 a22:	ef 90       	pop	r14
 a24:	ff 90       	pop	r15
 a26:	0f 91       	pop	r16
 a28:	1f 91       	pop	r17
 a2a:	cf 91       	pop	r28
 a2c:	df 91       	pop	r29
 a2e:	08 95       	ret

00000a30 <inverse>:
 a30:	9b 01       	movw	r18, r22
 a32:	ac 01       	movw	r20, r24
 a34:	60 e0       	ldi	r22, 0x00	; 0
 a36:	70 e0       	ldi	r23, 0x00	; 0
 a38:	80 e8       	ldi	r24, 0x80	; 128
 a3a:	9f e3       	ldi	r25, 0x3F	; 63
 a3c:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__divsf3>
 a40:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>
 a44:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__fp_mpack>

00000a48 <ldexp>:
 a48:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_splitA>
 a4c:	d8 f3       	brcs	.-10     	; 0xa44 <inverse+0x14>
 a4e:	99 23       	and	r25, r25
 a50:	c9 f3       	breq	.-14     	; 0xa44 <inverse+0x14>
 a52:	94 0f       	add	r25, r20
 a54:	51 1d       	adc	r21, r1
 a56:	a3 f3       	brvs	.-24     	; 0xa40 <inverse+0x10>
 a58:	91 50       	subi	r25, 0x01	; 1
 a5a:	50 40       	sbci	r21, 0x00	; 0
 a5c:	94 f0       	brlt	.+36     	; 0xa82 <ldexp+0x3a>
 a5e:	59 f0       	breq	.+22     	; 0xa76 <ldexp+0x2e>
 a60:	88 23       	and	r24, r24
 a62:	32 f0       	brmi	.+12     	; 0xa70 <ldexp+0x28>
 a64:	66 0f       	add	r22, r22
 a66:	77 1f       	adc	r23, r23
 a68:	88 1f       	adc	r24, r24
 a6a:	91 50       	subi	r25, 0x01	; 1
 a6c:	50 40       	sbci	r21, 0x00	; 0
 a6e:	c1 f7       	brne	.-16     	; 0xa60 <ldexp+0x18>
 a70:	9e 3f       	cpi	r25, 0xFE	; 254
 a72:	51 05       	cpc	r21, r1
 a74:	2c f7       	brge	.-54     	; 0xa40 <inverse+0x10>
 a76:	88 0f       	add	r24, r24
 a78:	91 1d       	adc	r25, r1
 a7a:	96 95       	lsr	r25
 a7c:	87 95       	ror	r24
 a7e:	97 f9       	bld	r25, 7
 a80:	08 95       	ret
 a82:	5f 3f       	cpi	r21, 0xFF	; 255
 a84:	ac f0       	brlt	.+42     	; 0xab0 <ldexp+0x68>
 a86:	98 3e       	cpi	r25, 0xE8	; 232
 a88:	9c f0       	brlt	.+38     	; 0xab0 <ldexp+0x68>
 a8a:	bb 27       	eor	r27, r27
 a8c:	86 95       	lsr	r24
 a8e:	77 95       	ror	r23
 a90:	67 95       	ror	r22
 a92:	b7 95       	ror	r27
 a94:	08 f4       	brcc	.+2      	; 0xa98 <ldexp+0x50>
 a96:	b1 60       	ori	r27, 0x01	; 1
 a98:	93 95       	inc	r25
 a9a:	c1 f7       	brne	.-16     	; 0xa8c <ldexp+0x44>
 a9c:	bb 0f       	add	r27, r27
 a9e:	58 f7       	brcc	.-42     	; 0xa76 <ldexp+0x2e>
 aa0:	11 f4       	brne	.+4      	; 0xaa6 <ldexp+0x5e>
 aa2:	60 ff       	sbrs	r22, 0
 aa4:	e8 cf       	rjmp	.-48     	; 0xa76 <ldexp+0x2e>
 aa6:	6f 5f       	subi	r22, 0xFF	; 255
 aa8:	7f 4f       	sbci	r23, 0xFF	; 255
 aaa:	8f 4f       	sbci	r24, 0xFF	; 255
 aac:	9f 4f       	sbci	r25, 0xFF	; 255
 aae:	e3 cf       	rjmp	.-58     	; 0xa76 <ldexp+0x2e>
 ab0:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__fp_szero>
 ab4:	16 f0       	brts	.+4      	; 0xaba <ldexp+0x72>
 ab6:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__fp_mpack>
 aba:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_nan>
 abe:	68 94       	set
 ac0:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_inf>

00000ac4 <log>:
 ac4:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_splitA>
 ac8:	a8 f3       	brcs	.-22     	; 0xab4 <ldexp+0x6c>
 aca:	99 23       	and	r25, r25
 acc:	c1 f3       	breq	.-16     	; 0xabe <ldexp+0x76>
 ace:	ae f3       	brts	.-22     	; 0xaba <ldexp+0x72>
 ad0:	df 93       	push	r29
 ad2:	cf 93       	push	r28
 ad4:	1f 93       	push	r17
 ad6:	0f 93       	push	r16
 ad8:	ff 92       	push	r15
 ada:	c9 2f       	mov	r28, r25
 adc:	dd 27       	eor	r29, r29
 ade:	88 23       	and	r24, r24
 ae0:	2a f0       	brmi	.+10     	; 0xaec <log+0x28>
 ae2:	21 97       	sbiw	r28, 0x01	; 1
 ae4:	66 0f       	add	r22, r22
 ae6:	77 1f       	adc	r23, r23
 ae8:	88 1f       	adc	r24, r24
 aea:	da f7       	brpl	.-10     	; 0xae2 <log+0x1e>
 aec:	20 e0       	ldi	r18, 0x00	; 0
 aee:	30 e0       	ldi	r19, 0x00	; 0
 af0:	40 e8       	ldi	r20, 0x80	; 128
 af2:	5f eb       	ldi	r21, 0xBF	; 191
 af4:	9f e3       	ldi	r25, 0x3F	; 63
 af6:	88 39       	cpi	r24, 0x98	; 152
 af8:	20 f0       	brcs	.+8      	; 0xb02 <log+0x3e>
 afa:	80 3e       	cpi	r24, 0xE0	; 224
 afc:	38 f0       	brcs	.+14     	; 0xb0c <log+0x48>
 afe:	21 96       	adiw	r28, 0x01	; 1
 b00:	8f 77       	andi	r24, 0x7F	; 127
 b02:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__addsf3>
 b06:	e0 e9       	ldi	r30, 0x90	; 144
 b08:	f0 e0       	ldi	r31, 0x00	; 0
 b0a:	04 c0       	rjmp	.+8      	; 0xb14 <log+0x50>
 b0c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__addsf3>
 b10:	ed eb       	ldi	r30, 0xBD	; 189
 b12:	f0 e0       	ldi	r31, 0x00	; 0
 b14:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_powser>
 b18:	8b 01       	movw	r16, r22
 b1a:	be 01       	movw	r22, r28
 b1c:	ec 01       	movw	r28, r24
 b1e:	fb 2e       	mov	r15, r27
 b20:	6f 57       	subi	r22, 0x7F	; 127
 b22:	71 09       	sbc	r23, r1
 b24:	75 95       	asr	r23
 b26:	77 1f       	adc	r23, r23
 b28:	88 0b       	sbc	r24, r24
 b2a:	99 0b       	sbc	r25, r25
 b2c:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__floatsisf>
 b30:	28 e1       	ldi	r18, 0x18	; 24
 b32:	32 e7       	ldi	r19, 0x72	; 114
 b34:	41 e3       	ldi	r20, 0x31	; 49
 b36:	5f e3       	ldi	r21, 0x3F	; 63
 b38:	0e 94 c0 03 	call	0x780	; 0x780 <__mulsf3x>
 b3c:	af 2d       	mov	r26, r15
 b3e:	98 01       	movw	r18, r16
 b40:	ae 01       	movw	r20, r28
 b42:	ff 90       	pop	r15
 b44:	0f 91       	pop	r16
 b46:	1f 91       	pop	r17
 b48:	cf 91       	pop	r28
 b4a:	df 91       	pop	r29
 b4c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__addsf3x>
 b50:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_round>

00000b54 <modf>:
 b54:	fa 01       	movw	r30, r20
 b56:	dc 01       	movw	r26, r24
 b58:	aa 0f       	add	r26, r26
 b5a:	bb 1f       	adc	r27, r27
 b5c:	9b 01       	movw	r18, r22
 b5e:	ac 01       	movw	r20, r24
 b60:	bf 57       	subi	r27, 0x7F	; 127
 b62:	28 f4       	brcc	.+10     	; 0xb6e <modf+0x1a>
 b64:	22 27       	eor	r18, r18
 b66:	33 27       	eor	r19, r19
 b68:	44 27       	eor	r20, r20
 b6a:	50 78       	andi	r21, 0x80	; 128
 b6c:	20 c0       	rjmp	.+64     	; 0xbae <modf+0x5a>
 b6e:	b7 51       	subi	r27, 0x17	; 23
 b70:	90 f4       	brcc	.+36     	; 0xb96 <modf+0x42>
 b72:	ab 2f       	mov	r26, r27
 b74:	00 24       	eor	r0, r0
 b76:	46 95       	lsr	r20
 b78:	37 95       	ror	r19
 b7a:	27 95       	ror	r18
 b7c:	01 1c       	adc	r0, r1
 b7e:	a3 95       	inc	r26
 b80:	d2 f3       	brmi	.-12     	; 0xb76 <modf+0x22>
 b82:	00 20       	and	r0, r0
 b84:	71 f0       	breq	.+28     	; 0xba2 <modf+0x4e>
 b86:	22 0f       	add	r18, r18
 b88:	33 1f       	adc	r19, r19
 b8a:	44 1f       	adc	r20, r20
 b8c:	b3 95       	inc	r27
 b8e:	da f3       	brmi	.-10     	; 0xb86 <modf+0x32>
 b90:	0e d0       	rcall	.+28     	; 0xbae <modf+0x5a>
 b92:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__subsf3>
 b96:	61 30       	cpi	r22, 0x01	; 1
 b98:	71 05       	cpc	r23, r1
 b9a:	a0 e8       	ldi	r26, 0x80	; 128
 b9c:	8a 07       	cpc	r24, r26
 b9e:	b9 46       	sbci	r27, 0x69	; 105
 ba0:	30 f4       	brcc	.+12     	; 0xbae <modf+0x5a>
 ba2:	9b 01       	movw	r18, r22
 ba4:	ac 01       	movw	r20, r24
 ba6:	66 27       	eor	r22, r22
 ba8:	77 27       	eor	r23, r23
 baa:	88 27       	eor	r24, r24
 bac:	90 78       	andi	r25, 0x80	; 128
 bae:	30 96       	adiw	r30, 0x00	; 0
 bb0:	21 f0       	breq	.+8      	; 0xbba <modf+0x66>
 bb2:	20 83       	st	Z, r18
 bb4:	31 83       	std	Z+1, r19	; 0x01
 bb6:	42 83       	std	Z+2, r20	; 0x02
 bb8:	53 83       	std	Z+3, r21	; 0x03
 bba:	08 95       	ret

00000bbc <__umulhisi3>:
 bbc:	a2 9f       	mul	r26, r18
 bbe:	b0 01       	movw	r22, r0
 bc0:	b3 9f       	mul	r27, r19
 bc2:	c0 01       	movw	r24, r0
 bc4:	a3 9f       	mul	r26, r19
 bc6:	70 0d       	add	r23, r0
 bc8:	81 1d       	adc	r24, r1
 bca:	11 24       	eor	r1, r1
 bcc:	91 1d       	adc	r25, r1
 bce:	b2 9f       	mul	r27, r18
 bd0:	70 0d       	add	r23, r0
 bd2:	81 1d       	adc	r24, r1
 bd4:	11 24       	eor	r1, r1
 bd6:	91 1d       	adc	r25, r1
 bd8:	08 95       	ret

00000bda <_exit>:
 bda:	f8 94       	cli

00000bdc <__stop_program>:
 bdc:	ff cf       	rjmp	.-2      	; 0xbdc <__stop_program>
