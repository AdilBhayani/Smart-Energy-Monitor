
group37.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000c5e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c5e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000715  00000000  00000000  00000d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003c2  00000000  00000000  00001475  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ec  00000000  00000000  00001837  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  00001d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031a  00000000  00000000  00001e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000071d  00000000  00000000  000021ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000028cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  58:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  5c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  60:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  64:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <round+0x4>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_clear_bss>:
  f6:	21 e0       	ldi	r18, 0x01	; 1
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a1 30       	cpi	r26, 0x01	; 1
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	0e 94 21 01 	call	0x242	; 0x242 <main>
 10a:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <_exit>

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <uart_init>:
	return adcRead;
 }

 unsigned int adc_read_2() {
	return 0;
 }
 112:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 116:	87 e6       	ldi	r24, 0x67	; 103
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 11c:	e1 ec       	ldi	r30, 0xC1	; 193
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	88 60       	ori	r24, 0x08	; 8
 124:	80 83       	st	Z, r24
 126:	e2 ec       	ldi	r30, 0xC2	; 194
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	86 60       	ori	r24, 0x06	; 6
 12e:	80 83       	st	Z, r24
 130:	08 95       	ret

00000132 <uart_transmit>:
 132:	e0 ec       	ldi	r30, 0xC0	; 192
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	90 81       	ld	r25, Z
 138:	99 23       	and	r25, r25
 13a:	e9 f3       	breq	.-6      	; 0x136 <uart_transmit+0x4>
 13c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 140:	08 95       	ret

00000142 <timer0_init>:
 142:	85 b5       	in	r24, 0x25	; 37
 144:	85 60       	ori	r24, 0x05	; 5
 146:	85 bd       	out	0x25, r24	; 37
 148:	16 bc       	out	0x26, r1	; 38
 14a:	08 95       	ret

0000014c <find_decimal>:
 14c:	cf 92       	push	r12
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	6b 01       	movw	r12, r22
 156:	7c 01       	movw	r14, r24
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	40 e2       	ldi	r20, 0x20	; 32
 15e:	51 e4       	ldi	r21, 0x41	; 65
 160:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__cmpsf2>
 164:	88 23       	and	r24, r24
 166:	04 f1       	brlt	.+64     	; 0x1a8 <find_decimal+0x5c>
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	48 ec       	ldi	r20, 0xC8	; 200
 16e:	52 e4       	ldi	r21, 0x42	; 66
 170:	c7 01       	movw	r24, r14
 172:	b6 01       	movw	r22, r12
 174:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__cmpsf2>
 178:	88 23       	and	r24, r24
 17a:	cc f0       	brlt	.+50     	; 0x1ae <find_decimal+0x62>
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	4a e7       	ldi	r20, 0x7A	; 122
 182:	54 e4       	ldi	r21, 0x44	; 68
 184:	c7 01       	movw	r24, r14
 186:	b6 01       	movw	r22, r12
 188:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__cmpsf2>
 18c:	08 2e       	mov	r0, r24
 18e:	00 0c       	add	r0, r0
 190:	99 0b       	sbc	r25, r25
 192:	88 27       	eor	r24, r24
 194:	99 0f       	add	r25, r25
 196:	88 1f       	adc	r24, r24
 198:	99 27       	eor	r25, r25
 19a:	23 e0       	ldi	r18, 0x03	; 3
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	a9 01       	movw	r20, r18
 1a0:	48 1b       	sub	r20, r24
 1a2:	59 0b       	sbc	r21, r25
 1a4:	ca 01       	movw	r24, r20
 1a6:	05 c0       	rjmp	.+10     	; 0x1b2 <find_decimal+0x66>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <find_decimal+0x66>
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	ff 90       	pop	r15
 1b4:	ef 90       	pop	r14
 1b6:	df 90       	pop	r13
 1b8:	cf 90       	pop	r12
 1ba:	08 95       	ret

000001bc <wololo>:
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	41 30       	cpi	r20, 0x01	; 1
 1c0:	09 f4       	brne	.+2      	; 0x1c4 <wololo+0x8>
 1c2:	40 96       	adiw	r24, 0x10	; 16
 1c4:	61 11       	cpse	r22, r1
 1c6:	03 c0       	rjmp	.+6      	; 0x1ce <wololo+0x12>
 1c8:	80 5a       	subi	r24, 0xA0	; 160
 1ca:	9f 4f       	sbci	r25, 0xFF	; 255
 1cc:	08 95       	ret
 1ce:	61 30       	cpi	r22, 0x01	; 1
 1d0:	19 f4       	brne	.+6      	; 0x1d8 <wololo+0x1c>
 1d2:	80 5c       	subi	r24, 0xC0	; 192
 1d4:	9f 4f       	sbci	r25, 0xFF	; 255
 1d6:	08 95       	ret
 1d8:	62 30       	cpi	r22, 0x02	; 2
 1da:	09 f4       	brne	.+2      	; 0x1de <wololo+0x22>
 1dc:	80 96       	adiw	r24, 0x20	; 32
 1de:	08 95       	ret

000001e0 <adc_init>:
 1e0:	17 b8       	out	0x07, r1	; 7
 1e2:	ea e7       	ldi	r30, 0x7A	; 122
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	87 68       	ori	r24, 0x87	; 135
 1ea:	80 83       	st	Z, r24
 1ec:	08 95       	ret

000001ee <adc_read_1>:
 1ee:	ea e7       	ldi	r30, 0x7A	; 122
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	80 64       	ori	r24, 0x40	; 64
 1f6:	80 83       	st	Z, r24
 1f8:	80 81       	ld	r24, Z
 1fa:	84 ff       	sbrs	r24, 4
 1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <adc_read_1+0xa>
 1fe:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 202:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 206:	08 95       	ret

00000208 <adc_calculation>:

 float adc_calculation(unsigned int adcValue) {
	float calculatedValue;
	calculatedValue = (adcValue / 1000) * 3.3;
 208:	9c 01       	movw	r18, r24
 20a:	36 95       	lsr	r19
 20c:	27 95       	ror	r18
 20e:	36 95       	lsr	r19
 210:	27 95       	ror	r18
 212:	36 95       	lsr	r19
 214:	27 95       	ror	r18
 216:	a5 ec       	ldi	r26, 0xC5	; 197
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__umulhisi3>
 21e:	92 95       	swap	r25
 220:	82 95       	swap	r24
 222:	8f 70       	andi	r24, 0x0F	; 15
 224:	89 27       	eor	r24, r25
 226:	9f 70       	andi	r25, 0x0F	; 15
 228:	89 27       	eor	r24, r25
 22a:	bc 01       	movw	r22, r24
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 01 03 	call	0x602	; 0x602 <__floatunsisf>
 234:	23 e3       	ldi	r18, 0x33	; 51
 236:	33 e3       	ldi	r19, 0x33	; 51
 238:	43 e5       	ldi	r20, 0x53	; 83
 23a:	50 e4       	ldi	r21, 0x40	; 64
 23c:	0e 94 b3 03 	call	0x766	; 0x766 <__mulsf3>
	return calculatedValue; 
 240:	08 95       	ret

00000242 <main>:
#define F_CPU 16000000UL
#include <util/delay.h>

volatile uint8_t counter = 0; //Counter for the number of times the TCNT0 compares correctly

int main(void) {
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	00 d0       	rcall	.+0      	; 0x248 <main+0x6>
 248:	00 d0       	rcall	.+0      	; 0x24a <main+0x8>
 24a:	1f 92       	push	r1
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
	float voltage[20] = { 1.65, 2.03, 2.38, 2.65, 2.81, 2.85, 2.76, 2.55, 2.25, 1.89, 1.50, 1.12, 0.81, 0.578, 0.46, 0.47, 0.61, 0.851, 1.15, 1.56 };
	float current[20] = { 1.81, 2.12, 2.38, 2.56, 2.64, 2.62, 2.50, 2.29, 2.01, 1.69, 1.36, 1.07, 0.84, 0.69, 0.65, 0.71, 0.87, 1.11, 1.41 };
	float power = calcPower(&voltage, &current);
	*/

	adc_init();
 250:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <adc_init>
	uart_init();	
 254:	0e 94 89 00 	call	0x112	; 0x112 <uart_init>
	timer0_init();
 258:	0e 94 a1 00 	call	0x142	; 0x142 <timer0_init>
	float floatArray[4] = { 1234, 1235, 1236, 1237 }; //Array of values to send
	unsigned int floatIndex = 0;
 25c:	61 2c       	mov	r6, r1
 25e:	71 2c       	mov	r7, r1
		dataFloat = calculated;

		//Pre-wololo calculations and conversions
		dataFloat = roundf(dataFloat * 1000) / 1000;
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
 260:	0f 2e       	mov	r0, r31
 262:	f3 e0       	ldi	r31, 0x03	; 3
 264:	8f 2e       	mov	r8, r31
 266:	91 2c       	mov	r9, r1
 268:	f0 2d       	mov	r31, r0
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
				hasDecimal = 1;
			} else {
				hasDecimal = 0;
 26a:	21 2c       	mov	r2, r1
 26c:	32 2c       	mov	r3, r2
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	2d 83       	std	Y+5, r18	; 0x05
		uint8_t hasDecimal = 0;
		uint8_t dataArray[4];
		uint8_t index = 0;
		
		//Reading from the ADC and calculating
		unsigned int adcValue = adc_read_1();
 272:	0e 94 f7 00 	call	0x1ee	; 0x1ee <adc_read_1>
		float calculated = adc_calculation(adcValue);
 276:	0e 94 04 01 	call	0x208	; 0x208 <adc_calculation>
		dataFloat = calculated;

		//Pre-wololo calculations and conversions
		dataFloat = roundf(dataFloat * 1000) / 1000;
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	4a e7       	ldi	r20, 0x7A	; 122
 280:	54 e4       	ldi	r21, 0x44	; 68
 282:	0e 94 b3 03 	call	0x766	; 0x766 <__mulsf3>
 286:	0e 94 70 04 	call	0x8e0	; 0x8e0 <round>
 28a:	20 e0       	ldi	r18, 0x00	; 0
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	4a e7       	ldi	r20, 0x7A	; 122
 290:	54 e4       	ldi	r21, 0x44	; 68
 292:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__divsf3>
 296:	6b 01       	movw	r12, r22
 298:	7c 01       	movw	r14, r24
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
 29a:	0e 94 a6 00 	call	0x14c	; 0x14c <find_decimal>
 29e:	5c 01       	movw	r10, r24
 2a0:	bb 24       	eor	r11, r11
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
 2a2:	24 01       	movw	r4, r8
 2a4:	4a 18       	sub	r4, r10
 2a6:	5b 08       	sbc	r5, r11
 2a8:	b2 01       	movw	r22, r4
 2aa:	05 2c       	mov	r0, r5
 2ac:	00 0c       	add	r0, r0
 2ae:	88 0b       	sbc	r24, r24
 2b0:	99 0b       	sbc	r25, r25
 2b2:	0e 94 03 03 	call	0x606	; 0x606 <__floatsisf>
 2b6:	9b 01       	movw	r18, r22
 2b8:	ac 01       	movw	r20, r24
 2ba:	60 e0       	ldi	r22, 0x00	; 0
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	80 e2       	ldi	r24, 0x20	; 32
 2c0:	91 e4       	ldi	r25, 0x41	; 65
 2c2:	0e 94 20 04 	call	0x840	; 0x840 <pow>
 2c6:	a7 01       	movw	r20, r14
 2c8:	96 01       	movw	r18, r12
 2ca:	0e 94 b3 03 	call	0x766	; 0x766 <__mulsf3>
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	5f e3       	ldi	r21, 0x3F	; 63
 2d6:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__addsf3>
 2da:	0e 94 cb 02 	call	0x596	; 0x596 <__fixsfsi>
 2de:	7b 01       	movw	r14, r22
 2e0:	ce 01       	movw	r24, r28
 2e2:	05 96       	adiw	r24, 0x05	; 5
 2e4:	6c 01       	movw	r12, r24
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
 2e6:	84 01       	movw	r16, r8
			if ((decimalPos == i) && ((3-decimalPos) > 0)) {
 2e8:	0a 15       	cp	r16, r10
 2ea:	1b 05       	cpc	r17, r11
 2ec:	31 f4       	brne	.+12     	; 0x2fa <main+0xb8>
 2ee:	4d 81       	ldd	r20, Y+5	; 0x05
 2f0:	14 14       	cp	r1, r4
 2f2:	15 04       	cpc	r1, r5
 2f4:	1c f0       	brlt	.+6      	; 0x2fc <main+0xba>
 2f6:	43 2d       	mov	r20, r3
 2f8:	01 c0       	rjmp	.+2      	; 0x2fc <main+0xba>
				hasDecimal = 1;
			} else {
				hasDecimal = 0;
 2fa:	43 2d       	mov	r20, r3
			}
			dataArray[i] = wololo(dataInt%10, i, hasDecimal);
 2fc:	97 01       	movw	r18, r14
 2fe:	ad ec       	ldi	r26, 0xCD	; 205
 300:	bc ec       	ldi	r27, 0xCC	; 204
 302:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__umulhisi3>
 306:	96 95       	lsr	r25
 308:	87 95       	ror	r24
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	96 95       	lsr	r25
 310:	87 95       	ror	r24
 312:	9c 01       	movw	r18, r24
 314:	22 0f       	add	r18, r18
 316:	33 1f       	adc	r19, r19
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	88 0f       	add	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	88 0f       	add	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	82 0f       	add	r24, r18
 326:	93 1f       	adc	r25, r19
 328:	60 2f       	mov	r22, r16
 32a:	ee 2d       	mov	r30, r14
 32c:	e8 1b       	sub	r30, r24
 32e:	8e 2f       	mov	r24, r30
 330:	0e 94 de 00 	call	0x1bc	; 0x1bc <wololo>
 334:	f6 01       	movw	r30, r12
 336:	82 93       	st	-Z, r24
 338:	6f 01       	movw	r12, r30
			dataInt = dataInt/10;
 33a:	97 01       	movw	r18, r14
 33c:	ad ec       	ldi	r26, 0xCD	; 205
 33e:	bc ec       	ldi	r27, 0xCC	; 204
 340:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__umulhisi3>
 344:	7c 01       	movw	r14, r24
 346:	f6 94       	lsr	r15
 348:	e7 94       	ror	r14
 34a:	f6 94       	lsr	r15
 34c:	e7 94       	ror	r14
 34e:	f6 94       	lsr	r15
 350:	e7 94       	ror	r14
		dataFloat = roundf(dataFloat * 1000) / 1000;
		uint8_t decimalPos = find_decimal(dataFloat); //Find the decimal place
		unsigned int dataInt = (int)(dataFloat * pow(10, 3-decimalPos) + 0.5); //Convert to decimal for array conversion
		
		//Splits the integer into an array of 4 integers, each represents the value of a digit, the position of that digit, and if it has a decimal place
		for (int i=3;i>=0;i--) {
 352:	01 50       	subi	r16, 0x01	; 1
 354:	11 09       	sbc	r17, r1
 356:	40 f6       	brcc	.-112    	; 0x2e8 <main+0xa6>
 358:	2f c0       	rjmp	.+94     	; 0x3b8 <main+0x176>
			dataInt = dataInt/10;
		}

		//Transmits data until we get TCNT0 = 191 twenty times 
		while (1) {
			uint8_t data = dataArray[index];	//Get the integer to send	
 35a:	e1 e0       	ldi	r30, 0x01	; 1
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	ec 0f       	add	r30, r28
 360:	fd 1f       	adc	r31, r29
 362:	e1 0f       	add	r30, r17
 364:	f1 1d       	adc	r31, r1
			uart_transmit(data);
 366:	80 81       	ld	r24, Z
 368:	0e 94 99 00 	call	0x132	; 0x132 <uart_transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36c:	8f ed       	ldi	r24, 0xDF	; 223
 36e:	9e e2       	ldi	r25, 0x2E	; 46
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <main+0x12e>
 374:	00 c0       	rjmp	.+0      	; 0x376 <main+0x134>
 376:	00 00       	nop
			_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
			index++;
 378:	1f 5f       	subi	r17, 0xFF	; 255
			//Select next integer to send
			if (index == 4) {
 37a:	14 30       	cpi	r17, 0x04	; 4
 37c:	09 f4       	brne	.+2      	; 0x380 <main+0x13e>
				index = 0;
 37e:	13 2d       	mov	r17, r3
			}
			//Polling mechanism
			if(TCNT0>=211) {
 380:	86 b5       	in	r24, 0x26	; 38
 382:	83 3d       	cpi	r24, 0xD3	; 211
 384:	50 f3       	brcs	.-44     	; 0x35a <main+0x118>
				TCNT0 = 0;
 386:	16 bc       	out	0x26, r1	; 38
				if (counter == 50) {
 388:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 38c:	82 33       	cpi	r24, 0x32	; 50
 38e:	39 f4       	brne	.+14     	; 0x39e <main+0x15c>
					counter = 0;
 390:	20 92 00 01 	sts	0x0100, r2	; 0x800100 <_edata>
					counter++;
				}
			}
		}
		//Select next float to send
		if (floatIndex == 3) { 
 394:	93 e0       	ldi	r25, 0x03	; 3
 396:	69 16       	cp	r6, r25
 398:	71 04       	cpc	r7, r1
 39a:	39 f4       	brne	.+14     	; 0x3aa <main+0x168>
 39c:	0a c0       	rjmp	.+20     	; 0x3b2 <main+0x170>
				TCNT0 = 0;
				if (counter == 50) {
					counter = 0;
					break;
				} else {
					counter++;
 39e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 3a2:	8f 5f       	subi	r24, 0xFF	; 255
 3a4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 3a8:	d8 cf       	rjmp	.-80     	; 0x35a <main+0x118>
		}
		//Select next float to send
		if (floatIndex == 3) { 
			floatIndex = 0;
		} else {
			floatIndex++;
 3aa:	ef ef       	ldi	r30, 0xFF	; 255
 3ac:	6e 1a       	sub	r6, r30
 3ae:	7e 0a       	sbc	r7, r30
 3b0:	60 cf       	rjmp	.-320    	; 0x272 <main+0x30>
				}
			}
		}
		//Select next float to send
		if (floatIndex == 3) { 
			floatIndex = 0;
 3b2:	61 2c       	mov	r6, r1
 3b4:	71 2c       	mov	r7, r1
		} else {
			floatIndex++;
		}
	}
 3b6:	5d cf       	rjmp	.-326    	; 0x272 <main+0x30>
		}

		//Transmits data until we get TCNT0 = 191 twenty times 
		while (1) {
			uint8_t data = dataArray[index];	//Get the integer to send	
			uart_transmit(data);
 3b8:	89 81       	ldd	r24, Y+1	; 0x01
 3ba:	0e 94 99 00 	call	0x132	; 0x132 <uart_transmit>
 3be:	8f ed       	ldi	r24, 0xDF	; 223
 3c0:	9e e2       	ldi	r25, 0x2E	; 46
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <main+0x180>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <main+0x186>
 3c8:	00 00       	nop
			_delay_ms(3);	//Small time delay so that no apparent flicker on seven segment displays
			index++;
 3ca:	11 e0       	ldi	r17, 0x01	; 1
 3cc:	d9 cf       	rjmp	.-78     	; 0x380 <main+0x13e>

000003ce <__subsf3>:
 3ce:	50 58       	subi	r21, 0x80	; 128

000003d0 <__addsf3>:
 3d0:	bb 27       	eor	r27, r27
 3d2:	aa 27       	eor	r26, r26
 3d4:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__addsf3x>
 3d8:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_round>
 3dc:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_pscA>
 3e0:	38 f0       	brcs	.+14     	; 0x3f0 <__addsf3+0x20>
 3e2:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fp_pscB>
 3e6:	20 f0       	brcs	.+8      	; 0x3f0 <__addsf3+0x20>
 3e8:	39 f4       	brne	.+14     	; 0x3f8 <__addsf3+0x28>
 3ea:	9f 3f       	cpi	r25, 0xFF	; 255
 3ec:	19 f4       	brne	.+6      	; 0x3f4 <__addsf3+0x24>
 3ee:	26 f4       	brtc	.+8      	; 0x3f8 <__addsf3+0x28>
 3f0:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>
 3f4:	0e f4       	brtc	.+2      	; 0x3f8 <__addsf3+0x28>
 3f6:	e0 95       	com	r30
 3f8:	e7 fb       	bst	r30, 7
 3fa:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>

000003fe <__addsf3x>:
 3fe:	e9 2f       	mov	r30, r25
 400:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_split3>
 404:	58 f3       	brcs	.-42     	; 0x3dc <__addsf3+0xc>
 406:	ba 17       	cp	r27, r26
 408:	62 07       	cpc	r22, r18
 40a:	73 07       	cpc	r23, r19
 40c:	84 07       	cpc	r24, r20
 40e:	95 07       	cpc	r25, r21
 410:	20 f0       	brcs	.+8      	; 0x41a <__FUSE_REGION_LENGTH__+0x1a>
 412:	79 f4       	brne	.+30     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 414:	a6 f5       	brtc	.+104    	; 0x47e <__FUSE_REGION_LENGTH__+0x7e>
 416:	0c 94 ac 03 	jmp	0x758	; 0x758 <__fp_zero>
 41a:	0e f4       	brtc	.+2      	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 41c:	e0 95       	com	r30
 41e:	0b 2e       	mov	r0, r27
 420:	ba 2f       	mov	r27, r26
 422:	a0 2d       	mov	r26, r0
 424:	0b 01       	movw	r0, r22
 426:	b9 01       	movw	r22, r18
 428:	90 01       	movw	r18, r0
 42a:	0c 01       	movw	r0, r24
 42c:	ca 01       	movw	r24, r20
 42e:	a0 01       	movw	r20, r0
 430:	11 24       	eor	r1, r1
 432:	ff 27       	eor	r31, r31
 434:	59 1b       	sub	r21, r25
 436:	99 f0       	breq	.+38     	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
 438:	59 3f       	cpi	r21, 0xF9	; 249
 43a:	50 f4       	brcc	.+20     	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
 43c:	50 3e       	cpi	r21, 0xE0	; 224
 43e:	68 f1       	brcs	.+90     	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
 440:	1a 16       	cp	r1, r26
 442:	f0 40       	sbci	r31, 0x00	; 0
 444:	a2 2f       	mov	r26, r18
 446:	23 2f       	mov	r18, r19
 448:	34 2f       	mov	r19, r20
 44a:	44 27       	eor	r20, r20
 44c:	58 5f       	subi	r21, 0xF8	; 248
 44e:	f3 cf       	rjmp	.-26     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 450:	46 95       	lsr	r20
 452:	37 95       	ror	r19
 454:	27 95       	ror	r18
 456:	a7 95       	ror	r26
 458:	f0 40       	sbci	r31, 0x00	; 0
 45a:	53 95       	inc	r21
 45c:	c9 f7       	brne	.-14     	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
 45e:	7e f4       	brtc	.+30     	; 0x47e <__FUSE_REGION_LENGTH__+0x7e>
 460:	1f 16       	cp	r1, r31
 462:	ba 0b       	sbc	r27, r26
 464:	62 0b       	sbc	r22, r18
 466:	73 0b       	sbc	r23, r19
 468:	84 0b       	sbc	r24, r20
 46a:	ba f0       	brmi	.+46     	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
 46c:	91 50       	subi	r25, 0x01	; 1
 46e:	a1 f0       	breq	.+40     	; 0x498 <__FUSE_REGION_LENGTH__+0x98>
 470:	ff 0f       	add	r31, r31
 472:	bb 1f       	adc	r27, r27
 474:	66 1f       	adc	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	88 1f       	adc	r24, r24
 47a:	c2 f7       	brpl	.-16     	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
 47c:	0e c0       	rjmp	.+28     	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
 47e:	ba 0f       	add	r27, r26
 480:	62 1f       	adc	r22, r18
 482:	73 1f       	adc	r23, r19
 484:	84 1f       	adc	r24, r20
 486:	48 f4       	brcc	.+18     	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
 488:	87 95       	ror	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
 48e:	b7 95       	ror	r27
 490:	f7 95       	ror	r31
 492:	9e 3f       	cpi	r25, 0xFE	; 254
 494:	08 f0       	brcs	.+2      	; 0x498 <__FUSE_REGION_LENGTH__+0x98>
 496:	b0 cf       	rjmp	.-160    	; 0x3f8 <__addsf3+0x28>
 498:	93 95       	inc	r25
 49a:	88 0f       	add	r24, r24
 49c:	08 f0       	brcs	.+2      	; 0x4a0 <__FUSE_REGION_LENGTH__+0xa0>
 49e:	99 27       	eor	r25, r25
 4a0:	ee 0f       	add	r30, r30
 4a2:	97 95       	ror	r25
 4a4:	87 95       	ror	r24
 4a6:	08 95       	ret

000004a8 <__cmpsf2>:
 4a8:	0e 94 3e 03 	call	0x67c	; 0x67c <__fp_cmp>
 4ac:	08 f4       	brcc	.+2      	; 0x4b0 <__cmpsf2+0x8>
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	08 95       	ret

000004b2 <__divsf3>:
 4b2:	0e 94 6d 02 	call	0x4da	; 0x4da <__divsf3x>
 4b6:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_round>
 4ba:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fp_pscB>
 4be:	58 f0       	brcs	.+22     	; 0x4d6 <__divsf3+0x24>
 4c0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_pscA>
 4c4:	40 f0       	brcs	.+16     	; 0x4d6 <__divsf3+0x24>
 4c6:	29 f4       	brne	.+10     	; 0x4d2 <__divsf3+0x20>
 4c8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ca:	29 f0       	breq	.+10     	; 0x4d6 <__divsf3+0x24>
 4cc:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 4d0:	51 11       	cpse	r21, r1
 4d2:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 4d6:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>

000004da <__divsf3x>:
 4da:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_split3>
 4de:	68 f3       	brcs	.-38     	; 0x4ba <__divsf3+0x8>

000004e0 <__divsf3_pse>:
 4e0:	99 23       	and	r25, r25
 4e2:	b1 f3       	breq	.-20     	; 0x4d0 <__divsf3+0x1e>
 4e4:	55 23       	and	r21, r21
 4e6:	91 f3       	breq	.-28     	; 0x4cc <__divsf3+0x1a>
 4e8:	95 1b       	sub	r25, r21
 4ea:	55 0b       	sbc	r21, r21
 4ec:	bb 27       	eor	r27, r27
 4ee:	aa 27       	eor	r26, r26
 4f0:	62 17       	cp	r22, r18
 4f2:	73 07       	cpc	r23, r19
 4f4:	84 07       	cpc	r24, r20
 4f6:	38 f0       	brcs	.+14     	; 0x506 <__divsf3_pse+0x26>
 4f8:	9f 5f       	subi	r25, 0xFF	; 255
 4fa:	5f 4f       	sbci	r21, 0xFF	; 255
 4fc:	22 0f       	add	r18, r18
 4fe:	33 1f       	adc	r19, r19
 500:	44 1f       	adc	r20, r20
 502:	aa 1f       	adc	r26, r26
 504:	a9 f3       	breq	.-22     	; 0x4f0 <__divsf3_pse+0x10>
 506:	35 d0       	rcall	.+106    	; 0x572 <__divsf3_pse+0x92>
 508:	0e 2e       	mov	r0, r30
 50a:	3a f0       	brmi	.+14     	; 0x51a <__divsf3_pse+0x3a>
 50c:	e0 e8       	ldi	r30, 0x80	; 128
 50e:	32 d0       	rcall	.+100    	; 0x574 <__divsf3_pse+0x94>
 510:	91 50       	subi	r25, 0x01	; 1
 512:	50 40       	sbci	r21, 0x00	; 0
 514:	e6 95       	lsr	r30
 516:	00 1c       	adc	r0, r0
 518:	ca f7       	brpl	.-14     	; 0x50c <__divsf3_pse+0x2c>
 51a:	2b d0       	rcall	.+86     	; 0x572 <__divsf3_pse+0x92>
 51c:	fe 2f       	mov	r31, r30
 51e:	29 d0       	rcall	.+82     	; 0x572 <__divsf3_pse+0x92>
 520:	66 0f       	add	r22, r22
 522:	77 1f       	adc	r23, r23
 524:	88 1f       	adc	r24, r24
 526:	bb 1f       	adc	r27, r27
 528:	26 17       	cp	r18, r22
 52a:	37 07       	cpc	r19, r23
 52c:	48 07       	cpc	r20, r24
 52e:	ab 07       	cpc	r26, r27
 530:	b0 e8       	ldi	r27, 0x80	; 128
 532:	09 f0       	breq	.+2      	; 0x536 <__divsf3_pse+0x56>
 534:	bb 0b       	sbc	r27, r27
 536:	80 2d       	mov	r24, r0
 538:	bf 01       	movw	r22, r30
 53a:	ff 27       	eor	r31, r31
 53c:	93 58       	subi	r25, 0x83	; 131
 53e:	5f 4f       	sbci	r21, 0xFF	; 255
 540:	3a f0       	brmi	.+14     	; 0x550 <__divsf3_pse+0x70>
 542:	9e 3f       	cpi	r25, 0xFE	; 254
 544:	51 05       	cpc	r21, r1
 546:	78 f0       	brcs	.+30     	; 0x566 <__divsf3_pse+0x86>
 548:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 54c:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 550:	5f 3f       	cpi	r21, 0xFF	; 255
 552:	e4 f3       	brlt	.-8      	; 0x54c <__divsf3_pse+0x6c>
 554:	98 3e       	cpi	r25, 0xE8	; 232
 556:	d4 f3       	brlt	.-12     	; 0x54c <__divsf3_pse+0x6c>
 558:	86 95       	lsr	r24
 55a:	77 95       	ror	r23
 55c:	67 95       	ror	r22
 55e:	b7 95       	ror	r27
 560:	f7 95       	ror	r31
 562:	9f 5f       	subi	r25, 0xFF	; 255
 564:	c9 f7       	brne	.-14     	; 0x558 <__divsf3_pse+0x78>
 566:	88 0f       	add	r24, r24
 568:	91 1d       	adc	r25, r1
 56a:	96 95       	lsr	r25
 56c:	87 95       	ror	r24
 56e:	97 f9       	bld	r25, 7
 570:	08 95       	ret
 572:	e1 e0       	ldi	r30, 0x01	; 1
 574:	66 0f       	add	r22, r22
 576:	77 1f       	adc	r23, r23
 578:	88 1f       	adc	r24, r24
 57a:	bb 1f       	adc	r27, r27
 57c:	62 17       	cp	r22, r18
 57e:	73 07       	cpc	r23, r19
 580:	84 07       	cpc	r24, r20
 582:	ba 07       	cpc	r27, r26
 584:	20 f0       	brcs	.+8      	; 0x58e <__divsf3_pse+0xae>
 586:	62 1b       	sub	r22, r18
 588:	73 0b       	sbc	r23, r19
 58a:	84 0b       	sbc	r24, r20
 58c:	ba 0b       	sbc	r27, r26
 58e:	ee 1f       	adc	r30, r30
 590:	88 f7       	brcc	.-30     	; 0x574 <__divsf3_pse+0x94>
 592:	e0 95       	com	r30
 594:	08 95       	ret

00000596 <__fixsfsi>:
 596:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fixunssfsi>
 59a:	68 94       	set
 59c:	b1 11       	cpse	r27, r1
 59e:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 5a2:	08 95       	ret

000005a4 <__fixunssfsi>:
 5a4:	0e 94 92 03 	call	0x724	; 0x724 <__fp_splitA>
 5a8:	88 f0       	brcs	.+34     	; 0x5cc <__fixunssfsi+0x28>
 5aa:	9f 57       	subi	r25, 0x7F	; 127
 5ac:	98 f0       	brcs	.+38     	; 0x5d4 <__fixunssfsi+0x30>
 5ae:	b9 2f       	mov	r27, r25
 5b0:	99 27       	eor	r25, r25
 5b2:	b7 51       	subi	r27, 0x17	; 23
 5b4:	b0 f0       	brcs	.+44     	; 0x5e2 <__fixunssfsi+0x3e>
 5b6:	e1 f0       	breq	.+56     	; 0x5f0 <__fixunssfsi+0x4c>
 5b8:	66 0f       	add	r22, r22
 5ba:	77 1f       	adc	r23, r23
 5bc:	88 1f       	adc	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	1a f0       	brmi	.+6      	; 0x5c8 <__fixunssfsi+0x24>
 5c2:	ba 95       	dec	r27
 5c4:	c9 f7       	brne	.-14     	; 0x5b8 <__fixunssfsi+0x14>
 5c6:	14 c0       	rjmp	.+40     	; 0x5f0 <__fixunssfsi+0x4c>
 5c8:	b1 30       	cpi	r27, 0x01	; 1
 5ca:	91 f0       	breq	.+36     	; 0x5f0 <__fixunssfsi+0x4c>
 5cc:	0e 94 ac 03 	call	0x758	; 0x758 <__fp_zero>
 5d0:	b1 e0       	ldi	r27, 0x01	; 1
 5d2:	08 95       	ret
 5d4:	0c 94 ac 03 	jmp	0x758	; 0x758 <__fp_zero>
 5d8:	67 2f       	mov	r22, r23
 5da:	78 2f       	mov	r23, r24
 5dc:	88 27       	eor	r24, r24
 5de:	b8 5f       	subi	r27, 0xF8	; 248
 5e0:	39 f0       	breq	.+14     	; 0x5f0 <__fixunssfsi+0x4c>
 5e2:	b9 3f       	cpi	r27, 0xF9	; 249
 5e4:	cc f3       	brlt	.-14     	; 0x5d8 <__fixunssfsi+0x34>
 5e6:	86 95       	lsr	r24
 5e8:	77 95       	ror	r23
 5ea:	67 95       	ror	r22
 5ec:	b3 95       	inc	r27
 5ee:	d9 f7       	brne	.-10     	; 0x5e6 <__fixunssfsi+0x42>
 5f0:	3e f4       	brtc	.+14     	; 0x600 <__fixunssfsi+0x5c>
 5f2:	90 95       	com	r25
 5f4:	80 95       	com	r24
 5f6:	70 95       	com	r23
 5f8:	61 95       	neg	r22
 5fa:	7f 4f       	sbci	r23, 0xFF	; 255
 5fc:	8f 4f       	sbci	r24, 0xFF	; 255
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	08 95       	ret

00000602 <__floatunsisf>:
 602:	e8 94       	clt
 604:	09 c0       	rjmp	.+18     	; 0x618 <__floatsisf+0x12>

00000606 <__floatsisf>:
 606:	97 fb       	bst	r25, 7
 608:	3e f4       	brtc	.+14     	; 0x618 <__floatsisf+0x12>
 60a:	90 95       	com	r25
 60c:	80 95       	com	r24
 60e:	70 95       	com	r23
 610:	61 95       	neg	r22
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	8f 4f       	sbci	r24, 0xFF	; 255
 616:	9f 4f       	sbci	r25, 0xFF	; 255
 618:	99 23       	and	r25, r25
 61a:	a9 f0       	breq	.+42     	; 0x646 <__floatsisf+0x40>
 61c:	f9 2f       	mov	r31, r25
 61e:	96 e9       	ldi	r25, 0x96	; 150
 620:	bb 27       	eor	r27, r27
 622:	93 95       	inc	r25
 624:	f6 95       	lsr	r31
 626:	87 95       	ror	r24
 628:	77 95       	ror	r23
 62a:	67 95       	ror	r22
 62c:	b7 95       	ror	r27
 62e:	f1 11       	cpse	r31, r1
 630:	f8 cf       	rjmp	.-16     	; 0x622 <__floatsisf+0x1c>
 632:	fa f4       	brpl	.+62     	; 0x672 <__floatsisf+0x6c>
 634:	bb 0f       	add	r27, r27
 636:	11 f4       	brne	.+4      	; 0x63c <__floatsisf+0x36>
 638:	60 ff       	sbrs	r22, 0
 63a:	1b c0       	rjmp	.+54     	; 0x672 <__floatsisf+0x6c>
 63c:	6f 5f       	subi	r22, 0xFF	; 255
 63e:	7f 4f       	sbci	r23, 0xFF	; 255
 640:	8f 4f       	sbci	r24, 0xFF	; 255
 642:	9f 4f       	sbci	r25, 0xFF	; 255
 644:	16 c0       	rjmp	.+44     	; 0x672 <__floatsisf+0x6c>
 646:	88 23       	and	r24, r24
 648:	11 f0       	breq	.+4      	; 0x64e <__floatsisf+0x48>
 64a:	96 e9       	ldi	r25, 0x96	; 150
 64c:	11 c0       	rjmp	.+34     	; 0x670 <__floatsisf+0x6a>
 64e:	77 23       	and	r23, r23
 650:	21 f0       	breq	.+8      	; 0x65a <__floatsisf+0x54>
 652:	9e e8       	ldi	r25, 0x8E	; 142
 654:	87 2f       	mov	r24, r23
 656:	76 2f       	mov	r23, r22
 658:	05 c0       	rjmp	.+10     	; 0x664 <__floatsisf+0x5e>
 65a:	66 23       	and	r22, r22
 65c:	71 f0       	breq	.+28     	; 0x67a <__floatsisf+0x74>
 65e:	96 e8       	ldi	r25, 0x86	; 134
 660:	86 2f       	mov	r24, r22
 662:	70 e0       	ldi	r23, 0x00	; 0
 664:	60 e0       	ldi	r22, 0x00	; 0
 666:	2a f0       	brmi	.+10     	; 0x672 <__floatsisf+0x6c>
 668:	9a 95       	dec	r25
 66a:	66 0f       	add	r22, r22
 66c:	77 1f       	adc	r23, r23
 66e:	88 1f       	adc	r24, r24
 670:	da f7       	brpl	.-10     	; 0x668 <__floatsisf+0x62>
 672:	88 0f       	add	r24, r24
 674:	96 95       	lsr	r25
 676:	87 95       	ror	r24
 678:	97 f9       	bld	r25, 7
 67a:	08 95       	ret

0000067c <__fp_cmp>:
 67c:	99 0f       	add	r25, r25
 67e:	00 08       	sbc	r0, r0
 680:	55 0f       	add	r21, r21
 682:	aa 0b       	sbc	r26, r26
 684:	e0 e8       	ldi	r30, 0x80	; 128
 686:	fe ef       	ldi	r31, 0xFE	; 254
 688:	16 16       	cp	r1, r22
 68a:	17 06       	cpc	r1, r23
 68c:	e8 07       	cpc	r30, r24
 68e:	f9 07       	cpc	r31, r25
 690:	c0 f0       	brcs	.+48     	; 0x6c2 <__fp_cmp+0x46>
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	e4 07       	cpc	r30, r20
 698:	f5 07       	cpc	r31, r21
 69a:	98 f0       	brcs	.+38     	; 0x6c2 <__fp_cmp+0x46>
 69c:	62 1b       	sub	r22, r18
 69e:	73 0b       	sbc	r23, r19
 6a0:	84 0b       	sbc	r24, r20
 6a2:	95 0b       	sbc	r25, r21
 6a4:	39 f4       	brne	.+14     	; 0x6b4 <__fp_cmp+0x38>
 6a6:	0a 26       	eor	r0, r26
 6a8:	61 f0       	breq	.+24     	; 0x6c2 <__fp_cmp+0x46>
 6aa:	23 2b       	or	r18, r19
 6ac:	24 2b       	or	r18, r20
 6ae:	25 2b       	or	r18, r21
 6b0:	21 f4       	brne	.+8      	; 0x6ba <__fp_cmp+0x3e>
 6b2:	08 95       	ret
 6b4:	0a 26       	eor	r0, r26
 6b6:	09 f4       	brne	.+2      	; 0x6ba <__fp_cmp+0x3e>
 6b8:	a1 40       	sbci	r26, 0x01	; 1
 6ba:	a6 95       	lsr	r26
 6bc:	8f ef       	ldi	r24, 0xFF	; 255
 6be:	81 1d       	adc	r24, r1
 6c0:	81 1d       	adc	r24, r1
 6c2:	08 95       	ret

000006c4 <__fp_inf>:
 6c4:	97 f9       	bld	r25, 7
 6c6:	9f 67       	ori	r25, 0x7F	; 127
 6c8:	80 e8       	ldi	r24, 0x80	; 128
 6ca:	70 e0       	ldi	r23, 0x00	; 0
 6cc:	60 e0       	ldi	r22, 0x00	; 0
 6ce:	08 95       	ret

000006d0 <__fp_nan>:
 6d0:	9f ef       	ldi	r25, 0xFF	; 255
 6d2:	80 ec       	ldi	r24, 0xC0	; 192
 6d4:	08 95       	ret

000006d6 <__fp_pscA>:
 6d6:	00 24       	eor	r0, r0
 6d8:	0a 94       	dec	r0
 6da:	16 16       	cp	r1, r22
 6dc:	17 06       	cpc	r1, r23
 6de:	18 06       	cpc	r1, r24
 6e0:	09 06       	cpc	r0, r25
 6e2:	08 95       	ret

000006e4 <__fp_pscB>:
 6e4:	00 24       	eor	r0, r0
 6e6:	0a 94       	dec	r0
 6e8:	12 16       	cp	r1, r18
 6ea:	13 06       	cpc	r1, r19
 6ec:	14 06       	cpc	r1, r20
 6ee:	05 06       	cpc	r0, r21
 6f0:	08 95       	ret

000006f2 <__fp_round>:
 6f2:	09 2e       	mov	r0, r25
 6f4:	03 94       	inc	r0
 6f6:	00 0c       	add	r0, r0
 6f8:	11 f4       	brne	.+4      	; 0x6fe <__fp_round+0xc>
 6fa:	88 23       	and	r24, r24
 6fc:	52 f0       	brmi	.+20     	; 0x712 <__fp_round+0x20>
 6fe:	bb 0f       	add	r27, r27
 700:	40 f4       	brcc	.+16     	; 0x712 <__fp_round+0x20>
 702:	bf 2b       	or	r27, r31
 704:	11 f4       	brne	.+4      	; 0x70a <__fp_round+0x18>
 706:	60 ff       	sbrs	r22, 0
 708:	04 c0       	rjmp	.+8      	; 0x712 <__fp_round+0x20>
 70a:	6f 5f       	subi	r22, 0xFF	; 255
 70c:	7f 4f       	sbci	r23, 0xFF	; 255
 70e:	8f 4f       	sbci	r24, 0xFF	; 255
 710:	9f 4f       	sbci	r25, 0xFF	; 255
 712:	08 95       	ret

00000714 <__fp_split3>:
 714:	57 fd       	sbrc	r21, 7
 716:	90 58       	subi	r25, 0x80	; 128
 718:	44 0f       	add	r20, r20
 71a:	55 1f       	adc	r21, r21
 71c:	59 f0       	breq	.+22     	; 0x734 <__fp_splitA+0x10>
 71e:	5f 3f       	cpi	r21, 0xFF	; 255
 720:	71 f0       	breq	.+28     	; 0x73e <__fp_splitA+0x1a>
 722:	47 95       	ror	r20

00000724 <__fp_splitA>:
 724:	88 0f       	add	r24, r24
 726:	97 fb       	bst	r25, 7
 728:	99 1f       	adc	r25, r25
 72a:	61 f0       	breq	.+24     	; 0x744 <__fp_splitA+0x20>
 72c:	9f 3f       	cpi	r25, 0xFF	; 255
 72e:	79 f0       	breq	.+30     	; 0x74e <__fp_splitA+0x2a>
 730:	87 95       	ror	r24
 732:	08 95       	ret
 734:	12 16       	cp	r1, r18
 736:	13 06       	cpc	r1, r19
 738:	14 06       	cpc	r1, r20
 73a:	55 1f       	adc	r21, r21
 73c:	f2 cf       	rjmp	.-28     	; 0x722 <__fp_split3+0xe>
 73e:	46 95       	lsr	r20
 740:	f1 df       	rcall	.-30     	; 0x724 <__fp_splitA>
 742:	08 c0       	rjmp	.+16     	; 0x754 <__fp_splitA+0x30>
 744:	16 16       	cp	r1, r22
 746:	17 06       	cpc	r1, r23
 748:	18 06       	cpc	r1, r24
 74a:	99 1f       	adc	r25, r25
 74c:	f1 cf       	rjmp	.-30     	; 0x730 <__fp_splitA+0xc>
 74e:	86 95       	lsr	r24
 750:	71 05       	cpc	r23, r1
 752:	61 05       	cpc	r22, r1
 754:	08 94       	sec
 756:	08 95       	ret

00000758 <__fp_zero>:
 758:	e8 94       	clt

0000075a <__fp_szero>:
 75a:	bb 27       	eor	r27, r27
 75c:	66 27       	eor	r22, r22
 75e:	77 27       	eor	r23, r23
 760:	cb 01       	movw	r24, r22
 762:	97 f9       	bld	r25, 7
 764:	08 95       	ret

00000766 <__mulsf3>:
 766:	0e 94 c6 03 	call	0x78c	; 0x78c <__mulsf3x>
 76a:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_round>
 76e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_pscA>
 772:	38 f0       	brcs	.+14     	; 0x782 <__mulsf3+0x1c>
 774:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fp_pscB>
 778:	20 f0       	brcs	.+8      	; 0x782 <__mulsf3+0x1c>
 77a:	95 23       	and	r25, r21
 77c:	11 f0       	breq	.+4      	; 0x782 <__mulsf3+0x1c>
 77e:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 782:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>
 786:	11 24       	eor	r1, r1
 788:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>

0000078c <__mulsf3x>:
 78c:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_split3>
 790:	70 f3       	brcs	.-36     	; 0x76e <__mulsf3+0x8>

00000792 <__mulsf3_pse>:
 792:	95 9f       	mul	r25, r21
 794:	c1 f3       	breq	.-16     	; 0x786 <__mulsf3+0x20>
 796:	95 0f       	add	r25, r21
 798:	50 e0       	ldi	r21, 0x00	; 0
 79a:	55 1f       	adc	r21, r21
 79c:	62 9f       	mul	r22, r18
 79e:	f0 01       	movw	r30, r0
 7a0:	72 9f       	mul	r23, r18
 7a2:	bb 27       	eor	r27, r27
 7a4:	f0 0d       	add	r31, r0
 7a6:	b1 1d       	adc	r27, r1
 7a8:	63 9f       	mul	r22, r19
 7aa:	aa 27       	eor	r26, r26
 7ac:	f0 0d       	add	r31, r0
 7ae:	b1 1d       	adc	r27, r1
 7b0:	aa 1f       	adc	r26, r26
 7b2:	64 9f       	mul	r22, r20
 7b4:	66 27       	eor	r22, r22
 7b6:	b0 0d       	add	r27, r0
 7b8:	a1 1d       	adc	r26, r1
 7ba:	66 1f       	adc	r22, r22
 7bc:	82 9f       	mul	r24, r18
 7be:	22 27       	eor	r18, r18
 7c0:	b0 0d       	add	r27, r0
 7c2:	a1 1d       	adc	r26, r1
 7c4:	62 1f       	adc	r22, r18
 7c6:	73 9f       	mul	r23, r19
 7c8:	b0 0d       	add	r27, r0
 7ca:	a1 1d       	adc	r26, r1
 7cc:	62 1f       	adc	r22, r18
 7ce:	83 9f       	mul	r24, r19
 7d0:	a0 0d       	add	r26, r0
 7d2:	61 1d       	adc	r22, r1
 7d4:	22 1f       	adc	r18, r18
 7d6:	74 9f       	mul	r23, r20
 7d8:	33 27       	eor	r19, r19
 7da:	a0 0d       	add	r26, r0
 7dc:	61 1d       	adc	r22, r1
 7de:	23 1f       	adc	r18, r19
 7e0:	84 9f       	mul	r24, r20
 7e2:	60 0d       	add	r22, r0
 7e4:	21 1d       	adc	r18, r1
 7e6:	82 2f       	mov	r24, r18
 7e8:	76 2f       	mov	r23, r22
 7ea:	6a 2f       	mov	r22, r26
 7ec:	11 24       	eor	r1, r1
 7ee:	9f 57       	subi	r25, 0x7F	; 127
 7f0:	50 40       	sbci	r21, 0x00	; 0
 7f2:	9a f0       	brmi	.+38     	; 0x81a <__mulsf3_pse+0x88>
 7f4:	f1 f0       	breq	.+60     	; 0x832 <__mulsf3_pse+0xa0>
 7f6:	88 23       	and	r24, r24
 7f8:	4a f0       	brmi	.+18     	; 0x80c <__mulsf3_pse+0x7a>
 7fa:	ee 0f       	add	r30, r30
 7fc:	ff 1f       	adc	r31, r31
 7fe:	bb 1f       	adc	r27, r27
 800:	66 1f       	adc	r22, r22
 802:	77 1f       	adc	r23, r23
 804:	88 1f       	adc	r24, r24
 806:	91 50       	subi	r25, 0x01	; 1
 808:	50 40       	sbci	r21, 0x00	; 0
 80a:	a9 f7       	brne	.-22     	; 0x7f6 <__mulsf3_pse+0x64>
 80c:	9e 3f       	cpi	r25, 0xFE	; 254
 80e:	51 05       	cpc	r21, r1
 810:	80 f0       	brcs	.+32     	; 0x832 <__mulsf3_pse+0xa0>
 812:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 816:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 81a:	5f 3f       	cpi	r21, 0xFF	; 255
 81c:	e4 f3       	brlt	.-8      	; 0x816 <__mulsf3_pse+0x84>
 81e:	98 3e       	cpi	r25, 0xE8	; 232
 820:	d4 f3       	brlt	.-12     	; 0x816 <__mulsf3_pse+0x84>
 822:	86 95       	lsr	r24
 824:	77 95       	ror	r23
 826:	67 95       	ror	r22
 828:	b7 95       	ror	r27
 82a:	f7 95       	ror	r31
 82c:	e7 95       	ror	r30
 82e:	9f 5f       	subi	r25, 0xFF	; 255
 830:	c1 f7       	brne	.-16     	; 0x822 <__mulsf3_pse+0x90>
 832:	fe 2b       	or	r31, r30
 834:	88 0f       	add	r24, r24
 836:	91 1d       	adc	r25, r1
 838:	96 95       	lsr	r25
 83a:	87 95       	ror	r24
 83c:	97 f9       	bld	r25, 7
 83e:	08 95       	ret

00000840 <pow>:
 840:	fa 01       	movw	r30, r20
 842:	ee 0f       	add	r30, r30
 844:	ff 1f       	adc	r31, r31
 846:	30 96       	adiw	r30, 0x00	; 0
 848:	21 05       	cpc	r18, r1
 84a:	31 05       	cpc	r19, r1
 84c:	a1 f1       	breq	.+104    	; 0x8b6 <pow+0x76>
 84e:	61 15       	cp	r22, r1
 850:	71 05       	cpc	r23, r1
 852:	61 f4       	brne	.+24     	; 0x86c <pow+0x2c>
 854:	80 38       	cpi	r24, 0x80	; 128
 856:	bf e3       	ldi	r27, 0x3F	; 63
 858:	9b 07       	cpc	r25, r27
 85a:	49 f1       	breq	.+82     	; 0x8ae <pow+0x6e>
 85c:	68 94       	set
 85e:	90 38       	cpi	r25, 0x80	; 128
 860:	81 05       	cpc	r24, r1
 862:	61 f0       	breq	.+24     	; 0x87c <pow+0x3c>
 864:	80 38       	cpi	r24, 0x80	; 128
 866:	bf ef       	ldi	r27, 0xFF	; 255
 868:	9b 07       	cpc	r25, r27
 86a:	41 f0       	breq	.+16     	; 0x87c <pow+0x3c>
 86c:	99 23       	and	r25, r25
 86e:	4a f5       	brpl	.+82     	; 0x8c2 <pow+0x82>
 870:	ff 3f       	cpi	r31, 0xFF	; 255
 872:	e1 05       	cpc	r30, r1
 874:	31 05       	cpc	r19, r1
 876:	21 05       	cpc	r18, r1
 878:	19 f1       	breq	.+70     	; 0x8c0 <pow+0x80>
 87a:	e8 94       	clt
 87c:	08 94       	sec
 87e:	e7 95       	ror	r30
 880:	d9 01       	movw	r26, r18
 882:	aa 23       	and	r26, r26
 884:	29 f4       	brne	.+10     	; 0x890 <pow+0x50>
 886:	ab 2f       	mov	r26, r27
 888:	be 2f       	mov	r27, r30
 88a:	f8 5f       	subi	r31, 0xF8	; 248
 88c:	d0 f3       	brcs	.-12     	; 0x882 <pow+0x42>
 88e:	10 c0       	rjmp	.+32     	; 0x8b0 <pow+0x70>
 890:	ff 5f       	subi	r31, 0xFF	; 255
 892:	70 f4       	brcc	.+28     	; 0x8b0 <pow+0x70>
 894:	a6 95       	lsr	r26
 896:	e0 f7       	brcc	.-8      	; 0x890 <pow+0x50>
 898:	f7 39       	cpi	r31, 0x97	; 151
 89a:	50 f0       	brcs	.+20     	; 0x8b0 <pow+0x70>
 89c:	19 f0       	breq	.+6      	; 0x8a4 <pow+0x64>
 89e:	ff 3a       	cpi	r31, 0xAF	; 175
 8a0:	38 f4       	brcc	.+14     	; 0x8b0 <pow+0x70>
 8a2:	9f 77       	andi	r25, 0x7F	; 127
 8a4:	9f 93       	push	r25
 8a6:	0d d0       	rcall	.+26     	; 0x8c2 <pow+0x82>
 8a8:	0f 90       	pop	r0
 8aa:	07 fc       	sbrc	r0, 7
 8ac:	90 58       	subi	r25, 0x80	; 128
 8ae:	08 95       	ret
 8b0:	46 f0       	brts	.+16     	; 0x8c2 <pow+0x82>
 8b2:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>
 8b6:	60 e0       	ldi	r22, 0x00	; 0
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	80 e8       	ldi	r24, 0x80	; 128
 8bc:	9f e3       	ldi	r25, 0x3F	; 63
 8be:	08 95       	ret
 8c0:	4f e7       	ldi	r20, 0x7F	; 127
 8c2:	9f 77       	andi	r25, 0x7F	; 127
 8c4:	5f 93       	push	r21
 8c6:	4f 93       	push	r20
 8c8:	3f 93       	push	r19
 8ca:	2f 93       	push	r18
 8cc:	0e 94 68 05 	call	0xad0	; 0xad0 <log>
 8d0:	2f 91       	pop	r18
 8d2:	3f 91       	pop	r19
 8d4:	4f 91       	pop	r20
 8d6:	5f 91       	pop	r21
 8d8:	0e 94 b3 03 	call	0x766	; 0x766 <__mulsf3>
 8dc:	0c 94 9c 04 	jmp	0x938	; 0x938 <exp>

000008e0 <round>:
 8e0:	0e 94 92 03 	call	0x724	; 0x724 <__fp_splitA>
 8e4:	e8 f0       	brcs	.+58     	; 0x920 <__stack+0x21>
 8e6:	9e 37       	cpi	r25, 0x7E	; 126
 8e8:	e8 f0       	brcs	.+58     	; 0x924 <__stack+0x25>
 8ea:	96 39       	cpi	r25, 0x96	; 150
 8ec:	b8 f4       	brcc	.+46     	; 0x91c <__stack+0x1d>
 8ee:	9e 38       	cpi	r25, 0x8E	; 142
 8f0:	48 f4       	brcc	.+18     	; 0x904 <__stack+0x5>
 8f2:	67 2f       	mov	r22, r23
 8f4:	78 2f       	mov	r23, r24
 8f6:	88 27       	eor	r24, r24
 8f8:	98 5f       	subi	r25, 0xF8	; 248
 8fa:	f9 cf       	rjmp	.-14     	; 0x8ee <round+0xe>
 8fc:	86 95       	lsr	r24
 8fe:	77 95       	ror	r23
 900:	67 95       	ror	r22
 902:	93 95       	inc	r25
 904:	95 39       	cpi	r25, 0x95	; 149
 906:	d0 f3       	brcs	.-12     	; 0x8fc <round+0x1c>
 908:	b6 2f       	mov	r27, r22
 90a:	b1 70       	andi	r27, 0x01	; 1
 90c:	6b 0f       	add	r22, r27
 90e:	71 1d       	adc	r23, r1
 910:	81 1d       	adc	r24, r1
 912:	20 f4       	brcc	.+8      	; 0x91c <__stack+0x1d>
 914:	87 95       	ror	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	93 95       	inc	r25
 91c:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_mintl>
 920:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_mpack>
 924:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 928:	29 f4       	brne	.+10     	; 0x934 <__stack+0x35>
 92a:	16 f0       	brts	.+4      	; 0x930 <__stack+0x31>
 92c:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 930:	0c 94 ac 03 	jmp	0x758	; 0x758 <__fp_zero>
 934:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>

00000938 <exp>:
 938:	0e 94 92 03 	call	0x724	; 0x724 <__fp_splitA>
 93c:	a8 f3       	brcs	.-22     	; 0x928 <__stack+0x29>
 93e:	96 38       	cpi	r25, 0x86	; 134
 940:	a0 f7       	brcc	.-24     	; 0x92a <__stack+0x2b>
 942:	07 f8       	bld	r0, 7
 944:	0f 92       	push	r0
 946:	e8 94       	clt
 948:	2b e3       	ldi	r18, 0x3B	; 59
 94a:	3a ea       	ldi	r19, 0xAA	; 170
 94c:	48 eb       	ldi	r20, 0xB8	; 184
 94e:	5f e7       	ldi	r21, 0x7F	; 127
 950:	0e 94 c9 03 	call	0x792	; 0x792 <__mulsf3_pse>
 954:	0f 92       	push	r0
 956:	0f 92       	push	r0
 958:	0f 92       	push	r0
 95a:	4d b7       	in	r20, 0x3d	; 61
 95c:	5e b7       	in	r21, 0x3e	; 62
 95e:	0f 92       	push	r0
 960:	0e 94 b0 05 	call	0xb60	; 0xb60 <modf>
 964:	e8 e6       	ldi	r30, 0x68	; 104
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_powser>
 96c:	4f 91       	pop	r20
 96e:	5f 91       	pop	r21
 970:	ef 91       	pop	r30
 972:	ff 91       	pop	r31
 974:	e5 95       	asr	r30
 976:	ee 1f       	adc	r30, r30
 978:	ff 1f       	adc	r31, r31
 97a:	49 f0       	breq	.+18     	; 0x98e <exp+0x56>
 97c:	fe 57       	subi	r31, 0x7E	; 126
 97e:	e0 68       	ori	r30, 0x80	; 128
 980:	44 27       	eor	r20, r20
 982:	ee 0f       	add	r30, r30
 984:	44 1f       	adc	r20, r20
 986:	fa 95       	dec	r31
 988:	e1 f7       	brne	.-8      	; 0x982 <exp+0x4a>
 98a:	41 95       	neg	r20
 98c:	55 0b       	sbc	r21, r21
 98e:	0e 94 2a 05 	call	0xa54	; 0xa54 <ldexp>
 992:	0f 90       	pop	r0
 994:	07 fe       	sbrs	r0, 7
 996:	0c 94 1e 05 	jmp	0xa3c	; 0xa3c <inverse>
 99a:	08 95       	ret

0000099c <__fp_mintl>:
 99c:	88 23       	and	r24, r24
 99e:	71 f4       	brne	.+28     	; 0x9bc <__fp_mintl+0x20>
 9a0:	77 23       	and	r23, r23
 9a2:	21 f0       	breq	.+8      	; 0x9ac <__fp_mintl+0x10>
 9a4:	98 50       	subi	r25, 0x08	; 8
 9a6:	87 2b       	or	r24, r23
 9a8:	76 2f       	mov	r23, r22
 9aa:	07 c0       	rjmp	.+14     	; 0x9ba <__fp_mintl+0x1e>
 9ac:	66 23       	and	r22, r22
 9ae:	11 f4       	brne	.+4      	; 0x9b4 <__fp_mintl+0x18>
 9b0:	99 27       	eor	r25, r25
 9b2:	0d c0       	rjmp	.+26     	; 0x9ce <__fp_mintl+0x32>
 9b4:	90 51       	subi	r25, 0x10	; 16
 9b6:	86 2b       	or	r24, r22
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	60 e0       	ldi	r22, 0x00	; 0
 9bc:	2a f0       	brmi	.+10     	; 0x9c8 <__fp_mintl+0x2c>
 9be:	9a 95       	dec	r25
 9c0:	66 0f       	add	r22, r22
 9c2:	77 1f       	adc	r23, r23
 9c4:	88 1f       	adc	r24, r24
 9c6:	da f7       	brpl	.-10     	; 0x9be <__fp_mintl+0x22>
 9c8:	88 0f       	add	r24, r24
 9ca:	96 95       	lsr	r25
 9cc:	87 95       	ror	r24
 9ce:	97 f9       	bld	r25, 7
 9d0:	08 95       	ret

000009d2 <__fp_mpack>:
 9d2:	9f 3f       	cpi	r25, 0xFF	; 255
 9d4:	31 f0       	breq	.+12     	; 0x9e2 <__fp_mpack_finite+0xc>

000009d6 <__fp_mpack_finite>:
 9d6:	91 50       	subi	r25, 0x01	; 1
 9d8:	20 f4       	brcc	.+8      	; 0x9e2 <__fp_mpack_finite+0xc>
 9da:	87 95       	ror	r24
 9dc:	77 95       	ror	r23
 9de:	67 95       	ror	r22
 9e0:	b7 95       	ror	r27
 9e2:	88 0f       	add	r24, r24
 9e4:	91 1d       	adc	r25, r1
 9e6:	96 95       	lsr	r25
 9e8:	87 95       	ror	r24
 9ea:	97 f9       	bld	r25, 7
 9ec:	08 95       	ret

000009ee <__fp_powser>:
 9ee:	df 93       	push	r29
 9f0:	cf 93       	push	r28
 9f2:	1f 93       	push	r17
 9f4:	0f 93       	push	r16
 9f6:	ff 92       	push	r15
 9f8:	ef 92       	push	r14
 9fa:	df 92       	push	r13
 9fc:	7b 01       	movw	r14, r22
 9fe:	8c 01       	movw	r16, r24
 a00:	68 94       	set
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <__fp_powser+0x22>
 a04:	da 2e       	mov	r13, r26
 a06:	ef 01       	movw	r28, r30
 a08:	0e 94 c6 03 	call	0x78c	; 0x78c <__mulsf3x>
 a0c:	fe 01       	movw	r30, r28
 a0e:	e8 94       	clt
 a10:	a5 91       	lpm	r26, Z+
 a12:	25 91       	lpm	r18, Z+
 a14:	35 91       	lpm	r19, Z+
 a16:	45 91       	lpm	r20, Z+
 a18:	55 91       	lpm	r21, Z+
 a1a:	a6 f3       	brts	.-24     	; 0xa04 <__fp_powser+0x16>
 a1c:	ef 01       	movw	r28, r30
 a1e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__addsf3x>
 a22:	fe 01       	movw	r30, r28
 a24:	97 01       	movw	r18, r14
 a26:	a8 01       	movw	r20, r16
 a28:	da 94       	dec	r13
 a2a:	69 f7       	brne	.-38     	; 0xa06 <__fp_powser+0x18>
 a2c:	df 90       	pop	r13
 a2e:	ef 90       	pop	r14
 a30:	ff 90       	pop	r15
 a32:	0f 91       	pop	r16
 a34:	1f 91       	pop	r17
 a36:	cf 91       	pop	r28
 a38:	df 91       	pop	r29
 a3a:	08 95       	ret

00000a3c <inverse>:
 a3c:	9b 01       	movw	r18, r22
 a3e:	ac 01       	movw	r20, r24
 a40:	60 e0       	ldi	r22, 0x00	; 0
 a42:	70 e0       	ldi	r23, 0x00	; 0
 a44:	80 e8       	ldi	r24, 0x80	; 128
 a46:	9f e3       	ldi	r25, 0x3F	; 63
 a48:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__divsf3>
 a4c:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>
 a50:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_mpack>

00000a54 <ldexp>:
 a54:	0e 94 92 03 	call	0x724	; 0x724 <__fp_splitA>
 a58:	d8 f3       	brcs	.-10     	; 0xa50 <inverse+0x14>
 a5a:	99 23       	and	r25, r25
 a5c:	c9 f3       	breq	.-14     	; 0xa50 <inverse+0x14>
 a5e:	94 0f       	add	r25, r20
 a60:	51 1d       	adc	r21, r1
 a62:	a3 f3       	brvs	.-24     	; 0xa4c <inverse+0x10>
 a64:	91 50       	subi	r25, 0x01	; 1
 a66:	50 40       	sbci	r21, 0x00	; 0
 a68:	94 f0       	brlt	.+36     	; 0xa8e <ldexp+0x3a>
 a6a:	59 f0       	breq	.+22     	; 0xa82 <ldexp+0x2e>
 a6c:	88 23       	and	r24, r24
 a6e:	32 f0       	brmi	.+12     	; 0xa7c <ldexp+0x28>
 a70:	66 0f       	add	r22, r22
 a72:	77 1f       	adc	r23, r23
 a74:	88 1f       	adc	r24, r24
 a76:	91 50       	subi	r25, 0x01	; 1
 a78:	50 40       	sbci	r21, 0x00	; 0
 a7a:	c1 f7       	brne	.-16     	; 0xa6c <ldexp+0x18>
 a7c:	9e 3f       	cpi	r25, 0xFE	; 254
 a7e:	51 05       	cpc	r21, r1
 a80:	2c f7       	brge	.-54     	; 0xa4c <inverse+0x10>
 a82:	88 0f       	add	r24, r24
 a84:	91 1d       	adc	r25, r1
 a86:	96 95       	lsr	r25
 a88:	87 95       	ror	r24
 a8a:	97 f9       	bld	r25, 7
 a8c:	08 95       	ret
 a8e:	5f 3f       	cpi	r21, 0xFF	; 255
 a90:	ac f0       	brlt	.+42     	; 0xabc <ldexp+0x68>
 a92:	98 3e       	cpi	r25, 0xE8	; 232
 a94:	9c f0       	brlt	.+38     	; 0xabc <ldexp+0x68>
 a96:	bb 27       	eor	r27, r27
 a98:	86 95       	lsr	r24
 a9a:	77 95       	ror	r23
 a9c:	67 95       	ror	r22
 a9e:	b7 95       	ror	r27
 aa0:	08 f4       	brcc	.+2      	; 0xaa4 <ldexp+0x50>
 aa2:	b1 60       	ori	r27, 0x01	; 1
 aa4:	93 95       	inc	r25
 aa6:	c1 f7       	brne	.-16     	; 0xa98 <ldexp+0x44>
 aa8:	bb 0f       	add	r27, r27
 aaa:	58 f7       	brcc	.-42     	; 0xa82 <ldexp+0x2e>
 aac:	11 f4       	brne	.+4      	; 0xab2 <ldexp+0x5e>
 aae:	60 ff       	sbrs	r22, 0
 ab0:	e8 cf       	rjmp	.-48     	; 0xa82 <ldexp+0x2e>
 ab2:	6f 5f       	subi	r22, 0xFF	; 255
 ab4:	7f 4f       	sbci	r23, 0xFF	; 255
 ab6:	8f 4f       	sbci	r24, 0xFF	; 255
 ab8:	9f 4f       	sbci	r25, 0xFF	; 255
 aba:	e3 cf       	rjmp	.-58     	; 0xa82 <ldexp+0x2e>
 abc:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_szero>
 ac0:	16 f0       	brts	.+4      	; 0xac6 <ldexp+0x72>
 ac2:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_mpack>
 ac6:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_nan>
 aca:	68 94       	set
 acc:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__fp_inf>

00000ad0 <log>:
 ad0:	0e 94 92 03 	call	0x724	; 0x724 <__fp_splitA>
 ad4:	a8 f3       	brcs	.-22     	; 0xac0 <ldexp+0x6c>
 ad6:	99 23       	and	r25, r25
 ad8:	c1 f3       	breq	.-16     	; 0xaca <ldexp+0x76>
 ada:	ae f3       	brts	.-22     	; 0xac6 <ldexp+0x72>
 adc:	df 93       	push	r29
 ade:	cf 93       	push	r28
 ae0:	1f 93       	push	r17
 ae2:	0f 93       	push	r16
 ae4:	ff 92       	push	r15
 ae6:	c9 2f       	mov	r28, r25
 ae8:	dd 27       	eor	r29, r29
 aea:	88 23       	and	r24, r24
 aec:	2a f0       	brmi	.+10     	; 0xaf8 <log+0x28>
 aee:	21 97       	sbiw	r28, 0x01	; 1
 af0:	66 0f       	add	r22, r22
 af2:	77 1f       	adc	r23, r23
 af4:	88 1f       	adc	r24, r24
 af6:	da f7       	brpl	.-10     	; 0xaee <log+0x1e>
 af8:	20 e0       	ldi	r18, 0x00	; 0
 afa:	30 e0       	ldi	r19, 0x00	; 0
 afc:	40 e8       	ldi	r20, 0x80	; 128
 afe:	5f eb       	ldi	r21, 0xBF	; 191
 b00:	9f e3       	ldi	r25, 0x3F	; 63
 b02:	88 39       	cpi	r24, 0x98	; 152
 b04:	20 f0       	brcs	.+8      	; 0xb0e <log+0x3e>
 b06:	80 3e       	cpi	r24, 0xE0	; 224
 b08:	38 f0       	brcs	.+14     	; 0xb18 <log+0x48>
 b0a:	21 96       	adiw	r28, 0x01	; 1
 b0c:	8f 77       	andi	r24, 0x7F	; 127
 b0e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__addsf3>
 b12:	e0 e9       	ldi	r30, 0x90	; 144
 b14:	f0 e0       	ldi	r31, 0x00	; 0
 b16:	04 c0       	rjmp	.+8      	; 0xb20 <log+0x50>
 b18:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__addsf3>
 b1c:	ed eb       	ldi	r30, 0xBD	; 189
 b1e:	f0 e0       	ldi	r31, 0x00	; 0
 b20:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__fp_powser>
 b24:	8b 01       	movw	r16, r22
 b26:	be 01       	movw	r22, r28
 b28:	ec 01       	movw	r28, r24
 b2a:	fb 2e       	mov	r15, r27
 b2c:	6f 57       	subi	r22, 0x7F	; 127
 b2e:	71 09       	sbc	r23, r1
 b30:	75 95       	asr	r23
 b32:	77 1f       	adc	r23, r23
 b34:	88 0b       	sbc	r24, r24
 b36:	99 0b       	sbc	r25, r25
 b38:	0e 94 03 03 	call	0x606	; 0x606 <__floatsisf>
 b3c:	28 e1       	ldi	r18, 0x18	; 24
 b3e:	32 e7       	ldi	r19, 0x72	; 114
 b40:	41 e3       	ldi	r20, 0x31	; 49
 b42:	5f e3       	ldi	r21, 0x3F	; 63
 b44:	0e 94 c6 03 	call	0x78c	; 0x78c <__mulsf3x>
 b48:	af 2d       	mov	r26, r15
 b4a:	98 01       	movw	r18, r16
 b4c:	ae 01       	movw	r20, r28
 b4e:	ff 90       	pop	r15
 b50:	0f 91       	pop	r16
 b52:	1f 91       	pop	r17
 b54:	cf 91       	pop	r28
 b56:	df 91       	pop	r29
 b58:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__addsf3x>
 b5c:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_round>

00000b60 <modf>:
 b60:	fa 01       	movw	r30, r20
 b62:	dc 01       	movw	r26, r24
 b64:	aa 0f       	add	r26, r26
 b66:	bb 1f       	adc	r27, r27
 b68:	9b 01       	movw	r18, r22
 b6a:	ac 01       	movw	r20, r24
 b6c:	bf 57       	subi	r27, 0x7F	; 127
 b6e:	28 f4       	brcc	.+10     	; 0xb7a <modf+0x1a>
 b70:	22 27       	eor	r18, r18
 b72:	33 27       	eor	r19, r19
 b74:	44 27       	eor	r20, r20
 b76:	50 78       	andi	r21, 0x80	; 128
 b78:	20 c0       	rjmp	.+64     	; 0xbba <modf+0x5a>
 b7a:	b7 51       	subi	r27, 0x17	; 23
 b7c:	90 f4       	brcc	.+36     	; 0xba2 <modf+0x42>
 b7e:	ab 2f       	mov	r26, r27
 b80:	00 24       	eor	r0, r0
 b82:	46 95       	lsr	r20
 b84:	37 95       	ror	r19
 b86:	27 95       	ror	r18
 b88:	01 1c       	adc	r0, r1
 b8a:	a3 95       	inc	r26
 b8c:	d2 f3       	brmi	.-12     	; 0xb82 <modf+0x22>
 b8e:	00 20       	and	r0, r0
 b90:	71 f0       	breq	.+28     	; 0xbae <modf+0x4e>
 b92:	22 0f       	add	r18, r18
 b94:	33 1f       	adc	r19, r19
 b96:	44 1f       	adc	r20, r20
 b98:	b3 95       	inc	r27
 b9a:	da f3       	brmi	.-10     	; 0xb92 <modf+0x32>
 b9c:	0e d0       	rcall	.+28     	; 0xbba <modf+0x5a>
 b9e:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__subsf3>
 ba2:	61 30       	cpi	r22, 0x01	; 1
 ba4:	71 05       	cpc	r23, r1
 ba6:	a0 e8       	ldi	r26, 0x80	; 128
 ba8:	8a 07       	cpc	r24, r26
 baa:	b9 46       	sbci	r27, 0x69	; 105
 bac:	30 f4       	brcc	.+12     	; 0xbba <modf+0x5a>
 bae:	9b 01       	movw	r18, r22
 bb0:	ac 01       	movw	r20, r24
 bb2:	66 27       	eor	r22, r22
 bb4:	77 27       	eor	r23, r23
 bb6:	88 27       	eor	r24, r24
 bb8:	90 78       	andi	r25, 0x80	; 128
 bba:	30 96       	adiw	r30, 0x00	; 0
 bbc:	21 f0       	breq	.+8      	; 0xbc6 <modf+0x66>
 bbe:	20 83       	st	Z, r18
 bc0:	31 83       	std	Z+1, r19	; 0x01
 bc2:	42 83       	std	Z+2, r20	; 0x02
 bc4:	53 83       	std	Z+3, r21	; 0x03
 bc6:	08 95       	ret

00000bc8 <__umulhisi3>:
 bc8:	a2 9f       	mul	r26, r18
 bca:	b0 01       	movw	r22, r0
 bcc:	b3 9f       	mul	r27, r19
 bce:	c0 01       	movw	r24, r0
 bd0:	a3 9f       	mul	r26, r19
 bd2:	70 0d       	add	r23, r0
 bd4:	81 1d       	adc	r24, r1
 bd6:	11 24       	eor	r1, r1
 bd8:	91 1d       	adc	r25, r1
 bda:	b2 9f       	mul	r27, r18
 bdc:	70 0d       	add	r23, r0
 bde:	81 1d       	adc	r24, r1
 be0:	11 24       	eor	r1, r1
 be2:	91 1d       	adc	r25, r1
 be4:	08 95       	ret

00000be6 <_exit>:
 be6:	f8 94       	cli

00000be8 <__stop_program>:
 be8:	ff cf       	rjmp	.-2      	; 0xbe8 <__stop_program>
